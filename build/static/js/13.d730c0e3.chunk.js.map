{"version":3,"sources":["components/right.js","components/Chart/ChartCard.js","components/ContextNav.js","components/Typography/PageTitle.js","components/Portfolio/MenuIcon.js","components/Portfolio/MenuItem.js","components/Portfolio/Left.js","components/address-modal.js","delegation/utils.js","delegation/1.delegatestx.js","delegation/getStackerInfo.js","delegation/readOnlyFunciton.js","pages/MyPortfolio.js"],"names":["Right","prices","useSelector","state","className","liquidStxSupplyResult","stxusd","btcusd","toLocaleString","useGrouping","Chart","children","title","ContextNav","menuItems","buttonIcon","useState","isContextMenuOpen","setIsContextMenuOpen","onClick","isOpen","onClose","PageTitle","left","right","show","MenuIcon","aria-label","aria-haspopup","MenuItems","stx","btc","username","dispatch","useDispatch","deleteAddress","a","console","log","axios","method","url","process","data","stxAddress","btcAddress","makeTheCal","payload","type","userDetails","Left","Date","toLocaleDateString","Modals","openAddressModal","closeAddressModal","openManualAddressModal","closeManualAddressModal","isAddressModalOpen","isManualAddressModalOpen","addBTCAddress","addAddress","setStxAddress","user","placeholder","onChange","e","target","value","map","index","key","width","size","decodeBtcAddress","hashMode","startsWith","address","fromBech32","length","AddressHashMode","SerializeP2WSH","SerializeP2WPKH","fromBase58Check","version","SerializeP2PKH","SerializeP2SH","Error","getAddressHashMode","hash","Buffer","buffer","network","StacksTestnet","poxAddr","amountSTX","delegateToo","burnHt","delegateStx","setTxLoader","hashModeBuffer","bufferCV","BN","toArrayLike","hashbytes","poxAddressCV","tupleCV","options","contractAddress","contractName","functionName","functionArgs","uintCV","standardPrincipalCV","noneCV","appDetails","name","icon","logo","finished","txId","txRaw","localStorage","getItem","headers","stacker","getPerson","_profile","tx","alert","openContractCall","delegateSTX","SmartContractsApi","Configuration","basePath","testnet","senderAddress","callReadOnlyFunction","MyPortfolio","txs","setTxs","balance","total_sent","total_received","total_fees_sent","total_miner_rewards_received","lock_tx_id","locked","lock_height","burnchain_lock_height","burnchain_unlock_height","portfolio","setPortfolio","addressValue","setaddressValue","message","showBTCMessage","addaddress","showAddAddress","dailyReward","setDailyReward","dateForGraph","setDateForGraph","rewardForGraph","setRewardForGraph","txLoader","setIsAddressModalOpen","setIsManualAddressModalOpen","setSTX","lineOptions","labels","datasets","backgroundColor","borderColor","fill","responsive","tooltips","mode","intersect","hover","scales","x","display","scaleLabel","labelString","y","legend","useEffect","get","result","values","post","graph","date","reward","claimReward","status","vs","i","push","fetchData","getStackerInfor","claim","onStack","fee","btcRewardHistoryCSV","then","response","FileDownload","totalBTCReward","pendingBTCReward","ChartCard","from","to","parseFloat","toFixed","reduce","b"],"mappings":"uIAAA,8DAEaA,EAAQ,WACnB,IAAMC,EAASC,aAAY,SAACC,GAAD,OAAWA,EAAMF,UAC5C,OACE,oCACE,yBAAKG,UAAU,kBACb,uBAAGA,UAAU,QAAb,gBACA,6BACE,uBAAGA,UAAU,wCACVH,EAAOI,sBADV,QAEK,IACL,8BACE,0BAAMD,UAAU,mBACb,KAEEH,EAAOK,OAASL,EAAOI,sBACxBJ,EAAOM,QACPC,eAAe,WAAY,CAAEC,aAAa,KACtC,IAPV,QAQQ,IACN,0BAAML,UAAU,kBACb,KAECH,EAAOK,OAASL,EAAOI,uBACvBG,eAAe,WAAY,CAAEC,aAAa,KACtC,IAdV,Y,iCCZV,oBAWeC,IATf,YAAqC,IAApBC,EAAmB,EAAnBA,SAAUC,EAAS,EAATA,MACzB,OACE,yBAAKR,UAAU,gDACb,uBAAGA,UAAU,oCAAoCQ,GAChDD,K,qECiBQE,IApBf,YAAgD,IAA1BC,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,WAAc,EACKC,oBAAS,GADd,mBACtCC,EADsC,KACnBC,EADmB,KAK7C,OACE,yBAAKd,UAAU,8BACb,4BAAQe,QALZ,WACED,GAAsBD,KAIkBF,GAEtC,kBAAC,WAAD,CACEX,UAAU,wBACVgB,OAAQH,EACRI,QAAS,kBAAMH,GAAqB,KAEnCJ,M,gCCjBT,oBAuBeQ,IArBf,YAA+C,IAA1BX,EAAyB,EAAzBA,SAAUY,EAAe,EAAfA,KAAMC,EAAS,EAATA,MACnC,OAAIb,EAEA,yBAAKP,UAAU,qHACb,wBAAIqB,KAAMd,EAAUP,UAAU,iBAC3BO,IAMJA,OAAL,EAEI,yBAAKP,UAAU,gIACb,6BAAMmB,GACN,6BAAMC,M,sKCdDE,EAAW,WACtB,OACE,oCACE,kBAAC,IAAD,CACEC,aAAW,UACXC,gBAAc,OACdxB,UAAU,2B,gBCFZyB,EAAY,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,IAAKC,EAAoB,EAApBA,IAAKC,EAAe,EAAfA,SACvBC,EAAWC,cAEXC,EAAa,uCAAG,4BAAAC,EAAA,6DACpBC,QAAQC,IAAIN,EAAUF,EAAKC,GADP,SAEKQ,IAAM,CAC7BC,OAAQ,SACRC,IAAI,GAAD,OAAKC,GAAL,cACHC,KAAM,CACJX,SAAUA,EACVY,WAAYd,EACZe,WAAYd,KARI,OAEde,EAFc,OAWpBT,QAAQC,IAAIQ,GACZb,EAAS,CAAEc,QAASD,EAAWH,KAAMK,KAAMC,MAZvB,2CAAH,qDAenB,OACE,oCACE,wBACE7C,UAAU,oFACVe,QAASgB,GAET,kBAAC,IAAD,CAAU/B,UAAU,cACpB,yCAEF,wBAAIA,UAAU,qFACZ,kBAAC,IAAD,CAAQA,UAAU,cAClB,iDClCF8C,EAAO,WACX,OACE,oCACE,wBAAI9C,UAAU,iBAAd,gBACA,8BAAM,IAAI+C,MAAOC,wB,sDCyHRC,MA/Gf,YAWI,IAVFC,EAUC,EAVDA,iBACAC,EASC,EATDA,kBACAC,EAQC,EARDA,uBACAC,EAOC,EAPDA,wBACAC,EAMC,EANDA,mBACAC,EAKC,EALDA,yBACAC,EAIC,EAJDA,cACAC,EAGC,EAHDA,WAEAC,GACC,EAFDlB,WAEC,EADDkB,eAEM3D,EAAQD,aAAY,SAACC,GAAD,OAAWA,EAAM4D,QAC3C,OACE,oCACE,yBAAK3D,UAAU,kBACb,6BACE,kBAAC,SAAD,CAAQe,QAASmC,GAAjB,kBAEF,6BACE,kBAAC,SAAD,CAAQnC,QAASqC,GAAjB,yBAGF,kBAAC,QAAD,CAAOpC,OAAQsC,EAAoBrC,QAASkC,GAC1C,kBAAC,cAAD,CAAanD,UAAU,qBACrB,wBAAIA,UAAU,iBAAd,oBACA,kFAEF,kBAAC,YAAD,KACE,yBAAKA,UAAU,QACb,kBAAC,QAAD,0BACA,yBAAKA,UAAU,sBACb,kBAAC,QAAD,CACEA,UAAU,sBACV4D,YAAY,0BACZC,SAAU,SAACC,GACTN,EAAcM,EAAEC,OAAOC,UAG3B,4BACEhE,UAAU,4BACVe,QAAS0C,GAFX,WAWR,kBAAC,QAAD,CACEzC,OAAQuC,EACRtC,QAASoC,GAET,kBAAC,YAAD,KACE,yBAAKrD,UAAU,QACb,kBAAC,QAAD,CAAOA,UAAU,WAAjB,wBACA,yBAAKA,UAAU,sBACb,kBAAC,QAAD,CACEA,UAAU,sBACV4D,YAAY,0BACZC,SAAU,SAACC,GACTJ,EAAcI,EAAEC,OAAOC,UAG3B,4BACEhE,UAAU,4BACVe,QAAS0C,GAFX,QAOF,wBAAIzD,UAAU,sBAAd,mBACA,uBAAGA,UAAU,2BAAb,sFAIA,wBAAIA,UAAU,cACXD,EAAMyC,WAAWyB,KAAI,SAACD,EAAOE,GAC5B,OACE,wBACElE,UAAU,kEACVmE,IAAKD,GAEL,yBAAKlE,UAAU,6CACb,kBAAC,UAAD,CAASoE,MAAM,OACf,0BAAMpE,UAAU,QAAQgE,IAE1B,yBAAKhE,UAAU,gEACb,gCACE,kBAAC,IAAD,CAAQqE,KAAM,MAEhB,gCACE,kBAAC,IAAD,CAAUA,KAAM,YAO5B,4BAAQrE,UAAU,yDAAlB,mBACkB,kBAAC,IAAD,a,6HCvFzB,SAASsE,EAAiB7B,GAC/B,IAAM8B,EA1BD,SAA4B9B,GACjC,GAAIA,EAAW+B,WAAW,QAAU/B,EAAW+B,WAAW,OAExD,OAAoB,KADHC,UAAQC,WAAWjC,GAA5BF,KACCoC,OACAC,IAAgBC,eAEhBD,IAAgBE,gBAIzB,OADoBL,UAAQM,gBAAgBtC,GAApCuC,SAEN,KAAK,EAEL,KAAK,IACH,OAAOJ,IAAgBK,eACzB,KAAK,EAEL,KAAK,IACH,OAAOL,IAAgBM,cACzB,QACE,MAAM,IAAIC,MAAM,gCAMLC,CAAmB3C,GACpC,OAAIA,EAAW+B,WAAW,QAAU/B,EAAW+B,WAAW,OAEjD,CACLD,WACAhC,KAHekC,UAAQC,WAAWjC,GAA5BF,MAOD,CACLgC,WACAhC,KAHekC,UAAQM,gBAAgBtC,GAAjC4C,M,8BCvBNC,EAASC,IAAOD,OAChBE,EAAU,IAAIC,I,4CAEpB,iDAAAzD,EAAA,6DACE0D,EADF,EACEA,QACAC,EAFF,EAEEA,UAFF,EAGEC,YAHF,EAIEC,OAJF,EAKEC,YACAC,EANF,EAMEA,YACAnE,EAPF,EAOEA,SAPF,EAS6B0C,EAAiBoB,GAApCnB,EATV,EASUA,SAAUhC,EATpB,EASoBA,KACZyD,EAAiBC,YAAS,IAAIC,IAAG3B,EAAU,IAAI4B,YAAYb,IAC3Dc,EAAYH,YAAS1D,GACrB8D,EAAeC,YAAQ,CAC3BF,YACApB,QAASgB,IAEX/D,QAAQC,IAAImE,EAAa9D,MAEnBgE,EAAU,CACdC,gBAAiB,gCACjBC,aAAc,MACdC,aAAc,eACdC,aAAc,CACZC,YAAOjB,GACPkB,YAAoB,6CACpBC,cACAA,eAGFC,WAAY,CACVC,KAAM,cACNC,KAAM,CAAEC,WAEV1B,UACA2B,SAAS,WAAD,4BAAE,WAAO5E,GAAP,SAAAP,EAAA,sDACRC,QAAQC,IAAI,SAAUK,EAAK6E,MAC3BnF,QAAQC,IAAI,UAAWK,EAAK8E,OAC5BtB,GAAY,GAEZ,IACE9D,QAAQC,IAAIoF,aAAaC,QAAQ,SACjCpF,IAAM,CACJE,IAAI,GAAD,OAAKC,GAAL,uBACHF,OAAQ,OACRoF,QAAS,CACP,eAAgBF,aAAaC,QAAQ,QACrC,eAAgB,oBAElBhF,KAAM,CACJX,WACA6F,QAASC,cAAYC,SAASnF,WAC9BmD,YACAyB,KAAM7E,EAAKqF,MAGf7B,GAAY,GACZ8B,MAAM,gEAAD,OAC6DtF,EAAK6E,OAEvE,MAAOtD,GACPiC,GAAY,GACZ8B,MAAM,UA3BA,2CAAF,mDAAC,IAgCX5F,QAAQC,IAAIqE,GAlEd,UAmEQuB,YAAiBvB,GAnEzB,6C,sBAsEewB,M,gFC/ETvC,GCLW,IAAIwC,oBACnB,IAAIC,gBAAc,CAChBC,SAAU,+CDGE,IAAIzC,K,4CAIL,8BAAAzD,EAAA,6DACLmG,EAAYT,cAAYC,SAASnF,WAAjC2F,QACRlG,QAAQC,IAAIwF,cAAYC,SAASnF,YAC3B+D,EAAU,CACdC,gBAAiB,gCACjBC,aAAc,MACdC,aAAc,mBACdC,aAAc,CAACE,YAAoBsB,IACnCC,cAAeD,EASf3C,WAEFvD,QAAQC,IAAI,YAnBC,SAoBPmG,YAAqB9B,GApBd,4C,sBE8pBA+B,UA7oBf,WACE,IAAMzI,EAASC,aAAY,SAACC,GAAD,OAAWA,EAAMF,UACtCE,EAAQD,aAAY,SAACC,GAAD,OAAWA,EAAM4D,QAFtB,EAGC/C,mBAAS,IAHV,mBAGd2H,EAHc,KAGTC,EAHS,OAIa5H,mBAAS,CACzC6H,QAAS,IACTC,WAAY,IACZC,eAAgB,IAChBC,gBAAiB,IACjBC,6BAA8B,IAC9BC,WAAY,GACZC,OAAQ,IACRC,YAAa,EACbC,sBAAuB,EACvBC,wBAAyB,IAdN,mBAIdC,EAJc,KAIHC,EAJG,OAgBmBxI,mBAAS,IAhB5B,mBAgBdyI,EAhBc,KAgBAC,EAhBA,OAiBe1I,mBAAS,IAjBxB,mBAiBd4B,EAjBc,KAiBFkB,EAjBE,OAkBe9C,mBAASb,EAAM0C,WAAW,IAlBzC,mBAkBdA,EAlBc,KAkBFe,EAlBE,OAmBa5C,oBAAS,GAnBtB,mBAmBd2I,EAnBc,KAmBLC,EAnBK,OAoBgB5I,oBAAS,GApBzB,mBAoBd6I,EApBc,KAoBFC,EApBE,OAqBiB9I,mBAAS,GArB1B,oBAqBd+I,GArBc,MAqBDC,GArBC,SAsBmBhJ,mBAAS,IAtB5B,qBAsBdiJ,GAtBc,MAsBAC,GAtBA,SAuBuBlJ,mBAAS,IAvBhC,qBAuBdmJ,GAvBc,MAuBEC,GAvBF,SAwBWpJ,oBAAS,GAxBpB,qBAwBdqJ,GAxBc,MAwBJlE,GAxBI,SA2B+BnF,oBAAS,GA3BxC,qBA2Bd0C,GA3Bc,MA2BM4G,GA3BN,SAuC2CtJ,oBAC9D,GAxCmB,qBAuCd2C,GAvCc,MAuCY4G,GAvCZ,SAmDCvJ,mBAAS,GAnDV,qBAmDdc,GAnDc,MAmDT0I,GAnDS,MAqDfC,GAAc,CAClB9H,KAAM,CACJ+H,OAAQT,GACRU,SAAU,CACR,CACEC,gBAAiB,UACjBC,YAAa,UACblI,KAAMwH,GACNW,MAAM,KAIZnE,QAAS,CACPoE,YAAY,EACZC,SAAU,CACRC,KAAM,QACNC,WAAW,GAEbC,MAAO,CACLF,KAAM,UACNC,WAAW,GAEbE,OAAQ,CACNC,EAAG,CACDC,SAAS,EACTC,WAAY,CACVD,SAAS,EACTE,YAAa,UAGjBC,EAAG,CACDH,SAAS,EACTC,WAAY,CACVD,SAAS,EACTE,YAAa,YAKrBE,OAAQ,CACNJ,SAAS,IAIbK,qBAAU,WACR,IAAMhJ,EAAOmF,eAEE,uCAAG,8CAAA1F,EAAA,6DACVyC,EAAUlC,EAAKoF,SAASnF,WAAW2F,QADzB,SAEKhG,IAAMqJ,IAAN,wEAC8C/G,EAD9C,cAFL,cAEVgH,EAFU,OAKhBrC,EAAaqC,EAAOlJ,KAAKb,KALT,SAOKS,IAAM,CACzBE,IAAI,GAAD,OAAKC,GAAL,qBACHF,OAAQ,OACRG,KAAMxC,IAVQ,cAOV2L,EAPU,QAaLnJ,KAAKgG,KAAKC,EAAOkD,EAAOnJ,KAAKgG,KAbxB,UAeIpG,IAAMwJ,KAAN,UACfrJ,GADe,+BAElB,CAAEV,SAAU7B,EAAM6B,WAjBJ,eAeVgK,EAfU,OAoBhB9B,GACE8B,EAAMrJ,KAAKsJ,KAAK5H,KAAI,SAACD,GAGnB,OAFA/B,QAAQC,IAAI8B,GACD,IAAIjB,KAAKiB,GACRhB,yBAGhBgH,GAAkB4B,EAAMrJ,KAAKuJ,QA3Bb,UA6BU3J,IAAMwJ,KAAN,UACrBrJ,GADqB,+BAExB,CAAEV,SAAU7B,EAAM6B,WA/BJ,QAkCW,OALrBmK,EA7BU,QAkCAC,OACdpC,GAAe,GAEfA,GAAemC,EAAYxJ,KAAKyB,OAG5BiI,EAAK,GAxCK,cA0CFlM,EAAMyC,YA1CJ,kEA0CP0J,EA1CO,4BA4CS/J,IAAMqJ,IAAN,wEAC8CU,EAD9C,cA5CT,QA4CNT,EA5CM,OAgDZQ,EAAGE,KAAKV,EAAOlJ,KAAKb,IAAI+G,SAhDZ,mDAkDZwD,EAAGE,KAAK,GAlDI,iJAsDhB7C,EAAgB2C,GAtDA,yEAAH,qDAwDfG,GF7KW,WAAf,wBE8KIC,KACC,CAACtM,EAAOA,EAAM6B,WAEjB,IAAM6B,GAAU,uCAAG,4BAAAzB,EAAA,sEACQG,IAAM,CAC7BC,OAAQ,OACRC,IAAI,GAAD,OAAKC,GAAL,cACHC,KAAM,CACJX,SAAU7B,EAAM6B,SAChBY,aACAC,gBAPa,OACXC,EADW,OAUjBT,QAAQC,IAAIQ,GAVK,2CAAH,qDAaV4J,GAAK,uCAAG,4BAAAtK,EAAA,yDACoB,IAA5BjC,EAAM0C,WAAWkC,OADT,gBAEV+E,GAAe,GAFL,sCAIWvH,IAAM,CACzBC,OAAQ,OACRC,IAAI,GAAD,OAAKC,GAAL,aACHkF,QAAS,CACP,eAAgBF,aAAaC,QAAQ,QACrC,eAAgB,oBAElBhF,KAAM,CAAEX,SAAU7B,EAAM6B,SAAUa,gBAX1B,OAIJgJ,EAJI,OAaVxJ,QAAQC,IAAIuJ,GACU,MAAlBA,EAAOO,QACTxC,GAAe,GAfP,2CAAH,qDAoBL+C,GAAO,uCAAG,sBAAAvK,EAAA,sEACRG,IAAMwJ,KAAN,UAAcrJ,GAAd,gBAA8D,CAClEoE,aAAc,eACdlE,WAAYkF,cAAYC,SAASnF,WAAW2F,QAC5CqE,IAAK,MAJO,uBAOYzE,EAAY,CACpCnG,SAAU7B,EAAM6B,SAChB8D,QAAS,qCACTC,UA7MQ,IA6MGjE,GACXkE,YAAa,4CACbC,OAAQ,EACRE,iBAbY,yDAAH,qDAiBP0G,GAAmB,uCAAG,sBAAAzK,EAAA,sEACpBG,IAAM,CACVE,IAAI,GAAD,OAAKC,GAAL,wBAAqDvC,EAAM6B,UAC9DQ,OAAQ,MACRoF,QAAS,CACP,eAAgBF,aAAaC,QAAQ,QACrC,eAAgB,cAEjBmF,MAAK,SAACC,GACPC,IAAaD,EAASpK,KAAM,iBATJ,2CAAH,qDAczB,OADAN,QAAQC,IAAImI,IAEV,oCACE,kBAACnJ,EAAA,EAAD,CAAWC,KAAM,kBAAC,EAAD,MAAUC,MAAO,kBAAC,IAAD,QAClC,yBAAKpB,UAAU,iBACb,kBAAC,OAAD,KACE,kBAAC,WAAD,CAAUA,UAAU,cAClB,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,4BACb,6BACE,yBAAKA,UAAU,0CACb,wBAAIA,UAAU,uBAAd,cACA,kBAAC,IAAD,OAEF,6BACE,yBAAKA,UAAU,6EACb,kDACA,0BAAMA,UAAU,4BACbD,EAAM8M,gBAAkB,IAG7B,yBAAK7M,UAAU,6EACb,kDACA,0BAAMA,UAAU,IAAI2J,IAAe,IAErC,yBAAK3J,UAAU,2FACb,oDACA,8BAAOD,EAAM+M,oBAGjB,4BACE9M,UAAU,qDACVe,QAASuL,IAFX,yBAOC7C,GACC,6EAEDF,GACC,8GAKF,kBAACwD,EAAA,EAAD,CAAWvM,MAAM,eACf,kBAAC,IAAS6J,OAIhB,yBAAKrK,UAAU,mBACb,yBAAKA,UAAU,uCACb,yBAAKA,UAAU,+BACb,8BACG,IACD,wBAAIA,UAAU,4BAAd,uBAIF,yBACEA,UAAU,2CACVe,QAAS0L,IAET,kBAAC,IAAD,MACA,4BAAQzM,UAAU,QAAlB,aAIN,kBAAC,iBAAD,CAAgBA,UAAU,QACxB,kBAAC,QAAD,KACE,kBAAC,cAAD,KACE,4BACE,kBAAC,YAAD,aACA,kBAAC,YAAD,gBACA,kBAAC,YAAD,aACA,kBAAC,YAAD,WACA,kBAAC,YAAD,iBAIJ,kBAAC,YAAD,CAAWA,UAAU,2BAClBuI,EAAI5D,OAAS,GACZ4D,EAAItE,KAAI,SAACD,EAAOE,GACd,OACE,kBAAC,WAAD,CAAUC,IAAKD,GACb,kBAAC,YAAD,KACE,yBAAKlE,UAAU,sBACZgE,EAAM6H,MAET,0BAAM7L,UAAU,WAAWgE,EAAM6H,OAEnC,kBAAC,YAAD,KACE,0BAAM7L,UAAU,0CAAhB,YAIF,kBAAC,YAAD,KACE,yBAAKA,UAAU,sBAAf,eAGA,8BAAOgE,EAAMgJ,OAEf,kBAAC,YAAD,KACE,yBAAKhN,UAAU,sBACZgE,EAAMiJ,IAET,yBAAKjN,UAAU,8CACb,kBAAC,IAAD,MACA,0BAAMA,UAAU,QAAhB,aAOJ,kBAAC,YAAD,KACE,yBAAKA,UAAU,sBACZgE,EAAM8H,OADT,QAGA,yBAAK9L,UAAU,WACb,0BAAMA,UAAU,oBACbkN,WACClJ,EAAM8H,QACHjM,EAAOK,OAASL,EAAOM,SAC1BgN,QAAQ,IACJ,IANV,QAOQ,IACN,0BAAMnN,UAAU,oBACbkN,WACCrN,EAAOK,OAAS8D,EAAM8H,QACtBqB,QAAQ,IACJ,IAZV,mBAkCxB,yBAAKnN,UAAU,kCACb,kBAAC,OAAD,KACE,kBAAC,EAAD,CACEkD,iBA/VZ,WACEgH,IAAsB,IA+VZ/G,kBA5VZ,WACE+G,IAAsB,IA4VZ9G,uBAnVZ,WACE+G,IAA4B,IAmVlB9G,wBAhVZ,WACE8G,IAA4B,IAgVlB7G,mBAAoBA,GACpBC,yBAA0BA,GAC1BC,cAAeA,EACfC,WAAYA,GACZjB,WAAYA,EACZkB,cAAeA,IAEjB,kBAAC,WAAD,CAAU1D,UAAU,wBAClB,yBAAKA,UAAU,kCACb,yBAAKA,UAAU,+BACb,wBAAIA,UAAU,6BAAd,aACA,0BAAMA,UAAU,iBACb,EAAID,EAAM0C,WAAWkC,UAK5B,yBAAK3E,UAAU,kCACb,yBAAKA,UAAU,iCACb,0BAAMA,UAAU,YAAhB,QAGF,yBAAKA,UAAU,+BACb,0BAAMA,UAAU,YACbH,EAAOK,OAASmJ,EAAa+D,QAAO,SAACpL,EAAGqL,GAAJ,OAAUrL,EAAIqL,IAAG,IAExD,0BAAMrN,UAAU,6BAAhB,SAGJ,6BACE,yBAAKA,UAAU,qDACb,yBAAKA,UAAU,QACb,8BAAOD,EAAMyC,WAAWmC,OAAxB,eAEF,yBAAK3E,UAAU,QACb,8BACGH,EAAOK,OAASmJ,EAAa+D,QAAO,SAACpL,EAAGqL,GAAJ,OAAUrL,EAAIqL,IAAG,MAK5D,4BACGtN,EAAMyC,WAAWyB,KAAI,SAACD,EAAOE,GAC5B,OACE,wBACElE,UAAU,4FACVmE,IAAKD,GAEL,yBAAKlE,UAAU,kCACb,yBAAKA,UAAU,yCACb,8BAAOgE,GACP,kBAACvD,EAAA,EAAD,CACEC,UACE,kBAAC,EAAD,CACEgB,IAAKsC,EACLpC,SAAU7B,EAAM6B,WAGpBjB,WAAY,kBAAC,EAAD,SAGhB,yBAAKX,UAAU,QACb,8BAAOqJ,EAAanF,YAQlC,wBAAIlE,UAAU,oBACd,yBAAKA,UAAU,kCACb,yBAAKA,UAAU,iCACb,0BAAMA,UAAU,YAAhB,QAGF,yBAAKA,UAAU,+BACb,0BAAMA,UAAU,YACbqJ,EAAa+D,QAAO,SAACpL,EAAGqL,GAAJ,OAAUrL,EAAIqL,IAAG,IAExC,0BAAMrN,UAAU,6BAAhB,SAGJ,6BACE,yBAAKA,UAAU,qDACb,yBAAKA,UAAU,QACb,8BAAOD,EAAM0C,WAAWkC,OAAxB,eAEF,yBAAK3E,UAAU,QACb,8BACGH,EAAOK,OAASmJ,EAAa+D,QAAO,SAACpL,EAAGqL,GAAJ,OAAUrL,EAAIqL,IAAG,MAK5D,4BACGtN,EAAM0C,WAAWwB,KAAI,SAACD,EAAOE,GAC5B,OACE,wBACElE,UAAU,4FACVmE,IAAKD,GAEL,yBAAKlE,UAAU,kCACb,yBAAKA,UAAU,yCACb,0BACEe,QAAS,WACPyC,EAAcQ,KAGfA,GAEH,kBAACvD,EAAA,EAAD,CACEC,UACE,kBAAC,EAAD,CACEiB,IAAKqC,EACLpC,SAAU7B,EAAM6B,WAGpBjB,WAAY,kBAAC,EAAD,SAGhB,yBAAKX,UAAU,QACb,8BAAOqJ,EAAanF,cAUtC,kBAAC,OAAD,KACE,kBAAC,WAAD,CAAUlE,UAAU,wBAClB,yBAAKA,UAAU,kCACb,yBAAKA,UAAU,+BACb,wBAAIA,UAAU,6BAAd,iBAQJ,6BACE,yBAAKA,UAAU,6EACb,yBAAKA,UAAU,kBACb,gDAEF,yBAAKA,UAAU,kBACb,0BAAMA,UAAU,wCACbmJ,EAAUV,QAAU,OAI3B,yBAAKzI,UAAU,6EACb,yBAAKA,UAAU,kBACb,oDAEF,yBAAKA,UAAU,kBACb,+BACImJ,EAAUV,QAAUU,EAAUJ,QAAU,OAIhD,yBAAK/I,UAAU,oDACb,yBAAKA,UAAU,kBACb,mDAEF,yBAAKA,UAAU,kBACb,kBAAC,QAAD,CACEA,UAAU,0DACV4D,YAAY,YACZhB,KAAK,SACLoB,MAAOtC,GACPmC,SAAU,SAACC,GACTsG,GAAOtG,EAAEC,OAAOC,aAM1B,8BAWA,4BACEhE,UAAU,qDACVe,QAASwL,IAFX,aAMCtC,GAAW,yCAAsB,uCAGtC,kBAAC,OAAD,KACE,kBAAC,WAAD,CAAUjK,UAAU,wBAClB,yBAAKA,UAAU,kCACb,yBAAKA,UAAU,+BACb,wBAAIA,UAAU,6BAAd,gBAEF,+BAMF,6BACE,yBAAKA,UAAU,6EACb,yBAAKA,UAAU,kBACb,gDAEF,yBAAKA,UAAU,kBACb,0BAAMA,UAAU,wCACbkN,WACC/D,EAAUV,QACR,KACC5I,EAAOK,OAASL,EAAOM,SAC1BgN,QAAQ,GALZ,SAUJ,yBAAKnN,UAAU,6EACb,yBAAKA,UAAU,kBACb,oDAEF,yBAAKA,UAAU,kBACb,8BACG,IACAkN,YACE/D,EAAUV,QAAUU,EAAUJ,QAC7B,KACClJ,EAAOK,OAASL,EAAOM,SAC1BgN,QAAQ,GAAI,IANhB,SAWJ,yBAAKnN,UAAU,oDACb,yBAAKA,UAAU,kBACb,mDAEF,yBAAKA,UAAU,kBACb,8BACGkN,WACCxL,IAAO7B,EAAOK,OAASL,EAAOM,SAC9BgN,QAAQ,GAAI,IAHhB,aAYZ","file":"static/js/13.d730c0e3.chunk.js","sourcesContent":["import React from \"react\";\nimport { useSelector } from \"react-redux\";\nexport const Right = () => {\n  const prices = useSelector((state) => state.prices);\n  return (\n    <>\n      <div className=\"text-gray-300 \">\n        <p className=\"mb-2\">Total Volume</p>\n        <div>\n          <b className=\"mr-2 text-3xl font-normal text-white\">\n            {prices.liquidStxSupplyResult} STX\n          </b>{\" \"}\n          <span>\n            <span className=\"text-yellow-500\">\n              {\" \"}\n              {(\n                (prices.stxusd * prices.liquidStxSupplyResult) /\n                prices.btcusd\n              ).toLocaleString(\"fullwide\", { useGrouping: false })}\n            </span>{\" \"}\n            BTC |{\" \"}\n            <span className=\"text-green-600\">\n              {\" \"}\n              {(\n                prices.stxusd * prices.liquidStxSupplyResult\n              ).toLocaleString(\"fullwide\", { useGrouping: false })}\n            </span>{\" \"}\n            USD\n          </span>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\n\nfunction Chart({ children, title }) {\n  return (\n    <div className=\"min-w-0 p-4 bg-gray-800 rounded-lg shadow-xs\">\n      <p className=\"mb-4 font-semibold text-gray-300\">{title}</p>\n      {children}\n    </div>\n  );\n}\n\nexport default Chart;\n","import React, { useState } from \"react\";\nimport { Dropdown } from \"@windmill/react-ui\";\n\nfunction ContextNav({ menuItems, buttonIcon }) {\n  const [isContextMenuOpen, setIsContextMenuOpen] = useState(false);\n  function handleContextClick() {\n    setIsContextMenuOpen(!isContextMenuOpen);\n  }\n  return (\n    <div className=\"relative flex items-center\">\n      <button onClick={handleContextClick}>{buttonIcon}</button>\n\n      <Dropdown\n        className=\"z-50 w-32 bg-gray-700\"\n        isOpen={isContextMenuOpen}\n        onClose={() => setIsContextMenuOpen(false)}\n      >\n        {menuItems}\n      </Dropdown>\n    </div>\n  );\n}\n\nexport default ContextNav;\n","import React from \"react\";\n\nfunction PageTitle({ children, left, right }) {\n  if (children) {\n    return (\n      <div className=\"flex items-center justify-between px-8 pt-10 pb-8 mb-8 -mx-6 text-gray-100 border-b-2 border-gray-900 bg-gray-950\">\n        <h1 show={children} className=\"mb-3 text-2xl\">\n          {children}\n        </h1>\n      </div>\n    );\n  }\n\n  if (!children) {\n    return (\n      <div className=\"flex flex-wrap items-center justify-between px-12 pt-10 pb-8 mb-8 -mx-6 text-gray-100 border-b-2 border-gray-900 bg-gray-950\">\n        <div>{left}</div>\n        <div>{right}</div>\n      </div>\n    );\n  }\n}\n\nexport default PageTitle;\n","import React from \"react\";\nimport { FiSettings } from \"react-icons/fi\";\n\nexport const MenuIcon = () => {\n  return (\n    <>\n      <FiSettings\n        aria-label=\"Context\"\n        aria-haspopup=\"true\"\n        className=\"mr-2 text-white wh-4\"\n      />\n    </>\n  );\n};\n","import React from \"react\";\nimport axios from \"axios\";\nimport { userDetails } from \"../../redux/reducers\";\nimport { useDispatch } from \"react-redux\";\n\nimport { FiTrash2, FiCopy } from \"react-icons/fi\";\n\nconst MenuItems = ({ stx, btc, username }) => {\n  const dispatch = useDispatch();\n\n  const deleteAddress = async () => {\n    console.log(username, stx, btc);\n    const makeTheCal = await axios({\n      method: \"delete\",\n      url: `${process.env.REACT_APP_BACKENDURL}/addresses`,\n      data: {\n        username: username,\n        stxAddress: stx,\n        btcAddress: btc,\n      },\n    });\n    console.log(makeTheCal);\n    dispatch({ payload: makeTheCal.data, type: userDetails });\n  };\n\n  return (\n    <>\n      <li\n        className=\"flex items-center text-sm leading-8 text-gray-200 cursor-pointer hover:text-white\"\n        onClick={deleteAddress}\n      >\n        <FiTrash2 className=\"mr-2 wh-3\" />\n        <span>Delete</span>\n      </li>\n      <li className=\"flex items-center text-sm leading-8 text-gray-200 cursor-pointer hover:text-white\">\n        <FiCopy className=\"mr-2 wh-3\" />\n        <span>Copy Address</span>\n      </li>\n    </>\n  );\n};\n\nexport { MenuItems };\n","import React from \"react\";\n\nconst Left = () => {\n  return (\n    <>\n      <h1 className=\"mb-3 text-2xl\">My Portfolio</h1>\n      <div>{new Date().toLocaleDateString()}</div>\n    </>\n  );\n};\n\nexport { Left };\n","import React, { useState } from \"react\";\n\nimport PageTitle from \"../components/Typography/PageTitle\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { MainNet } from \"../icons\";\nimport { FiTrash2, FiCopy } from \"react-icons/fi\";\nimport { VscArrowSmallRight } from \"react-icons/vsc\";\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Button,\n  Input,\n  Label,\n} from \"@windmill/react-ui\";\n\nfunction Modals({\n  openAddressModal,\n  closeAddressModal,\n  openManualAddressModal,\n  closeManualAddressModal,\n  isAddressModalOpen,\n  isManualAddressModalOpen,\n  addBTCAddress,\n  addAddress,\n  stxAddress,\n  setStxAddress,\n}) {\n  const state = useSelector((state) => state.user);\n  return (\n    <>\n      <div className=\"my-6 space-y-6\">\n        <div>\n          <Button onClick={openAddressModal}>Address Modal</Button>\n        </div>\n        <div>\n          <Button onClick={openManualAddressModal}>Manual Address Modal</Button>\n        </div>\n\n        <Modal isOpen={isAddressModalOpen} onClose={closeAddressModal}>\n          <ModalHeader className=\"mb-10 text-center\">\n            <h2 className=\"mb-2 text-2xl\">Add your Address</h2>\n            <p>Add your BTC address to start stacking your assets</p>\n          </ModalHeader>\n          <ModalBody>\n            <div className=\"my-4\">\n              <Label>Enter BTC address</Label>\n              <div className=\"relative flex mt-2\">\n                <Input\n                  className=\"border-0 bg-gray-50\"\n                  placeholder=\"Enter your address here\"\n                  onChange={(e) => {\n                    addBTCAddress(e.target.value);\n                  }}\n                />\n                <button\n                  className=\"px-6 ml-2 btn btn-primary\"\n                  onClick={addAddress}\n                >\n                  Add\n                </button>\n              </div>\n            </div>\n          </ModalBody>\n        </Modal>\n\n        <Modal\n          isOpen={isManualAddressModalOpen}\n          onClose={closeManualAddressModal}\n        >\n          <ModalBody>\n            <div className=\"my-4\">\n              <Label className=\"text-xl\">Manually add address</Label>\n              <div className=\"relative flex mt-2\">\n                <Input\n                  className=\"border-0 bg-gray-50\"\n                  placeholder=\"Enter your address here\"\n                  onChange={(e) => {\n                    setStxAddress(e.target.value);\n                  }}\n                />\n                <button\n                  className=\"px-6 ml-2 btn btn-primary\"\n                  onClick={addAddress}\n                >\n                  Add\n                </button>\n              </div>\n              <h2 className=\"mt-8 mb-2 text-2xl\">Saved Addresses</h2>\n              <p className=\"text-base text-gray-400\">\n                These addreses will be monitored on the dashboard. You can\n                remove them at anytime.\n              </p>\n              <ul className=\"mt-6 mb-12\">\n                {state.stxAddress.map((value, index) => {\n                  return (\n                    <li\n                      className=\"flex items-center justify-between py-4 border-b border-gray-100\"\n                      key={index}\n                    >\n                      <div className=\"flex items-center justify-between text-lg\">\n                        <MainNet width=\"32\" />\n                        <span className=\"ml-4\">{value}</span>\n                      </div>\n                      <div className=\"flex items-center justify-between space-x-2 text-primary-500\">\n                        <button>\n                          <FiCopy size={20} />\n                        </button>\n                        <button>\n                          <FiTrash2 size={20} />\n                        </button>\n                      </div>\n                    </li>\n                  );\n                })}\n              </ul>\n              <button className=\"text-xl font-medium text-success-500 btn-icon text-md\">\n                Go to Dashboard <VscArrowSmallRight />\n              </button>\n            </div>\n          </ModalBody>\n        </Modal>\n      </div>\n    </>\n  );\n}\n\nexport default Modals;\n","import { AddressHashMode } from \"@stacks/transactions\";\nimport { address } from \"bitcoinjs-lib\";\nimport BN from \"bn.js\";\nimport { StackingErrors } from \"./constants\";\n\nexport function getAddressHashMode(btcAddress) {\n  if (btcAddress.startsWith(\"bc1\") || btcAddress.startsWith(\"tb1\")) {\n    const { data } = address.fromBech32(btcAddress);\n    if (data.length === 32) {\n      return AddressHashMode.SerializeP2WSH;\n    } else {\n      return AddressHashMode.SerializeP2WPKH;\n    }\n  } else {\n    const { version } = address.fromBase58Check(btcAddress);\n    switch (version) {\n      case 0:\n        return AddressHashMode.SerializeP2PKH;\n      case 111:\n        return AddressHashMode.SerializeP2PKH;\n      case 5:\n        return AddressHashMode.SerializeP2SH;\n      case 196:\n        return AddressHashMode.SerializeP2SH;\n      default:\n        throw new Error(\"Invalid pox address version\");\n    }\n  }\n}\n\nexport function decodeBtcAddress(btcAddress) {\n  const hashMode = getAddressHashMode(btcAddress);\n  if (btcAddress.startsWith(\"bc1\") || btcAddress.startsWith(\"tb1\")) {\n    const { data } = address.fromBech32(btcAddress);\n    return {\n      hashMode,\n      data,\n    };\n  } else {\n    const { hash } = address.fromBase58Check(btcAddress);\n    return {\n      hashMode,\n      data: hash,\n    };\n  }\n}\n\nexport function getBTCAddress(version, checksum) {\n  const btcAddress = address.toBase58Check(\n    checksum,\n    new BN(version).toNumber()\n  );\n  return btcAddress;\n}\n\nexport function getErrorString(error) {\n  // eslint-disable-next-line default-case\n  switch (error) {\n    case StackingErrors.ERR_STACKING_UNREACHABLE:\n      return \"Stacking unreachable\";\n    case StackingErrors.ERR_STACKING_INSUFFICIENT_FUNDS:\n      return \"Insufficient funds\";\n    case StackingErrors.ERR_STACKING_INVALID_LOCK_PERIOD:\n      return \"Invalid lock period\";\n    case StackingErrors.ERR_STACKING_ALREADY_STACKED:\n      return \"Account already stacked. Concurrent stacking not allowed.\";\n    case StackingErrors.ERR_STACKING_NO_SUCH_PRINCIPAL:\n      return \"Principal does not exist\";\n    case StackingErrors.ERR_STACKING_EXPIRED:\n      return \"Stacking expired\";\n    case StackingErrors.ERR_STACKING_STX_LOCKED:\n      return \"STX balance is locked\";\n    case StackingErrors.ERR_STACKING_PERMISSION_DENIED:\n      return \"Permission denied\";\n    case StackingErrors.ERR_STACKING_THRESHOLD_NOT_MET:\n      return \"Stacking threshold not met\";\n    case StackingErrors.ERR_STACKING_POX_ADDRESS_IN_USE:\n      return \"PoX address already in use\";\n    case StackingErrors.ERR_STACKING_INVALID_POX_ADDRESS:\n      return \"Invalid PoX address\";\n    case StackingErrors.ERR_STACKING_ALREADY_REJECTED:\n      return \"Stacking already rejected\";\n    case StackingErrors.ERR_STACKING_INVALID_AMOUNT:\n      return \"Invalid amount\";\n    case StackingErrors.ERR_NOT_ALLOWED:\n      return \"Stacking not allowed\";\n    case StackingErrors.ERR_STACKING_ALREADY_DELEGATED:\n      return \"Already delegated\";\n    case StackingErrors.ERR_DELEGATION_EXPIRES_DURING_LOCK:\n      return \"Delegation expires during lock period\";\n    case StackingErrors.ERR_DELEGATION_TOO_MUCH_LOCKED:\n      return \"Delegation too much locked\";\n    case StackingErrors.ERR_DELEGATION_POX_ADDR_REQUIRED:\n      return \"PoX address required for delegation\";\n    case StackingErrors.ERR_INVALID_START_BURN_HEIGHT:\n      return \"Invalid start burn height\";\n  }\n}\n","import { openContractCall } from \"@stacks/connect\";\nimport {\n  bufferCV,\n  uintCV,\n  tupleCV,\n  standardPrincipalCV,\n  noneCV,\n  someCV,\n} from \"@stacks/transactions\";\nimport BN from \"bn.js\";\nimport logo from \"../icons/logo.svg\";\nimport { decodeBtcAddress } from \"./utils\";\nimport buffer from \"buffer\";\nimport axios from \"axios\";\nimport { getPerson } from \"../scripts/auth\";\nimport { StacksTestnet } from \"@stacks/network\";\nconst Buffer = buffer.Buffer;\nconst network = new StacksTestnet();\n\nasync function delegateSTX({\n  poxAddr,\n  amountSTX,\n  delegateToo,\n  burnHt,\n  delegateStx,\n  setTxLoader,\n  username,\n}) {\n  const { hashMode, data } = decodeBtcAddress(poxAddr);\n  const hashModeBuffer = bufferCV(new BN(hashMode, 10).toArrayLike(Buffer));\n  const hashbytes = bufferCV(data);\n  const poxAddressCV = tupleCV({\n    hashbytes,\n    version: hashModeBuffer,\n  });\n  console.log(poxAddressCV.data);\n\n  const options = {\n    contractAddress: \"ST000000000000000000002AMW42H\",\n    contractName: \"pox\",\n    functionName: \"delegate-stx\",\n    functionArgs: [\n      uintCV(amountSTX),\n      standardPrincipalCV(\"ST3K2B2FH1AYXD26WV6YZY4DAA82AZNK967BNB9BK\"),\n      noneCV(),\n      noneCV(),\n    ],\n\n    appDetails: {\n      name: \"StakedStats\",\n      icon: { logo },\n    },\n    network,\n    finished: async (data) => {\n      console.log(\"TX ID:\", data.txId);\n      console.log(\"Raw TX:\", data.txRaw);\n      setTxLoader(true);\n\n      try {\n        console.log(localStorage.getItem(\"auth\"));\n        axios({\n          url: `${process.env.REACT_APP_BACKENDURL}/transactionRecords`,\n          method: \"post\",\n          headers: {\n            \"x-auth-token\": localStorage.getItem(\"auth\"),\n            \"Content-type\": \"application/json\",\n          },\n          data: {\n            username,\n            stacker: getPerson()._profile.stxAddress,\n            amountSTX,\n            txId: data.tx,\n          },\n        });\n        setTxLoader(false);\n        alert(\n          `Delegation Lockup Relationship Setup. Thank You!!. Tx id is: ${data.txId}`\n        );\n      } catch (e) {\n        setTxLoader(false);\n        alert(\"Failed\");\n      }\n    },\n  };\n\n  console.log(options);\n  await openContractCall(options);\n}\n\nexport default delegateSTX;\n","import { openContractCall } from \"@stacks/connect\";\nimport { StacksTestnet } from \"@stacks/network\";\nimport {\n  callReadOnlyFunction,\n  standardPrincipalCV,\n} from \"@stacks/transactions\";\nimport logo from \"../icons/logo.svg\";\nimport { getPerson } from \"../scripts/auth\";\nimport contract from \"./readOnlyFunciton\";\n\nconst network = new StacksTestnet();\n\n// ST000000000000000000002AMW42H\n// name : pox\nexport default async function delegationLock() {\n  const { testnet } = getPerson()._profile.stxAddress;\n  console.log(getPerson()._profile.stxAddress);\n  const options = {\n    contractAddress: \"ST000000000000000000002AMW42H\",\n    contractName: \"pox\",\n    functionName: \"get-stacker-info\",\n    functionArgs: [standardPrincipalCV(testnet)],\n    senderAddress: testnet,\n    // appDetails: {\n    //   name: \"StakedStats\",\n    //   icon: { logo },\n    // },\n    // finished: (data) => {\n    //   console.log(\"TX ID:\", data.txId);\n    //   console.log(\"Raw TX:\", data.txRaw);\n    // },\n    network,\n  };\n  console.log(\"trying..\");\n  await callReadOnlyFunction(options);\n}\n","import {\n  Configuration,\n  SmartContractsApi,\n} from \"@stacks/blockchain-api-client\";\n\nconst Contract = new SmartContractsApi(\n  new Configuration({\n    basePath: \"https://stacks-node-api.testnet.stacks.co\",\n  })\n);\nexport default Contract;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport PageTitle from \"../components/Typography/PageTitle\";\nimport {\n  Card,\n  CardBody,\n  Table,\n  TableHeader,\n  TableCell,\n  TableBody,\n  TableRow,\n  TableContainer,\n  Input,\n} from \"@windmill/react-ui\";\nimport { FiInfo, FiDownload, FiArrowRight } from \"react-icons/fi\";\n\nimport { MenuIcon, MenuItems, Left } from \"../components/Portfolio/\";\nimport FileDownload from \"js-file-download\";\nimport ChartCard from \"../components/Chart/ChartCard\";\nimport { Doughnut, Line, Bar } from \"react-chartjs-2\";\nimport Modal from \"../components/address-modal\";\nimport ContextNav from \"../components/ContextNav\";\nimport { getPerson } from \"../scripts/auth\";\nimport { useSelector } from \"react-redux\";\nimport delegateSTX from \"../delegation/1.delegatestx\";\nimport \"../assets/css/tippy.css\";\nimport { Right } from \"../components/right\";\nimport getStackerInfor from \"../delegation/getStackerInfo\";\n\nconst micro = 1000000;\n\nfunction MyPortfolio() {\n  const prices = useSelector((state) => state.prices);\n  const state = useSelector((state) => state.user);\n  const [txs, setTxs] = useState([]);\n  const [portfolio, setPortfolio] = useState({\n    balance: \"0\",\n    total_sent: \"0\",\n    total_received: \"0\",\n    total_fees_sent: \"0\",\n    total_miner_rewards_received: \"0\",\n    lock_tx_id: \"\",\n    locked: \"0\",\n    lock_height: 0,\n    burnchain_lock_height: 0,\n    burnchain_unlock_height: 0,\n  });\n  const [addressValue, setaddressValue] = useState([]);\n  const [stxAddress, setStxAddress] = useState(\"\");\n  const [btcAddress, addBTCAddress] = useState(state.btcAddress[0]);\n  const [message, showBTCMessage] = useState(false);\n  const [addaddress, showAddAddress] = useState(false);\n  const [dailyReward, setDailyReward] = useState(0);\n  const [dateForGraph, setDateForGraph] = useState([]);\n  const [rewardForGraph, setRewardForGraph] = useState([]);\n  const [txLoader, setTxLoader] = useState(false);\n\n  //Address Modal\n  const [isAddressModalOpen, setIsAddressModalOpen] = useState(false);\n\n  function openAddressModal() {\n    setIsAddressModalOpen(true);\n  }\n\n  function closeAddressModal() {\n    setIsAddressModalOpen(false);\n  }\n\n  //Address Modal\n\n  const [isManualAddressModalOpen, setIsManualAddressModalOpen] = useState(\n    false\n  );\n\n  function openManualAddressModal() {\n    setIsManualAddressModalOpen(true);\n  }\n\n  function closeManualAddressModal() {\n    setIsManualAddressModalOpen(false);\n  }\n\n  const [stx, setSTX] = useState(0);\n\n  const lineOptions = {\n    data: {\n      labels: dateForGraph,\n      datasets: [\n        {\n          backgroundColor: \"#0694a2\",\n          borderColor: \"#0694a2\",\n          data: rewardForGraph,\n          fill: true,\n        },\n      ],\n    },\n    options: {\n      responsive: true,\n      tooltips: {\n        mode: \"index\",\n        intersect: false,\n      },\n      hover: {\n        mode: \"nearest\",\n        intersect: true,\n      },\n      scales: {\n        x: {\n          display: true,\n          scaleLabel: {\n            display: true,\n            labelString: \"Month\",\n          },\n        },\n        y: {\n          display: true,\n          scaleLabel: {\n            display: true,\n            labelString: \"Value\",\n          },\n        },\n      },\n    },\n    legend: {\n      display: false,\n    },\n  };\n\n  useEffect(() => {\n    const data = getPerson();\n\n    const fetchData = async () => {\n      const address = data._profile.stxAddress.testnet;\n      const result = await axios.get(\n        `https://stacks-node-api.testnet.stacks.co/extended/v1/address/${address}/balances`\n      );\n      setPortfolio(result.data.stx);\n\n      const values = await axios({\n        url: `${process.env.REACT_APP_BACKENDURL}/btcAddressReward`,\n        method: \"post\",\n        data: state,\n      });\n\n      if (values.data.txs) setTxs(values.data.txs);\n\n      const graph = await axios.post(\n        `${process.env.REACT_APP_BACKENDURL}/getUserClaimedRewardsGraph`,\n        { username: state.username }\n      );\n\n      setDateForGraph(\n        graph.data.date.map((value) => {\n          console.log(value);\n          var date = new Date(value);\n          return date.toLocaleDateString();\n        })\n      );\n      setRewardForGraph(graph.data.reward);\n\n      const claimReward = await axios.post(\n        `${process.env.REACT_APP_BACKENDURL}/getUserClaimedRewardsGraph`,\n        { username: state.username }\n      );\n\n      if (claimReward.status === 405) {\n        setDailyReward(0);\n      } else {\n        setDailyReward(claimReward.data.value);\n      }\n\n      const vs = [];\n\n      for (let i of state.stxAddress) {\n        try {\n          const result = await axios.get(\n            `https://stacks-node-api.testnet.stacks.co/extended/v1/address/${i}/balances`\n          );\n\n          vs.push(result.data.stx.balance);\n        } catch (e) {\n          vs.push(0);\n        }\n      }\n\n      setaddressValue(vs);\n    };\n    fetchData();\n    getStackerInfor();\n  }, [state, state.username]);\n\n  const addAddress = async () => {\n    const makeTheCal = await axios({\n      method: \"post\",\n      url: `${process.env.REACT_APP_BACKENDURL}/addresses`,\n      data: {\n        username: state.username,\n        stxAddress,\n        btcAddress,\n      },\n    });\n    console.log(makeTheCal);\n  };\n\n  const claim = async () => {\n    if (state.btcAddress.length === 0) {\n      showAddAddress(true);\n    } else {\n      const result = await axios({\n        method: \"post\",\n        url: `${process.env.REACT_APP_BACKENDURL}/btcClaim`,\n        headers: {\n          \"x-auth-token\": localStorage.getItem(\"auth\"),\n          \"Content-Type\": \"application/json\",\n        },\n        data: { username: state.username, btcAddress },\n      });\n      console.log(result);\n      if (result.status === 200) {\n        showBTCMessage(true);\n      }\n    }\n  };\n\n  const onStack = async () => {\n    await axios.post(`${process.env.REACT_APP_BACKENDURL}/callHistory`, {\n      functionName: \"delegate-stx\",\n      stxAddress: getPerson()._profile.stxAddress.testnet,\n      fee: 300,\n    });\n\n    const delegateStx = await delegateSTX({\n      username: state.username,\n      poxAddr: \"n2VrgRFbKvcesbqerVtJEC8p5Lr2LQKtmB\",\n      amountSTX: stx * micro,\n      delegateToo: \"ST3K2B2FH1AYXD26WV6YZY4DAA82AZNK967BNB9BK\",\n      burnHt: 3,\n      setTxLoader,\n    });\n  };\n\n  const btcRewardHistoryCSV = async () => {\n    await axios({\n      url: `${process.env.REACT_APP_BACKENDURL}/generateCSV/${state.username}`,\n      method: \"get\",\n      headers: {\n        \"x-auth-token\": localStorage.getItem(\"auth\"),\n        \"Content-Type\": \"text/csv\",\n      },\n    }).then((response) => {\n      FileDownload(response.data, \"report.csv\");\n    });\n  };\n\n  console.log(lineOptions);\n  return (\n    <>\n      <PageTitle left={<Left />} right={<Right />}></PageTitle>\n      <div className=\"p-4 space-y-6\">\n        <Card>\n          <CardBody className=\"text-white\">\n            <div className=\"flex flex-wrap\">\n              <div className=\"w-full xl:pr-10 xl:w-1/3\">\n                <div>\n                  <div className=\"flex items-center justify-between mb-4\">\n                    <h3 className=\"text-lg font-medium\">BTC Reward</h3>\n                    <FiInfo />\n                  </div>\n                  <div>\n                    <div className=\"flex flex-wrap items-center justify-between py-2 border-b border-gray-400\">\n                      <span>Total BTC Reward</span>\n                      <span className=\"text-lg text-warning-500\">\n                        {state.totalBTCReward || 0}\n                      </span>\n                    </div>\n                    <div className=\"flex flex-wrap items-center justify-between py-2 border-b border-gray-400\">\n                      <span>Daily BTC Reward</span>\n                      <span className=\"\">{dailyReward || 0}</span>\n                    </div>\n                    <div className=\"flex flex-wrap items-center justify-between py-2 text-gray-300 border-b border-gray-400\">\n                      <span>Pending BTC Reward</span>\n                      <span>{state.pendingBTCReward}</span>\n                    </div>\n                  </div>\n                  <button\n                    className=\"mt-4 mb-6 btn btn-outline-warning btn-sm btn-block\"\n                    onClick={claim}\n                  >\n                    Claim your BTC Reward\n                  </button>\n\n                  {addaddress && (\n                    <p>Please add a btc address for payment checkout.</p>\n                  )}\n                  {message && (\n                    <p>\n                      Please wait for the Admin ( neko@stackedstats.com ) to\n                      confirm your withdrawal.\n                    </p>\n                  )}\n                  <ChartCard title=\"BTC Rewards\">\n                    <Line {...lineOptions} />\n                  </ChartCard>\n                </div>\n              </div>\n              <div className=\"w-full xl:w-2/3\">\n                <div className=\"flex flex-wrap justify-between mb-4\">\n                  <div className=\"flex items-center space-x-2\">\n                    <span>\n                      {\" \"}\n                      <h3 className=\"mr-4 text-lg font-medium\">\n                        BTC Reward History\n                      </h3>\n                    </span>\n                    <div\n                      className=\"flex items-center ml-10 text-primary-400\"\n                      onClick={btcRewardHistoryCSV}\n                    >\n                      <FiDownload />\n                      <button className=\"ml-1\">Export</button>\n                    </div>\n                  </div>\n                </div>\n                <TableContainer className=\"mb-8\">\n                  <Table>\n                    <TableHeader>\n                      <tr>\n                        <TableCell>Date</TableCell>\n                        <TableCell>Network</TableCell>\n                        <TableCell>From</TableCell>\n                        <TableCell>To</TableCell>\n                        <TableCell>Reward</TableCell>\n                        {/* <TableCell>Explorer</TableCell> */}\n                      </tr>\n                    </TableHeader>\n                    <TableBody className=\"text-lg divide-gray-500\">\n                      {txs.length > 0 &&\n                        txs.map((value, index) => {\n                          return (\n                            <TableRow key={index}>\n                              <TableCell>\n                                <div className=\"text-lg text-white\">\n                                  {value.date}\n                                </div>\n                                <span className=\"text-sm\">{value.date}</span>\n                              </TableCell>\n                              <TableCell>\n                                <span className=\"text-white btn btn-outline-gray btn-xs\">\n                                  Testnet\n                                </span>\n                              </TableCell>\n                              <TableCell>\n                                <div className=\"text-sm text-white\">\n                                  Stackedsats\n                                </div>\n                                <span>{value.from}</span>\n                              </TableCell>\n                              <TableCell>\n                                <div className=\"text-sm text-white\">\n                                  {value.to}\n                                </div>\n                                <div className=\"flex items-center text-sm text-warning-500\">\n                                  <FiArrowRight />\n                                  <span className=\"ml-1\">Bitcoin</span>\n                                </div>\n                                {/* <div className=\"flex items-center text-sm text-primary-400\">\n                                <FiArrowRight />\n                                <span className=\"ml-1\">Stacks</span>\n                              </div> */}\n                              </TableCell>\n                              <TableCell>\n                                <div className=\"text-sm text-white\">\n                                  {value.reward} STX\n                                </div>\n                                <div className=\"text-sm\">\n                                  <span className=\"text-warning-500\">\n                                    {parseFloat(\n                                      value.reward /\n                                        (prices.stxusd * prices.btcusd)\n                                    ).toFixed(2)}\n                                  </span>{\" \"}\n                                  BTC |{\" \"}\n                                  <span className=\"text-success-600\">\n                                    {parseFloat(\n                                      prices.stxusd / value.reward\n                                    ).toFixed(2)}\n                                  </span>{\" \"}\n                                  USD\n                                </div>\n                              </TableCell>\n                              {/* <TableCell>\n                                <a href=\"https://testnet-explorer.blockstack.org/txid/0x7f5db3a604f738af695b0b10c0369c42fd7a0efbcc25115fa5711f074abf92b6\">\n                                  <div className=\"flex justify-center\">\n                                    <Explorer />\n                                  </div>\n                                </a>\n                              </TableCell> */}\n                            </TableRow>\n                          );\n                        })}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              </div>\n            </div>\n          </CardBody>\n        </Card>\n\n        <div className=\"grid gap-6 mb-8 xl:grid-cols-3\">\n          <Card>\n            <Modal\n              openAddressModal={openAddressModal}\n              closeAddressModal={closeAddressModal}\n              openManualAddressModal={openManualAddressModal}\n              closeManualAddressModal={closeManualAddressModal}\n              isAddressModalOpen={isAddressModalOpen}\n              isManualAddressModalOpen={isManualAddressModalOpen}\n              addBTCAddress={addBTCAddress}\n              addAddress={addAddress}\n              stxAddress={stxAddress}\n              setStxAddress={setStxAddress}\n            />\n            <CardBody className=\"space-y-8 text-white\">\n              <div className=\"flex flex-wrap justify-between\">\n                <div className=\"flex flex-wrap items-center\">\n                  <h2 className=\"mr-3 text-2xl font-medium\">Portfolio</h2>\n                  <span className=\"text-gray-200\">\n                    {1 + state.btcAddress.length}\n                  </span>\n                </div>\n              </div>\n              {/* body */}\n              <div className=\"flex flex-wrap justify-between\">\n                <div className=\"flex items-baseline space-x-2\">\n                  <span className=\"text-2xl\">STX</span>\n                  {/* <span className=\"text-gray-200\">100%</span> */}\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <span className=\"text-2xl\">\n                    {prices.stxusd * addressValue.reduce((a, b) => a + b, 0)}\n                  </span>\n                  <span className=\"font-medium text-gray-200\">STX</span>\n                </div>\n              </div>\n              <div>\n                <div className=\"flex flex-wrap justify-between mb-3 text-gray-200\">\n                  <div className=\"flex\">\n                    <span>{state.stxAddress.length} addresses</span>\n                  </div>\n                  <div className=\"flex\">\n                    <span>\n                      {prices.stxusd * addressValue.reduce((a, b) => a + b, 0)}\n                    </span>\n                  </div>\n                </div>\n\n                <ul>\n                  {state.stxAddress.map((value, index) => {\n                    return (\n                      <li\n                        className=\"p-2 mb-1 border-l-4 cursor-pointer hover:bg-primary-400 bg-primary-600 border-primary-300\"\n                        key={index}\n                      >\n                        <div className=\"flex flex-wrap justify-between\">\n                          <div className=\"flex flex-wrap items-center space-x-3\">\n                            <span>{value}</span>\n                            <ContextNav\n                              menuItems={\n                                <MenuItems\n                                  stx={value}\n                                  username={state.username}\n                                />\n                              }\n                              buttonIcon={<MenuIcon />}\n                            ></ContextNav>\n                          </div>\n                          <div className=\"flex\">\n                            <span>{addressValue[index]}</span>\n                          </div>\n                        </div>\n                      </li>\n                    );\n                  })}\n                </ul>\n              </div>\n              <hr className=\"border-gray-500\" />\n              <div className=\"flex flex-wrap justify-between\">\n                <div className=\"flex items-baseline space-x-2\">\n                  <span className=\"text-2xl\">BTC</span>\n                  {/* <span className=\"text-gray-200\">100%</span> */}\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <span className=\"text-2xl\">\n                    {addressValue.reduce((a, b) => a + b, 0)}\n                  </span>\n                  <span className=\"font-medium text-gray-200\">BTC</span>\n                </div>\n              </div>\n              <div>\n                <div className=\"flex flex-wrap justify-between mb-3 text-gray-200\">\n                  <div className=\"flex\">\n                    <span>{state.btcAddress.length} Addresses</span>\n                  </div>\n                  <div className=\"flex\">\n                    <span>\n                      {prices.stxusd * addressValue.reduce((a, b) => a + b, 0)}\n                    </span>\n                  </div>\n                </div>\n\n                <ul>\n                  {state.btcAddress.map((value, index) => {\n                    return (\n                      <li\n                        className=\"p-2 mb-1 border-l-4 cursor-pointer hover:bg-primary-400 bg-primary-600 border-primary-300\"\n                        key={index}\n                      >\n                        <div className=\"flex flex-wrap justify-between\">\n                          <div className=\"flex flex-wrap items-center space-x-3\">\n                            <span\n                              onClick={() => {\n                                addBTCAddress(value);\n                              }}\n                            >\n                              {value}\n                            </span>\n                            <ContextNav\n                              menuItems={\n                                <MenuItems\n                                  btc={value}\n                                  username={state.username}\n                                />\n                              }\n                              buttonIcon={<MenuIcon />}\n                            ></ContextNav>\n                          </div>\n                          <div className=\"flex\">\n                            <span>{addressValue[index]}</span>\n                          </div>\n                        </div>\n                      </li>\n                    );\n                  })}\n                </ul>\n              </div>\n            </CardBody>\n          </Card>\n          <Card>\n            <CardBody className=\"space-y-8 text-white\">\n              <div className=\"flex flex-wrap justify-between\">\n                <div className=\"flex flex-wrap items-center\">\n                  <h2 className=\"mr-3 text-2xl font-medium\">STX balance</h2>\n                </div>\n                {/* <div>\n                  <Select className=\"py-1 pl-2 mt-1 bg-transparent border-gray-300 leading-1\">\n                    <option>USD</option>\n                  </Select>\n                </div> */}\n              </div>\n              <div>\n                <div className=\"flex flex-wrap items-center justify-between py-2 border-b border-gray-400\">\n                  <div className=\"flex space-x-2\">\n                    <span>Total Balance</span>\n                  </div>\n                  <div className=\"flex space-x-2\">\n                    <span className=\"text-lg font-medium text-success-400\">\n                      {portfolio.balance / 1000000}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"flex flex-wrap items-center justify-between py-2 border-b border-gray-400\">\n                  <div className=\"flex space-x-2\">\n                    <span>Available Balance</span>\n                  </div>\n                  <div className=\"flex space-x-2\">\n                    <span>\n                      {(portfolio.balance - portfolio.locked) / 1000000}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"flex flex-wrap items-center justify-between py-2\">\n                  <div className=\"flex space-x-2\">\n                    <span>Stacking Balance</span>\n                  </div>\n                  <div className=\"flex space-x-2\">\n                    <Input\n                      className=\"py-3 mb-3 text-white bg-gray-800 border-none text-right\"\n                      placeholder=\"STX Value\"\n                      type=\"number\"\n                      value={stx}\n                      onChange={(e) => {\n                        setSTX(e.target.value);\n                      }}\n                    ></Input>\n                  </div>\n                </div>\n              </div>\n              <div>\n                {/* <div className=\"flex justify-end mb-4\">\n                  <div>\n                    <Select className=\"py-1 pl-2 mt-1 bg-transparent border-gray-300 leading-1\">\n                      <option>Daily</option>\n                    </Select>\n                  </div>\n                </div> */}\n                {/* <ChartCard title=\"Lines\">\n                  <Line {...lineOptions} />                </ChartCard> */}\n              </div>\n              <button\n                className=\"mt-4 mb-6 btn btn-outline-primary btn-sm btn-block\"\n                onClick={onStack}\n              >\n                Stack now\n              </button>\n              {txLoader ? <div>Wait....</div> : <></>}\n            </CardBody>\n          </Card>\n          <Card>\n            <CardBody className=\"space-y-8 text-white\">\n              <div className=\"flex flex-wrap justify-between\">\n                <div className=\"flex flex-wrap items-center\">\n                  <h2 className=\"mr-3 text-2xl font-medium\">BTC balance</h2>\n                </div>\n                <div>\n                  {/* <Select className=\"py-1 pl-2 mt-1 bg-transparent border-gray-300 leading-1\">\n                    <option>USD</option>\n                  </Select> */}\n                </div>\n              </div>\n              <div>\n                <div className=\"flex flex-wrap items-center justify-between py-2 border-b border-gray-400\">\n                  <div className=\"flex space-x-2\">\n                    <span>Total Balance</span>\n                  </div>\n                  <div className=\"flex space-x-2\">\n                    <span className=\"text-lg font-medium text-success-400\">\n                      {parseFloat(\n                        portfolio.balance /\n                          1000000 /\n                          (prices.stxusd * prices.btcusd)\n                      ).toFixed(2)}\n                      BTC\n                    </span>\n                  </div>\n                </div>\n                <div className=\"flex flex-wrap items-center justify-between py-2 border-b border-gray-400\">\n                  <div className=\"flex space-x-2\">\n                    <span>Available Balance</span>\n                  </div>\n                  <div className=\"flex space-x-2\">\n                    <span>\n                      {\" \"}\n                      {parseFloat(\n                        (portfolio.balance - portfolio.locked) /\n                          1000000 /\n                          (prices.stxusd * prices.btcusd)\n                      ).toFixed(2)}{\" \"}\n                      BTC\n                    </span>\n                  </div>\n                </div>\n                <div className=\"flex flex-wrap items-center justify-between py-2\">\n                  <div className=\"flex space-x-2\">\n                    <span>Stacking Balance</span>\n                  </div>\n                  <div className=\"flex space-x-2\">\n                    <span>\n                      {parseFloat(\n                        stx / (prices.stxusd * prices.btcusd)\n                      ).toFixed(2)}{\" \"}\n                      BTV\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </CardBody>\n          </Card>\n        </div>\n        <div></div>\n      </div>\n    </>\n  );\n}\n\nexport default MyPortfolio;\n"],"sourceRoot":""}