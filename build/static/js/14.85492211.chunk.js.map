{"version":3,"sources":["../../src/Tabs.tsx","../node_modules/react-uid/dist/es2015/uid.js","../node_modules/react-uid/dist/es2015/context.js","../node_modules/react-uid/dist/es2015/hooks.js","components/right.js","../node_modules/js-file-download/file-download.js","assets/img/graph-transaction-fees.png","components/Typography/PageTitle.js","assets/img/graph-transfer-summary.png","pages/stack-analytics/Transfers.js"],"names":["generateUID","counter","map","WeakMap","uid","item","index","has","get","set","createSource","prefix","value","source","React","useUIDState","context","quartz","getPrefix","getId","gen","Direction","TabContext","createContext","id","activeTab","numTabs","setActiveTab","direction","HORIZONTAL","TabGroup","initialActiveTab","children","useState","useMemo","Tab","className","activeClassName","inactiveClassName","trigger","props","useContext","tabRef","useRef","useEffect","calculatedClassName","interactionProps","interactions","ref","role","tabIndex","TabPanel","as","Component","style","visibility","TabList","tabListRef","handleKeyUp","useCallback","actions","End","Home","action","e","isActive","Right","prices","useSelector","state","liquidStxSupplyResult","stxusd","btcusd","toLocaleString","useGrouping","module","exports","data","filename","mime","bom","blob","Blob","type","window","navigator","msSaveBlob","blobURL","URL","createObjectURL","webkitURL","tempLink","document","createElement","display","href","setAttribute","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","PageTitle","left","right","show","Left","Date","toLocaleDateString","Blank","list","setList","history","useHistory","dispatch","useDispatch","userSession","isSignInPending","handlePendingSignIn","then","userData","push","getPerson","a","axios","_profile","stxAddress","testnet","data2","console","log","results","filter","token_transfer","fetch","length","class","onClick","downloadelist","JSON","stringify","fileDownload","key","tx","tx_id","UPDATETX","payload","burn_block_time_iso","block_height","sender_address","recipient_address","amount"],"mappings":"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","file":"static/js/14.85492211.chunk.js","sourcesContent":["import React, {\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\n\nimport { useUID } from 'react-uid'\n\nenum Direction {\n  HORIZONTAL,\n  VERTICAL,\n}\n\ninterface TabContextValue {\n  id: string\n  activeTab: number\n  numTabs: number\n  setActiveTab(tab: number): void\n  direction: Direction\n}\n\nlet TabContext = createContext<TabContextValue>({\n  id: 'Please provide a unique id',\n  activeTab: 0,\n  numTabs: 0,\n  setActiveTab: () => {},\n  direction: Direction.HORIZONTAL,\n})\n\nexport function useTab(index: number) {\n  let { activeTab } = useContext(TabContext)\n\n  return {\n    isActive: activeTab === index,\n  }\n}\n\ninterface TabGroupProps {\n  initialActiveTab?: number\n  numTabs: number\n  children: React.ReactNode\n  direction?: Direction\n}\n\nexport function TabGroup({\n  initialActiveTab = 0,\n  numTabs,\n  direction = Direction.HORIZONTAL,\n  children,\n}: TabGroupProps) {\n  let id = useUID()\n  let [activeTab, setActiveTab] = useState(initialActiveTab)\n\n  let value = useMemo(\n    () => ({ id, activeTab, setActiveTab, numTabs, direction }),\n    [activeTab, setActiveTab, numTabs, direction]\n  )\n\n  return <TabContext.Provider value={value}>{children}</TabContext.Provider>\n}\n\ninterface TabProps {\n  index: number\n  className: string\n  activeClassName: string\n  inactiveClassName: string\n  trigger?: 'click' | 'hover' | 'none'\n  children?: React.ReactNode\n  [key: string]: any\n}\n\nexport function Tab({\n  index,\n  className,\n  activeClassName,\n  inactiveClassName,\n  trigger = 'click',\n  ...props\n}: TabProps) {\n  let { id, activeTab, setActiveTab } = useContext(TabContext)\n  let tabRef = useRef<HTMLButtonElement>()\n\n  useEffect(() => {\n    if (activeTab === index) {\n      tabRef.current?.focus()\n    }\n  }, [activeTab, index])\n\n  let calculatedClassName = useMemo(() => {\n    return [\n      className,\n      activeTab === index ? activeClassName : inactiveClassName,\n    ].join(' ')\n  }, [className, activeClassName, inactiveClassName, activeTab, index])\n\n  let interactionProps = useMemo(() => {\n    let interactions: any = {}\n\n    interactions.onClick = () => setActiveTab(index)\n\n    if (trigger === 'hover') {\n      interactions.onMouseEnter = () => setActiveTab(index)\n    }\n\n    return interactions\n  }, [trigger, setActiveTab, index])\n\n  return (\n    <button\n      ref={tabRef}\n      role=\"tab\"\n      aria-controls={`${id}-${index}`}\n      aria-selected={activeTab === index}\n      tabIndex={activeTab === index ? 0 : -1}\n      className={calculatedClassName}\n      {...interactionProps}\n      {...props}\n    />\n  )\n}\n\ntype HTMLTags = keyof JSX.IntrinsicElements\n\ninterface TabPanelProps {\n  as?: HTMLTags\n  index: number\n  className: string\n  activeClassName: string\n  inactiveClassName: string\n  children?: React.ReactNode\n  [key: string]: any\n}\n\nexport function TabPanel({\n  as: Component = 'div',\n  index,\n  className,\n  activeClassName,\n  inactiveClassName,\n  ...props\n}: TabPanelProps) {\n  let { id, activeTab } = useContext(TabContext)\n\n  let calculatedClassName = useMemo(() => {\n    return [\n      className,\n      activeTab === index ? activeClassName : inactiveClassName,\n    ].join(' ')\n  }, [className, activeClassName, inactiveClassName, activeTab, index])\n\n  return (\n    <Component\n      style={{\n        ...props.style,\n        visibility: activeTab === index ? 'visible' : 'hidden',\n      }}\n      id={`${id}-${index}`}\n      role=\"tabpanel\"\n      aria-expanded={activeTab === index}\n      className={calculatedClassName}\n      {...props}\n    />\n  )\n}\n\ninterface TabListProps {\n  as?: HTMLTags\n  children?: React.ReactNode\n  [key: string]: any\n}\n\nexport function TabList({ as: Component = 'div', ...props }: TabListProps) {\n  let tabListRef = useRef<any>()\n  let { setActiveTab, numTabs, activeTab, direction } = useContext(TabContext)\n\n  let handleKeyUp = useCallback(\n    (e: KeyboardEvent) => {\n      let actions: Record<string, () => void> = {\n        End: () => {\n          setActiveTab(numTabs - 1)\n        },\n        Home: () => {\n          setActiveTab(0)\n        },\n      }\n\n      if (direction === Direction.HORIZONTAL) {\n        actions.ArrowLeft = () => {\n          let previous = activeTab - 1 >= 0 ? activeTab - 1 : numTabs - 1\n          setActiveTab(previous)\n        }\n\n        actions.ArrowRight = () => {\n          let next = activeTab + 1 < numTabs ? activeTab + 1 : 0\n          setActiveTab(next)\n        }\n      }\n\n      if (direction === Direction.VERTICAL) {\n        actions.ArrowUp = () => {\n          let previous = activeTab - 1 >= 0 ? activeTab - 1 : numTabs - 1\n          setActiveTab(previous)\n        }\n\n        actions.ArrowDown = () => {\n          let next = activeTab + 1 < numTabs ? activeTab + 1 : 0\n          setActiveTab(next)\n        }\n      }\n\n      let action = actions[e.key]\n\n      if (action) {\n        e.preventDefault()\n        action()\n      }\n    },\n    [setActiveTab, activeTab, numTabs, direction]\n  )\n\n  useEffect(() => {\n    tabListRef.current.addEventListener('keyup', handleKeyUp)\n\n    return () => tabListRef.current.removeEventListener('keyup', handleKeyUp)\n  }, [handleKeyUp])\n\n  // @ts-ignore\n  return <Component ref={tabListRef} role=\"tablist\" {...props} />\n}\n\nTabGroup.Tab = Tab\nTabGroup.TabPanel = TabPanel\nTabGroup.TabList = TabList\nTabGroup.useTab = useTab\n\nTabGroup.direction = Direction\n","/**\n * generates a UID factory\n * @internal\n * @example\n * const uid = generateUID();\n * uid(object) = 1;\n * uid(object) = 1;\n * uid(anotherObject) = 2;\n */\nexport var generateUID = function () {\n    var counter = 1;\n    var map = new WeakMap();\n    /**\n     * @borrows {uid}\n     */\n    var uid = function (item, index) {\n        if (typeof item === 'number' ||\n            typeof item === 'string') {\n            return index ? \"idx-\" + index : \"val-\" + item;\n        }\n        if (!map.has(item)) {\n            map.set(item, counter++);\n            return uid(item);\n        }\n        return 'uid' + map.get(item);\n    };\n    return uid;\n};\n/**\n * @name uid\n * returns an UID associated with {item}\n * @param {Object} item - object to generate UID for\n * @param {Number} index, a fallback index\n * @example\n * uid(object) == 1;\n * uid(object) == 1;\n * uid(anotherObject) == 2;\n * uid(\"not object\", 42) == 42\n *\n * @see {@link useUID}\n */\nexport var uid = generateUID();\n","import * as React from 'react';\nimport { generateUID } from \"./uid\";\nexport var createSource = function (prefix) {\n    if (prefix === void 0) { prefix = ''; }\n    return ({\n        value: 1,\n        prefix: prefix,\n        uid: generateUID()\n    });\n};\nexport var counter = createSource();\nexport var source = React.createContext(createSource());\nexport var getId = function (source) { return source.value++; };\nexport var getPrefix = function (source) { return source ? source.prefix : ''; };\n","import * as React from \"react\";\nimport { counter, getId, getPrefix, source } from \"./context\";\nvar generateUID = function (context) {\n    var quartz = context || counter;\n    var prefix = getPrefix(quartz);\n    var id = getId(quartz);\n    var uid = prefix + id;\n    var gen = function (item) { return uid + quartz.uid(item); };\n    return { uid: uid, gen: gen };\n};\nvar useUIDState = function () {\n    if (process.env.NODE_ENV !== \"production\") {\n        if (!('useContext' in React)) {\n            throw new Error('Hooks API requires React 16.8+');\n        }\n    }\n    // @ts-ignore\n    return React.useState(generateUID(React.useContext(source)));\n};\n/**\n * returns and unique id. SSR friendly\n * returns {String}\n * @see {@link UIDConsumer}\n * @see https://github.com/thearnica/react-uid#hooks-168\n * @example\n * const id = useUID();\n * id == 1; // for example\n */\nexport var useUID = function () {\n    var uid = useUIDState()[0].uid;\n    return uid;\n};\n/**\n * returns an uid generator\n * @see {@link UIDConsumer}\n * @see https://github.com/thearnica/react-uid#hooks-168\n * @example\n * const uid = useUIDSeed();\n * return (\n *  <>\n *    <label for={seed('email')}>Email: </label>\n *    <input id={seed('email')} name=\"email\" />\n *    {data.map(item => <div key={seed(item)}>...</div>\n *  </>\n * )\n */\nexport var useUIDSeed = function () {\n    var gen = useUIDState()[0].gen;\n    return gen;\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nexport const Right = () => {\n  const prices = useSelector((state) => state.prices);\n  return (\n    <>\n      <div className=\"text-gray-300 \">\n        <p className=\"mb-2\">Total Volume</p>\n        <div>\n          <b className=\"mr-2 text-3xl font-normal text-white\">\n            {prices.liquidStxSupplyResult} STX\n          </b>{\" \"}\n          <span>\n            <span className=\"text-yellow-500\">\n              {\" \"}\n              {(\n                (prices.stxusd * prices.liquidStxSupplyResult) /\n                prices.btcusd\n              ).toLocaleString(\"fullwide\", { useGrouping: false })}\n            </span>{\" \"}\n            BTC |{\" \"}\n            <span className=\"text-green-600\">\n              {\" \"}\n              {(\n                prices.stxusd * prices.liquidStxSupplyResult\n              ).toLocaleString(\"fullwide\", { useGrouping: false })}\n            </span>{\" \"}\n            USD\n          </span>\n        </div>\n      </div>\n    </>\n  );\n};\n","module.exports = function(data, filename, mime, bom) {\n    var blobData = (typeof bom !== 'undefined') ? [bom, data] : [data]\n    var blob = new Blob(blobData, {type: mime || 'application/octet-stream'});\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    }\n    else {\n        var blobURL = (window.URL && window.URL.createObjectURL) ? window.URL.createObjectURL(blob) : window.webkitURL.createObjectURL(blob);\n        var tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n\n        // Fixes \"webkit blob resource error 1\"\n        setTimeout(function() {\n            document.body.removeChild(tempLink);\n            window.URL.revokeObjectURL(blobURL);\n        }, 200)\n    }\n}\n","module.exports = __webpack_public_path__ + \"static/media/graph-transaction-fees.311a3ced.png\";","import React from \"react\";\n\nfunction PageTitle({ children, left, right }) {\n  if (children) {\n    return (\n      <div className=\"flex items-center justify-between px-8 pt-10 pb-8 mb-8 -mx-6 text-gray-100 border-b-2 border-gray-900 bg-gray-950\">\n        <h1 show={children} className=\"mb-3 text-2xl\">\n          {children}\n        </h1>\n      </div>\n    );\n  }\n\n  if (!children) {\n    return (\n      <div className=\"flex flex-wrap items-center justify-between px-12 pt-10 pb-8 mb-8 -mx-6 text-gray-100 border-b-2 border-gray-900 bg-gray-950\">\n        <div>{left}</div>\n        <div>{right}</div>\n      </div>\n    );\n  }\n}\n\nexport default PageTitle;\n","module.exports = __webpack_public_path__ + \"static/media/graph-transfer-summary.480e613c.png\";","import React, { useEffect, useState } from \"react\";\n\nimport PageTitle from \"../../components/Typography/PageTitle\";\n\nimport {\n  Card,\n  CardBody,\n  Table,\n  TableHeader,\n  TableCell,\n  TableBody,\n  TableRow,\n  TableContainer,\n} from \"@windmill/react-ui\";\nimport { FiDownload } from \"react-icons/fi\";\nimport { TabGroup } from \"@statikly/funk\";\nimport ts from \"../../assets/img/graph-transfer-summary.png\";\nimport tf from \"../../assets/img/graph-transaction-fees.png\";\nimport { Right } from \"../../components/right\";\nimport axios from \"axios\";\nimport { prices } from \"../../redux/reducers\";\nimport ThemedSuspense from \"../../components/ThemedSuspense\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { UPDATETX } from \"../../redux/reducers\";\nimport fileDownload from \"js-file-download\";\nimport { getPerson, userSession } from \"../../scripts/auth\";\n\nconst Left = () => {\n  return (\n    <>\n      <h1 className=\"mb-3 text-2xl\">Transfer Activity</h1>\n      <div>{new Date().toLocaleDateString()}</div>\n    </>\n  );\n};\n\nfunction Blank() {\n  const [list, setList] = useState([]);\n  const prices = useSelector((state) => state.prices);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  if (userSession.isSignInPending()) {\n    userSession.handlePendingSignIn().then((userData) => {\n      history.push(\"/app/network\");\n    });\n  }\n  let data;\n  try {\n    data = getPerson();\n  } catch (e) {\n    history.push(\"/app/network\");\n  }\n\n  useEffect(() => {\n    const fetch = async () => {\n      if (data) {\n        const data2 = await axios.get(\n          `https://stacks-node-api.testnet.stacks.co/extended/v1/address/${data._profile.stxAddress.testnet}/transactions`\n        );\n        console.log(data2.data);\n        setList(\n          data2.data.results.filter((data) => {\n            return data.token_transfer ? true : false;\n          })\n        );\n      }\n    };\n    fetch();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const redirect = (tx) => {\n    console.log(tx);\n    dispatch({ type: UPDATETX, payload: tx });\n    history.push(\"/app/stack-analytics/transaction\");\n  };\n\n  const exportCSV = () => {\n    const downloadelist = list.map((value) => {\n      return JSON.stringify(value);\n    });\n    fileDownload(downloadelist, \"report.csv\");\n  };\n  if (list.length === 0) {\n    return <ThemedSuspense />;\n  }\n  return (\n    <>\n      <PageTitle left={<Left />} right={<Right />}></PageTitle>\n      <div className=\"p-4 space-y-6\">\n        <div className=\"grid grid-cols-1 mb-8 xl:gap-6 xl:grid-cols-3\">\n          <div class=\"col-span-2\">\n            <Card className=\"mb-8 shadow-md\">\n              <CardBody>\n                <TabGroup numTabs={3} direction={TabGroup.direction.HORIZONTAL}>\n                  <div className=\"flex items-center justify-between text-gray-400 dark:text-white\">\n                    <div className=\"flex items-center\">\n                      <TabGroup.TabList>\n                        <TabGroup.Tab\n                          index={0}\n                          className=\"px-1 py-2 mr-3 text-xl transition-colors duration-150\"\n                          activeClassName=\"text-primary-500 dark:text-white\"\n                          inactiveClassName=\"text-gray-400 dark:text-gray-300\"\n                        >\n                          Transfers\n                        </TabGroup.Tab>\n                      </TabGroup.TabList>\n                      <div className=\"flex items-center ml-10 text-primary-400\">\n                        <FiDownload />\n                        <button onClick={exportCSV} className=\"ml-1\">\n                          Export\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                  <TabGroup.TabPanel\n                    index={0}\n                    className=\"py-10 text-gray-500 transition-all transform dark:text-gray-200\"\n                    activeClassName=\"opacity-100 duration-500 translate-x-0\"\n                    inactiveClassName=\"absolute opacity-0 -translate-x-2\"\n                  >\n                    <TableContainer className=\"mb-1\">\n                      <Table>\n                        <TableHeader>\n                          <tr>\n                            <TableCell>Date</TableCell>\n                            <TableCell>Block Height</TableCell>\n                            <TableCell>Sender</TableCell>\n                            <TableCell>Receiver</TableCell>\n                            <TableCell>Volume</TableCell>\n                          </tr>\n                        </TableHeader>\n                        <TableBody className=\"text-lg dark:divide-gray-500\">\n                          {list.map((value, index) => {\n                            return (\n                              <TableRow\n                                key={index}\n                                onClick={(e) => redirect(value.tx_id)}\n                              >\n                                <TableCell>\n                                  <div className=\"text-lg text-white\">\n                                    Today\n                                  </div>\n                                  <span className=\"text-sm\">\n                                    {new Date(\n                                      value.burn_block_time_iso\n                                    ).toLocaleDateString()}{\" \"}\n                                    GMT\n                                  </span>\n                                </TableCell>\n                                <TableCell>\n                                  <span className=\"text-white\">\n                                    {value.block_height}\n                                  </span>\n                                </TableCell>\n                                <TableCell>\n                                  {/* <div className=\"text-error-500\">Karim</div> */}\n                                  <span>{value.sender_address}</span>\n                                </TableCell>\n                                <TableCell>\n                                  {/* <div className=\"text-primary-500\">Karim</div> */}\n                                  <span>\n                                    {value.token_transfer\n                                      ? value.token_transfer.recipient_address\n                                      : null}\n                                  </span>\n                                </TableCell>\n                                <TableCell>\n                                  <div className=\"float-right text-white\">\n                                    {value.token_transfer\n                                      ? value.token_transfer.amount\n                                      : 0}{\" \"}\n                                    STX\n                                  </div>\n                                  <div className=\"float-right text-sm\">\n                                    <span className=\"text-warning-500\">\n                                      {value.token_transfer\n                                        ? (value.token_transfer.amount *\n                                            prices.stxusd) /\n                                          prices.btcusd\n                                        : 0}\n                                    </span>{\" \"}\n                                    BTC |{\" \"}\n                                    <span className=\"text-success-600\">\n                                      {value.token_transfer\n                                        ? value.token_transfer.amount *\n                                          prices.stxusd\n                                        : 0}\n                                    </span>{\" \"}\n                                    USD\n                                  </div>\n                                </TableCell>\n                              </TableRow>\n                            );\n                          })}\n                        </TableBody>\n                      </Table>\n                    </TableContainer>\n                  </TabGroup.TabPanel>\n                </TabGroup>\n              </CardBody>\n            </Card>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Blank;\n"],"sourceRoot":""}