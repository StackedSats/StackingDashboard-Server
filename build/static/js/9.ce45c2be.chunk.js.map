{"version":3,"sources":["../../src/constants.ts","../../src/utils.ts","../../src/types.ts","../../src/errors.ts","../../src/authorization.ts","../node_modules/@stacks/transactions/node_modules/c32check/lib/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/js-file-download/file-download.js","../../../../src/clarity/types/principalCV.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/defineProperty.js","../../../src/clarity/serialize.ts","../../../src/clarity/deserialize.ts","../../src/keys.ts","../../src/payload.ts","../../../../src/clarity/types/bufferCV.ts","../node_modules/@stacks/transactions/node_modules/c32check/lib/encoding.js","../node_modules/@stacks/transactions/node_modules/c32check/lib/checksum.js","../../src/postcondition.ts","../../../../src/clarity/types/intCV.ts","../../../../src/clarity/types/booleanCV.ts","../../../../src/clarity/types/optionalCV.ts","../../../../src/clarity/types/stringCV.ts","../../../../../../node_modules/regenerator-runtime/runtime.js","../../../../src/generated/models/index.ts","../../../src/generated/runtime.ts","../node_modules/@stacks/transactions/node_modules/c32check/lib/address.js","../node_modules/@stacks/transactions/node_modules/c32check/lib/base58check.js","../../src/bufferReader.ts","../../../../src/clarity/types/responseCV.ts","../../../../src/clarity/types/listCV.ts","../../../../src/clarity/types/tupleCV.ts","../../src/index.ts","../../../src/generated/index.ts","../../../../src/generated/apis/index.ts","../../../../src/generated/apis/AccountsApi.ts","../../../../src/generated/models/AccountDataResponse.ts","../../../../src/generated/models/AddressAssetsListResponse.ts","../../../../src/generated/models/AddressBalanceResponse.ts","../../../../src/generated/models/AddressBalanceResponseStx.ts","../../../../src/generated/models/AddressStxBalanceResponse.ts","../../../../src/generated/models/AddressTransactionsListResponse.ts","../../../../src/generated/models/Block.ts","../../../../src/generated/models/BlockListResponse.ts","../../../../src/generated/models/BurnchainReward.ts","../../../../src/generated/models/BurnchainRewardListResponse.ts","../../../../src/generated/models/BurnchainRewardsTotal.ts","../../../../src/generated/models/ContractInterfaceResponse.ts","../../../../src/generated/models/ContractSourceResponse.ts","../../../../src/generated/models/CoreNodeInfoResponse.ts","../../../../src/generated/models/CoreNodePoxResponse.ts","../../../../src/generated/models/MapEntryResponse.ts","../../../../src/generated/models/MempoolTransactionListResponse.ts","../../../../src/generated/models/NetworkBlockTimeResponse.ts","../../../../src/generated/models/NetworkBlockTimesResponse.ts","../../../../src/generated/models/NetworkBlockTimesResponseMainnet.ts","../../../../src/generated/models/NetworkIdentifier.ts","../../../../src/generated/models/OtherTransactionIdentifier.ts","../../../../src/generated/models/PostCoreNodeTransactionsError.ts","../../../../src/generated/models/ReadOnlyFunctionArgs.ts","../../../../src/generated/models/ReadOnlyFunctionSuccessResponse.ts","../../../../src/generated/models/RosettaAccount.ts","../../../../src/generated/models/RosettaAccountBalanceRequest.ts","../../../../src/generated/models/RosettaAccountBalanceResponse.ts","../../../../src/generated/models/RosettaAccountBalanceResponseCoinIdentifier.ts","../../../../src/generated/models/RosettaAccountBalanceResponseMetadata.ts","../../../../src/generated/models/RosettaAccountIdentifier.ts","../../../../src/generated/models/RosettaAmount.ts","../../../../src/generated/models/RosettaBlock.ts","../../../../src/generated/models/RosettaBlockMetadata.ts","../../../../src/generated/models/RosettaBlockMetadata1.ts","../../../../src/generated/models/RosettaBlockMetadata2.ts","../../../../src/generated/models/RosettaBlockRequest.ts","../../../../src/generated/models/RosettaBlockResponse.ts","../../../../src/generated/models/RosettaBlockTransactionRequest.ts","../../../../src/generated/models/RosettaBlockTransactionResponse.ts","../../../../src/generated/models/RosettaCoin.ts","../../../../src/generated/models/RosettaCoinChange.ts","../../../../src/generated/models/RosettaConstructionCombineRequest.ts","../../../../src/generated/models/RosettaConstructionCombineResponse.ts","../../../../src/generated/models/RosettaConstructionDeriveRequest.ts","../../../../src/generated/models/RosettaConstructionDeriveResponse.ts","../../../../src/generated/models/RosettaConstructionHashRequest.ts","../../../../src/generated/models/RosettaConstructionHashResponse.ts","../../../../src/generated/models/RosettaConstructionMetadataRequest.ts","../../../../src/generated/models/RosettaConstructionMetadataResponse.ts","../../../../src/generated/models/RosettaConstructionMetadataResponseMetadata.ts","../../../../src/generated/models/RosettaConstructionParseRequest.ts","../../../../src/generated/models/RosettaConstructionParseResponse.ts","../../../../src/generated/models/RosettaConstructionPayloadResponse.ts","../../../../src/generated/models/RosettaConstructionPayloadsRequest.ts","../../../../src/generated/models/RosettaConstructionPreprocessRequest.ts","../../../../src/generated/models/RosettaConstructionPreprocessResponse.ts","../../../../src/generated/models/RosettaConstructionSubmitRequest.ts","../../../../src/generated/models/RosettaConstructionSubmitResponse.ts","../../../../src/generated/models/RosettaCurrency.ts","../../../../src/generated/models/RosettaError.ts","../../../../src/generated/models/RosettaErrorDetails.ts","../../../../src/generated/models/RosettaMaxFeeAmount.ts","../../../../src/generated/models/RosettaMempoolRequest.ts","../../../../src/generated/models/RosettaMempoolResponse.ts","../../../../src/generated/models/RosettaMempoolTransactionRequest.ts","../../../../src/generated/models/RosettaMempoolTransactionResponse.ts","../../../../src/generated/models/RosettaNetworkListResponse.ts","../../../../src/generated/models/RosettaNetworkListResponseSubNetworkIdentifier.ts","../../../../src/generated/models/RosettaNetworkListResponseSubNetworkIdentifierMetadata.ts","../../../../src/generated/models/RosettaNetworkOptionsResponse.ts","../../../../src/generated/models/RosettaNetworkOptionsResponseAllow.ts","../../../../src/generated/models/RosettaNetworkOptionsResponseVersion.ts","../../../../src/generated/models/RosettaOperation.ts","../../../../src/generated/models/RosettaOperationIdentifier.ts","../../../../src/generated/models/RosettaOperationStatus.ts","../../../../src/generated/models/RosettaOptions.ts","../../../../src/generated/models/RosettaOptionsRequest.ts","../../../../src/generated/models/RosettaParentBlockIdentifier.ts","../../../../src/generated/models/RosettaPublicKey.ts","../../../../src/generated/models/RosettaRelatedOperation.ts","../../../../src/generated/models/RosettaSignature.ts","../../../../src/generated/models/RosettaStatusRequest.ts","../../../../src/generated/models/RosettaSubAccount.ts","../../../../src/generated/models/RosettaTransaction.ts","../../../../src/generated/models/RunFaucetResponse.ts","../../../../src/generated/models/SigningPayload.ts","../../../../src/generated/models/TransactionIdentifier.ts","../../../../src/generated/models/TransactionResults.ts","../../../../src/generated/apis/BlocksApi.ts","../../../../src/generated/apis/BurnchainApi.ts","../../../../src/generated/apis/FaucetsApi.ts","../../../../src/generated/apis/FeesApi.ts","../../../../src/generated/apis/InfoApi.ts","../../../../src/generated/apis/RosettaApi.ts","../../../../src/generated/apis/SearchApi.ts","../../../../src/generated/apis/SmartContractsApi.ts","../../../../src/generated/apis/TransactionsApi.ts","../../../src/ws/index.ts","../../../src/clarity/clarityValue.ts","../../../jsonrpc.ts","../node_modules/eventemitter3/index.js","../node_modules/ws/browser.js","../../src/transaction.ts","../../src/signer.ts","../../src/contract-abi.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator.js","../../src/builders.ts"],"names":["ChainID","StacksMessageType","PayloadType","AnchorMode","TransactionVersion","DEFAULT_CHAIN_ID","Mainnet","MAX_STRING_LENGTH_BYTES","CLARITY_INT_SIZE","COINBASE_BUFFER_LENGTH_BYTES","RECOVERABLE_ECDSA_SIG_LENGTH_BYTES","COMPRESSED_PUBKEY_LENGTH_BYTES","UNCOMPRESSED_PUBKEY_LENGTH_BYTES","MEMO_MAX_LENGTH_BYTES","PostConditionMode","PostConditionType","AuthType","AddressHashMode","AddressVersion","PubKeyEncoding","FungibleConditionCode","NonFungibleConditionCode","PostConditionPrincipalID","AssetType","TxRejectedReason","BufferArray","_value","appendHexString","this","Buffer","push","appendByte","Number","octet","Error","concatBuffer","leftPadHex","hexString","leftPadHexToLength","rightPadHexToLength","intToHexString","integer","lengthBytes","hexStringToInt","parseInt","exceedsMaxLengthBytes","string","cloneDeep","obj","lodashCloneDeep","omit","prop","clone","sha512_256","Object","_ah","_al","_bh","_bl","_ch","_cl","_dh","_dl","_eh","_el","_fh","_fl","_gh","_gl","_hh","_hl","digest","buff","encoding","txidFromData","data","update","hash160","input","sha256Result","hashP2PKH","hashP2SH","numSigs","pubKeys","bufferArray","pubKey","redeemScript","redeemScriptHash","isClarityName","name","regex","cvToHex","cv","serializeCV","serialized","parseReadOnlyResponse","response","hex","hexWithoutPrefix","bufferCV","deserializeCV","hexToCV","serializeStacksMessage","message","serializeAddress","serializePrincipal","serializeLPString","memoString","contentBuffer","paddedContent","serializeMemoString","serializeAssetInfo","serializePostCondition","serializePublicKey","serializeLPList","serializePayload","serializeTransactionAuthField","serializeMessageSignature","createAddress","c32AddressString","addressData","c32addressDecode","type","version","createEmptyAddress","repeat","addressFromVersionHash","hash","addressHashModeToVersion","hashMode","txVersion","JSON","addressFromPublicKeys","publicKeys","i","isCompressed","addressToString","address","c32address","deserializeAddress","bufferReader","parsePrincipalString","principalString","createContractPrincipal","createStandardPrincipal","addressString","addr","prefix","contractName","createLPString","principal","deserializePrincipal","_","deserializeLPString","content","lengthPrefixBytes","maxLengthBytes","prefixLength","maxLength","lps","length","prefixBytes","codeBodyString","createMemoString","deserializeMemoString","parseAssetInfoString","id","assetName","assetAddress","assetContractName","assetTokenName","info","deserializeAssetInfo","createLPList","values","lpList","list","index","deserializeLPList","l","deserializePostCondition","deserializePublicKey","deserializeTransactionAuthField","SerializationError","DeserializationError","NotImplementedError","SigningError","Deserializable","deserialize","createMessageSignature","signature","emptyMessageSignature","messageSignature","deserializeMessageSignature","createTransactionAuthField","contents","field","AuthFieldType","authFieldType","n","createSingleSigSpendingCondition","nonce","fee","signer","createStacksPublicKey","keyEncoding","createMultiSigSpendingCondition","stacksPublicKeys","fields","signaturesRequired","isSingleSig","condition","clearCondition","cloned","serializeSpendingCondition","serializeSingleSigSpendingCondition","serializeMultiSigSpendingCondition","deserializeSpendingCondition","deserializeSingleSigSpendingCondition","deserializeMultiSigSpendingCondition","makeSigHashPreSign","curSigHash","authType","sigHash","makeSigHashPostSign","hashLength","pubKeyEncoding","nextSignature","privateKey","sigHashPreSign","signWithKey","publicKey","getPublicKey","nextSig","nextSigHash","verify","initialSigHash","publicKeyFromSignature","nextVerification","verifySingleSig","Authorization","intoInitialSighashAuth","spendingCondition","newInitialSigHash","setFee","getFee","sponsorSpendingCondition","setNonce","setSponsorNonce","setSponsor","verifyOrigin","serialize","StandardAuthorization","SponsoredAuthorization","sponsorSC","defineProperty","exports","value","b58ToC32","c32ToB58","versions","c32normalize","c32checkDecode","c32checkEncode","c32decode","c32encode","encoding_1","require","enumerable","get","checksum_1","address_1","_createForOfIteratorHelper","o","Symbol","iterator","Array","isArray","F","s","done","e","_e","f","TypeError","it","err","normalCompletion","didErr","step","next","_e2","module","filename","mime","bom","blob","Blob","window","navigator","msSaveBlob","blobURL","URL","createObjectURL","webkitURL","tempLink","document","createElement","style","display","href","setAttribute","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","principalToString","ClarityType","principalCV","contractPrincipalCV","standardPrincipalCV","standardPrincipalCVFromAddress","contractPrincipalCVFromAddress","key","configurable","writable","bufferWithTypeID","typeId","serializeStringCV","buffers","str","len","serializeBoolCV","serializeBufferCV","buffer","serializeIntCV","serializeStandardPrincipalCV","serializeContractPrincipalCV","serializeResponseCV","serializedValue","serializeListCV","lexicographicOrder","bufA","bufB","nameWithLength","serializeTupleCV","serializeStringAsciiCV","serializeStringUtf8CV","intCV","uintCV","bufferLength","trueCV","falseCV","sAddress","cAddress","responseOkCV","responseErrorCV","noneCV","someCV","listLength","listContents","listCV","tupleLength","tupleContents","clarityName","tupleCV","asciiStrLen","asciiStr","stringAsciiCV","utf8StrLen","utf8Str","stringUtf8CV","ec","messageBN","parsedSignature","coordinateValueBytes","recoveryParamHex","r","recoveryParam","parseRecoverableSignature","publicKeyFromBuffer","publicKeyToString","pubKeyfromPrivKey","privKey","createStacksPrivateKey","keyPair","fieldId","keyLength","compressed","canonical","recoverableSignatureString","publicKeyToAddress","createTokenTransferPayload","recipient","amount","memo","payloadType","createContractCallPayload","contractAddress","functionName","functionArgs","createSmartContractPayload","codeBody","payload","numArgs","arg","deserializePayload","contractCallName","numberOfArgs","clarityValue","PoisonMicroblock","coinbaseBuffer","createCoinbasePayload","bufferCVFromString","c32","buffer_1","c32input","toUpperCase","replace","inputHex","minLength","match","res","carry","toLowerCase","currentCode","indexOf","nextCode","nextBits","nextLowBits","curC32Digit","unshift","C32leadingZeros","slice","zeroPrefix","from","toString","numLeadingZeroBytesInHex","count","join","numLeadingZeroBytes","carryBits","currentValue","currentHexDigit","hexLeadingZeros","hexStr","cross_sha256_1","c32checksum","dataHex","hashSha256","versionHex","checksumHex","c32str","c32data","versionChar","checksum","substring","createSTXPostCondition","conditionCode","conditionType","createFungiblePostCondition","assetInfo","createNonFungiblePostCondition","postCondition","postConditionType","twos","bn","BoolTrue","BoolFalse","OptionalNone","runtime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","toStringTagSymbol","define","protoGenerator","outerFn","generator","context","Context","tryLocsList","state","method","doneResult","delegate","delegateResult","maybeInvokeDelegate","record","tryCatch","innerFn","self","makeInvokeMethod","fn","ContinueSentinel","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","GeneratorFunctionPrototype","Generator","prototype","_invoke","PromiseImpl","result","invoke","resolve","error","reject","previousPromise","callInvokeWithMethodAndArg","entry","tryLoc","locs","iteratorMethod","iterable","isNaN","GeneratorFunction","ctor","genFun","__await","defineIteratorMethods","AsyncIterator","iter","wrap","keys","constructor","reset","_sent","stop","rootRecord","tryEntries","dispatchException","handle","hasCatch","hasFinally","prev","abrupt","finallyEntry","complete","finish","resetTryEntry","thrown","delegateYield","resultName","nextLoc","regeneratorRuntime","accidentalStrictMode","Function","__exportStar","configuration","base58check","mainnet","p2pkh","p2sh","testnet","ADDR_BITCOIN_TO_STACKS","ADDR_STACKS_TO_BITCOIN","hash160hex","c32addr","b58check","stacksVersion","addrInfo","decode","hash160String","addrVersion","undefined","c32string","bitcoinVersion","encode","basex","ALPHABET","concat","forEach","check","enumCheckFunctions","isEnum","enumVariable","checker","newChecker","enumValues","v","enumValueSet","Set","createEnumChecker","BufferReader","options","readBuffer","smartBuffer","readUInt32BE","readUInt8","readUInt16BE","readBigUIntLE","BigInt","readBigUIntBE","readBigUInt64BE","readString","readUInt8Enum","num","invalidEnumErrorFormatter","getCVTypeString","val","has","hasOwnProperty","Events","EE","once","addListener","emitter","event","listener","evt","_events","_eventsCount","clearEvent","EventEmitter","create","__proto__","eventNames","events","names","call","getOwnPropertySymbols","listeners","handlers","ee","listenerCount","emit","a1","a2","a3","a4","a5","args","arguments","removeListener","apply","j","on","removeAllListeners","off","prefixed","StacksTransaction","chainId","postConditionMode","postConditions","signBegin","tx","verifyBegin","createTxWithSignature","parsedSig","auth","signNextOrigin","signAndAppend","signNextSponsor","appendPubkey","cond","txid","anchorMode","chainIdBuffer","TransactionSigner","transaction","originSigHash","signOrigin","checkOverlap","checkOversign","nextSighash","appendOrigin","signSponsor","getTxInComplete","resume","ClarityAbiTypeId","isClarityAbiPrimitive","isClarityAbiBuffer","isClarityAbiStringAscii","isClarityAbiStringUtf8","isClarityAbiResponse","isClarityAbiOptional","isClarityAbiTuple","isClarityAbiList","getTypeUnion","getTypeString","t","matchType","union","tuple","abiTupleEntry","validateContractCall","abi","filtered","abiArgs","payloadArg","abiArg","argNum","asyncGeneratorStep","gen","_next","_throw","Promise","then","defaultOptions","network","senderAddress","url","sender","fetchPrivate","headers","msg","responseJson"],"mappings":"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","file":"static/js/9.ce45c2be.chunk.js","sourcesContent":["/**\n * Unsigned 32-bit integer\n */\nenum ChainID {\n  Testnet = 0x80000000,\n  Mainnet = 0x00000001,\n}\n\nconst DEFAULT_CHAIN_ID = ChainID.Mainnet;\nconst MAX_STRING_LENGTH_BYTES = 128;\nconst CLARITY_INT_SIZE = 128;\nconst COINBASE_BUFFER_LENGTH_BYTES = 32;\nconst RECOVERABLE_ECDSA_SIG_LENGTH_BYTES = 65;\nconst COMPRESSED_PUBKEY_LENGTH_BYTES = 32;\nconst UNCOMPRESSED_PUBKEY_LENGTH_BYTES = 64;\nconst MEMO_MAX_LENGTH_BYTES = 34;\nconst DEFAULT_CORE_NODE_API_URL = 'https://stacks-node-api.mainnet.stacks.co';\n\nenum StacksMessageType {\n  Address,\n  Principal,\n  LengthPrefixedString,\n  MemoString,\n  AssetInfo,\n  PostCondition,\n  PublicKey,\n  LengthPrefixedList,\n  Payload,\n  MessageSignature,\n  TransactionAuthField,\n}\n\nenum PayloadType {\n  TokenTransfer = 0x00,\n  SmartContract = 0x01,\n  ContractCall = 0x02,\n  PoisonMicroblock = 0x03,\n  Coinbase = 0x04,\n}\n\nenum AnchorMode {\n  OnChainOnly = 0x01,\n  OffChainOnly = 0x02,\n  Any = 0x03,\n}\n\nenum TransactionVersion {\n  Mainnet = 0x00,\n  Testnet = 0x80,\n}\n\nconst DEFAULT_TRANSACTION_VERSION = TransactionVersion.Mainnet;\n\nenum PostConditionMode {\n  Allow = 0x01,\n  Deny = 0x02,\n}\n\nenum PostConditionType {\n  STX = 0x00,\n  Fungible = 0x01,\n  NonFungible = 0x02,\n}\n\nenum AuthType {\n  Standard = 0x04,\n  Sponsored = 0x05,\n}\n\nenum AddressHashMode {\n  // serialization modes for public keys to addresses.\n  // We support four different modes due to legacy compatibility with Stacks v1 addresses:\n  /** SingleSigHashMode - hash160(public-key), same as bitcoin's p2pkh */\n  SerializeP2PKH = 0x00,\n  /** MultiSigHashMode - hash160(multisig-redeem-script), same as bitcoin's multisig p2sh */\n  SerializeP2SH = 0x01,\n  /** SingleSigHashMode - hash160(segwit-program-00(p2pkh)), same as bitcoin's p2sh-p2wpkh */\n  SerializeP2WPKH = 0x02,\n  /** MultiSigHashMode - hash160(segwit-program-00(public-keys)), same as bitcoin's p2sh-p2wsh */\n  SerializeP2WSH = 0x03,\n}\n\ntype SingleSigHashMode = AddressHashMode.SerializeP2PKH | AddressHashMode.SerializeP2WPKH;\ntype MultiSigHashMode = AddressHashMode.SerializeP2SH | AddressHashMode.SerializeP2WSH;\n\nenum AddressVersion {\n  MainnetSingleSig = 22,\n  MainnetMultiSig = 20,\n  TestnetSingleSig = 26,\n  TestnetMultiSig = 21,\n}\n\nenum PubKeyEncoding {\n  Compressed = 0x00,\n  Uncompressed = 0x01,\n}\n\nenum FungibleConditionCode {\n  Equal = 0x01,\n  Greater = 0x02,\n  GreaterEqual = 0x03,\n  Less = 0x04,\n  LessEqual = 0x05,\n}\n\nenum NonFungibleConditionCode {\n  DoesNotOwn = 0x10,\n  Owns = 0x11,\n}\n\nenum PostConditionPrincipalID {\n  Origin = 0x01,\n  Standard = 0x02,\n  Contract = 0x03,\n}\n\nenum AssetType {\n  STX = 0x00,\n  Fungible = 0x01,\n  NonFungible = 0x02,\n}\n\nenum TxRejectedReason {\n  Serialization = 'Serialization',\n  Deserialization = 'Deserialization',\n  SignatureValidation = 'SignatureValidation',\n  FeeTooLow = 'FeeTooLow',\n  BadNonce = 'BadNonce',\n  NotEnoughFunds = 'NotEnoughFunds',\n  NoSuchContract = 'NoSuchContract',\n  NoSuchPublicFunction = 'NoSuchPublicFunction',\n  BadFunctionArgument = 'BadFunctionArgument',\n  ContractAlreadyExists = 'ContractAlreadyExists',\n  PoisonMicroblocksDoNotConflict = 'PoisonMicroblocksDoNotConflict',\n  PoisonMicroblockHasUnknownPubKeyHash = 'PoisonMicroblockHasUnknownPubKeyHash',\n  PoisonMicroblockIsInvalid = 'PoisonMicroblockIsInvalid',\n  BadAddressVersionByte = 'BadAddressVersionByte',\n  NoCoinbaseViaMempool = 'NoCoinbaseViaMempool',\n  ServerFailureNoSuchChainTip = 'ServerFailureNoSuchChainTip',\n  ServerFailureDatabase = 'ServerFailureDatabase',\n  ServerFailureOther = 'ServerFailureOther',\n}\n\nexport {\n  MAX_STRING_LENGTH_BYTES,\n  CLARITY_INT_SIZE,\n  COINBASE_BUFFER_LENGTH_BYTES,\n  DEFAULT_CHAIN_ID,\n  DEFAULT_TRANSACTION_VERSION,\n  RECOVERABLE_ECDSA_SIG_LENGTH_BYTES,\n  COMPRESSED_PUBKEY_LENGTH_BYTES,\n  UNCOMPRESSED_PUBKEY_LENGTH_BYTES,\n  MEMO_MAX_LENGTH_BYTES,\n  DEFAULT_CORE_NODE_API_URL,\n  ChainID,\n  StacksMessageType,\n  PayloadType,\n  AnchorMode,\n  TransactionVersion,\n  PostConditionMode,\n  PostConditionType,\n  PostConditionPrincipalID,\n  AuthType,\n  AddressHashMode,\n  SingleSigHashMode,\n  MultiSigHashMode,\n  AddressVersion,\n  PubKeyEncoding,\n  FungibleConditionCode,\n  NonFungibleConditionCode,\n  AssetType,\n  TxRejectedReason,\n};\n","import { sha256, sha512 } from 'sha.js';\nimport { ClarityValue, serializeCV } from './clarity';\nimport RIPEMD160 from 'ripemd160-min';\nimport randombytes from 'randombytes';\nimport { deserializeCV } from './clarity';\nimport fetch from 'cross-fetch';\nimport { c32addressDecode } from 'c32check';\nimport lodashCloneDeep from 'lodash/cloneDeep';\n\nexport { randombytes as randomBytes };\n\nexport class BufferArray {\n  _value: Buffer[] = [];\n  get value() {\n    return this._value;\n  }\n  appendHexString(hexString: string) {\n    this.value.push(Buffer.from(hexString, 'hex'));\n  }\n\n  push(buffer: Buffer) {\n    return this._value.push(buffer);\n  }\n  appendByte(octet: number) {\n    if (!Number.isInteger(octet) || octet < 0 || octet > 255) {\n      throw new Error(`Value ${octet} is not a valid byte`);\n    }\n    this.value.push(Buffer.from([octet]));\n  }\n\n  concatBuffer(): Buffer {\n    return Buffer.concat(this.value);\n  }\n}\n\nexport const leftPadHex = (hexString: string): string =>\n  hexString.length % 2 == 0 ? hexString : `0${hexString}`;\n\nexport const leftPadHexToLength = (hexString: string, length: number): string =>\n  hexString.padStart(length, '0');\n\nexport const rightPadHexToLength = (hexString: string, length: number): string =>\n  hexString.padEnd(length, '0');\n\nexport const intToHexString = (integer: number, lengthBytes = 8): string =>\n  integer.toString(16).padStart(lengthBytes * 2, '0');\n\nexport const hexStringToInt = (hexString: string): number => parseInt(hexString, 16);\n\nexport const exceedsMaxLengthBytes = (string: string, maxLengthBytes: number): boolean =>\n  string ? Buffer.from(string).length > maxLengthBytes : false;\n\nexport function cloneDeep<T>(obj: T): T {\n  return lodashCloneDeep(obj);\n}\n\nexport function omit<T, K extends keyof any>(obj: T, prop: K): Omit<T, K> {\n  const clone = cloneDeep(obj);\n  // @ts-expect-error\n  delete clone[prop];\n  return clone;\n}\n\nexport class sha512_256 extends sha512 {\n  constructor() {\n    super();\n    // set the \"SHA-512/256\" initialization vector\n    // see https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\n    Object.assign(this, {\n      _ah: 0x22312194,\n      _al: 0xfc2bf72c,\n      _bh: 0x9f555fa3,\n      _bl: 0xc84c64c2,\n      _ch: 0x2393b86b,\n      _cl: 0x6f53b151,\n      _dh: 0x96387719,\n      _dl: 0x5940eabd,\n      _eh: 0x96283ee2,\n      _el: 0xa88effe3,\n      _fh: 0xbe5e1e25,\n      _fl: 0x53863992,\n      _gh: 0x2b0199fc,\n      _gl: 0x2c85b8aa,\n      _hh: 0x0eb72ddc,\n      _hl: 0x81c52ca2,\n    });\n  }\n  digest(): Buffer;\n  digest(encoding: import('crypto').HexBase64Latin1Encoding): string;\n  digest(encoding?: import('crypto').HexBase64Latin1Encoding): string | Buffer {\n    // \"SHA-512/256\" truncates the digest to 32 bytes\n    const buff = super.digest().slice(0, 32);\n    return encoding ? buff.toString(encoding) : buff;\n  }\n}\n\nexport const txidFromData = (data: Buffer): string => new sha512_256().update(data).digest('hex');\n\nexport const hash160 = (input: Buffer): Buffer => {\n  const sha256Result = new sha256().update(input).digest();\n  return Buffer.from(new RIPEMD160().update(sha256Result).digest());\n};\n\n// Internally, the Stacks blockchain encodes address the same as Bitcoin\n// single-sig address (p2pkh)\nexport const hashP2PKH = (input: Buffer): string => {\n  return hash160(input).toString('hex');\n};\n\n// Internally, the Stacks blockchain encodes address the same as Bitcoin\n// multi-sig address (p2sh)\nexport const hashP2SH = (numSigs: number, pubKeys: Buffer[]): string => {\n  if (numSigs > 15 || pubKeys.length > 15) {\n    throw Error('P2SH multisig address can only contain up to 15 public keys');\n  }\n\n  // construct P2SH script\n  const bufferArray = new BufferArray();\n  // OP_n\n  bufferArray.appendByte(80 + numSigs);\n  // public keys prepended by their length\n  pubKeys.forEach(pubKey => {\n    bufferArray.appendByte(pubKey.length);\n    bufferArray.push(pubKey);\n  });\n  // OP_m\n  bufferArray.appendByte(80 + pubKeys.length);\n  // OP_CHECKMULTISIG\n  bufferArray.appendByte(174);\n\n  const redeemScript = bufferArray.concatBuffer();\n  const redeemScriptHash = hash160(redeemScript);\n  return redeemScriptHash.toString('hex');\n};\n\nexport function isClarityName(name: string) {\n  const regex = /^[a-zA-Z]([a-zA-Z0-9]|[-_!?+<>=/*])*$|^[-+=/*]$|^[<>]=?$/;\n  return regex.test(name) && name.length < 128;\n}\n\n/** @ignore */\nexport async function fetchPrivate(input: RequestInfo, init?: RequestInit): Promise<Response> {\n  const defaultFetchOpts: RequestInit = {\n    referrer: 'no-referrer',\n    referrerPolicy: 'no-referrer',\n  };\n  const fetchOpts = Object.assign(defaultFetchOpts, init);\n  const fetchResult = await fetch(input, fetchOpts);\n  return fetchResult;\n}\n/**\n * Converts a clarity value to a hex encoded string with `0x` prefix\n * @param {ClarityValue} cv  - the clarity value to convert\n */\nexport function cvToHex(cv: ClarityValue) {\n  const serialized = serializeCV(cv);\n  return `0x${serialized.toString('hex')}`;\n}\n\n/**\n * Converts a hex encoded string to a clarity value\n * @param {string} hex - the hex encoded string with or without `0x` prefix\n */\nexport function hexToCV(hex: string) {\n  const hexWithoutPrefix = hex.startsWith('0x') ? hex.slice(2) : hex;\n  const bufferCV = Buffer.from(hexWithoutPrefix, 'hex');\n  return deserializeCV(bufferCV);\n}\n/**\n * Read only function response object\n *\n * @param {Boolean} okay - the status of the response\n * @param {string} result - serialized hex clarity value\n */\n\nexport interface ReadOnlyFunctionSuccessResponse {\n  okay: true;\n  result: string;\n}\n\nexport interface ReadOnlyFunctionErrorResponse {\n  okay: false;\n  cause: string;\n}\n\nexport type ReadOnlyFunctionResponse =\n  | ReadOnlyFunctionSuccessResponse\n  | ReadOnlyFunctionErrorResponse;\n\n/**\n * Converts the response of a read-only function call into its Clarity Value\n * @param param\n */\nexport const parseReadOnlyResponse = (response: ReadOnlyFunctionResponse): ClarityValue => {\n  if (response.okay) {\n    return hexToCV(response.result);\n  } else {\n    throw new Error(response.cause);\n  }\n};\n\nexport const validateStacksAddress = (stacksAddress: string): boolean => {\n  try {\n    c32addressDecode(stacksAddress);\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\n","import {\n  MAX_STRING_LENGTH_BYTES,\n  MEMO_MAX_LENGTH_BYTES,\n  AddressHashMode,\n  AddressVersion,\n  TransactionVersion,\n  StacksMessageType,\n  PostConditionPrincipalID,\n} from './constants';\n\nimport { StacksPublicKey, serializePublicKey, deserializePublicKey, isCompressed } from './keys';\n\nimport {\n  BufferArray,\n  intToHexString,\n  hexStringToInt,\n  exceedsMaxLengthBytes,\n  hashP2PKH,\n  rightPadHexToLength,\n  hashP2SH,\n} from './utils';\n\nimport { c32addressDecode, c32address } from 'c32check';\nimport { BufferReader } from './bufferReader';\nimport { PostCondition, serializePostCondition, deserializePostCondition } from './postcondition';\nimport { Payload, deserializePayload, serializePayload } from './payload';\nimport { DeserializationError } from './errors';\nimport {\n  deserializeTransactionAuthField,\n  deserializeMessageSignature,\n  MessageSignature,\n  serializeMessageSignature,\n  serializeTransactionAuthField,\n  TransactionAuthField,\n} from './authorization';\n\nexport type StacksMessage =\n  | Address\n  | PostConditionPrincipal\n  | LengthPrefixedString\n  | LengthPrefixedList\n  | Payload\n  | MemoString\n  | AssetInfo\n  | PostCondition\n  | StacksPublicKey\n  | TransactionAuthField\n  | MessageSignature;\n\nexport function serializeStacksMessage(message: StacksMessage): Buffer {\n  switch (message.type) {\n    case StacksMessageType.Address:\n      return serializeAddress(message);\n    case StacksMessageType.Principal:\n      return serializePrincipal(message);\n    case StacksMessageType.LengthPrefixedString:\n      return serializeLPString(message);\n    case StacksMessageType.MemoString:\n      return serializeMemoString(message);\n    case StacksMessageType.AssetInfo:\n      return serializeAssetInfo(message);\n    case StacksMessageType.PostCondition:\n      return serializePostCondition(message);\n    case StacksMessageType.PublicKey:\n      return serializePublicKey(message);\n    case StacksMessageType.LengthPrefixedList:\n      return serializeLPList(message);\n    case StacksMessageType.Payload:\n      return serializePayload(message);\n    case StacksMessageType.TransactionAuthField:\n      return serializeTransactionAuthField(message);\n    case StacksMessageType.MessageSignature:\n      return serializeMessageSignature(message);\n  }\n}\n\nexport function deserializeStacksMessage(\n  bufferReader: BufferReader,\n  type: StacksMessageType,\n  listType?: StacksMessageType\n): StacksMessage {\n  switch (type) {\n    case StacksMessageType.Address:\n      return deserializeAddress(bufferReader);\n    case StacksMessageType.Principal:\n      return deserializePrincipal(bufferReader);\n    case StacksMessageType.LengthPrefixedString:\n      return deserializeLPString(bufferReader);\n    case StacksMessageType.MemoString:\n      return deserializeMemoString(bufferReader);\n    case StacksMessageType.AssetInfo:\n      return deserializeAssetInfo(bufferReader);\n    case StacksMessageType.PostCondition:\n      return deserializePostCondition(bufferReader);\n    case StacksMessageType.PublicKey:\n      return deserializePublicKey(bufferReader);\n    case StacksMessageType.Payload:\n      return deserializePayload(bufferReader);\n    case StacksMessageType.LengthPrefixedList:\n      if (!listType) {\n        throw new DeserializationError('No List Type specified');\n      }\n      return deserializeLPList(bufferReader, listType);\n    case StacksMessageType.MessageSignature:\n      return deserializeMessageSignature(bufferReader);\n    default:\n      throw new Error('Could not recognize StacksMessageType');\n  }\n}\n\nexport interface Address {\n  readonly type: StacksMessageType.Address;\n  readonly version: AddressVersion;\n  readonly hash160: string;\n}\n\nexport function createAddress(c32AddressString: string): Address {\n  const addressData = c32addressDecode(c32AddressString);\n  return {\n    type: StacksMessageType.Address,\n    version: addressData[0],\n    hash160: addressData[1],\n  };\n}\n\nexport function createEmptyAddress(): Address {\n  return {\n    type: StacksMessageType.Address,\n    version: AddressVersion.MainnetSingleSig,\n    hash160: '0'.repeat(40),\n  };\n}\n\nexport function addressFromVersionHash(version: AddressVersion, hash: string): Address {\n  return { type: StacksMessageType.Address, version, hash160: hash };\n}\n\n/**\n * Translates the tx auth hash mode to the corresponding address version.\n * @see https://github.com/blockstack/stacks-blockchain/blob/master/sip/sip-005-blocks-and-transactions.md#transaction-authorization\n */\nexport function addressHashModeToVersion(\n  hashMode: AddressHashMode,\n  txVersion: TransactionVersion\n): AddressVersion {\n  switch (hashMode) {\n    case AddressHashMode.SerializeP2PKH:\n      switch (txVersion) {\n        case TransactionVersion.Mainnet:\n          return AddressVersion.MainnetSingleSig;\n        case TransactionVersion.Testnet:\n          return AddressVersion.TestnetSingleSig;\n        default:\n          throw new Error(\n            `Unexpected txVersion ${JSON.stringify(txVersion)} for hashMode ${hashMode}`\n          );\n      }\n    case AddressHashMode.SerializeP2SH:\n    case AddressHashMode.SerializeP2WPKH:\n    case AddressHashMode.SerializeP2WSH:\n      switch (txVersion) {\n        case TransactionVersion.Mainnet:\n          return AddressVersion.MainnetMultiSig;\n        case TransactionVersion.Testnet:\n          return AddressVersion.TestnetMultiSig;\n        default:\n          throw new Error(\n            `Unexpected txVersion ${JSON.stringify(txVersion)} for hashMode ${hashMode}`\n          );\n      }\n    default:\n      throw new Error(`Unexpected hashMode ${JSON.stringify(hashMode)}`);\n  }\n}\n\nexport function addressFromHashMode(\n  hashMode: AddressHashMode,\n  txVersion: TransactionVersion,\n  data: string\n): Address {\n  const version = addressHashModeToVersion(hashMode, txVersion);\n  return addressFromVersionHash(version, data);\n}\n\nexport function addressFromPublicKeys(\n  version: AddressVersion,\n  hashMode: AddressHashMode,\n  numSigs: number,\n  publicKeys: StacksPublicKey[]\n): Address {\n  if (publicKeys.length === 0) {\n    throw Error('Invalid number of public keys');\n  }\n\n  if (hashMode === AddressHashMode.SerializeP2PKH || hashMode === AddressHashMode.SerializeP2WPKH) {\n    if (publicKeys.length !== 1 || numSigs !== 1) {\n      throw Error('Invalid number of public keys or signatures');\n    }\n  }\n\n  if (hashMode === AddressHashMode.SerializeP2WPKH || hashMode === AddressHashMode.SerializeP2WSH) {\n    for (let i = 0; i < publicKeys.length; i++) {\n      if (!isCompressed(publicKeys[i])) {\n        throw Error('Public keys must be compressed for segwit');\n      }\n    }\n  }\n\n  switch (hashMode) {\n    case AddressHashMode.SerializeP2PKH:\n      return addressFromVersionHash(version, hashP2PKH(publicKeys[0].data));\n    case AddressHashMode.SerializeP2SH:\n      return addressFromVersionHash(version, hashP2SH(numSigs, publicKeys.map(serializePublicKey)));\n    default:\n      throw Error(\n        `Not yet implemented: address construction using public keys for hash mode: ${hashMode}`\n      );\n  }\n}\n\nexport function addressToString(address: Address): string {\n  return c32address(address.version, address.hash160).toString();\n}\n\nexport function serializeAddress(address: Address): Buffer {\n  const bufferArray: BufferArray = new BufferArray();\n  bufferArray.appendHexString(intToHexString(address.version, 1));\n  bufferArray.appendHexString(address.hash160);\n\n  return bufferArray.concatBuffer();\n}\n\nexport function deserializeAddress(bufferReader: BufferReader): Address {\n  const version = hexStringToInt(bufferReader.readBuffer(1).toString('hex'));\n  const data = bufferReader.readBuffer(20).toString('hex');\n\n  return { type: StacksMessageType.Address, version, hash160: data };\n}\n\nexport type PostConditionPrincipal = StandardPrincipal | ContractPrincipal;\n\nexport interface StandardPrincipal {\n  readonly type: StacksMessageType.Principal;\n  readonly prefix: PostConditionPrincipalID.Standard;\n  readonly address: Address;\n}\n\nexport interface ContractPrincipal {\n  readonly type: StacksMessageType.Principal;\n  readonly prefix: PostConditionPrincipalID.Contract;\n  readonly address: Address;\n  readonly contractName: LengthPrefixedString;\n}\n\n/**\n * Parses a principal string for either a standard principal or contract principal.\n * @param principalString - String in the format `{address}.{contractName}`\n * @example \"SP13N5TE1FBBGRZD1FCM49QDGN32WAXM2E5F8WT2G.example-contract\"\n * @example \"SP13N5TE1FBBGRZD1FCM49QDGN32WAXM2E5F8WT2G\"\n */\nexport function parsePrincipalString(\n  principalString: string\n): StandardPrincipal | ContractPrincipal {\n  if (principalString.includes('.')) {\n    const [address, contractName] = principalString.split('.');\n    return createContractPrincipal(address, contractName);\n  } else {\n    return createStandardPrincipal(principalString);\n  }\n}\n\nexport function createStandardPrincipal(addressString: string): StandardPrincipal {\n  const addr = createAddress(addressString);\n  return {\n    type: StacksMessageType.Principal,\n    prefix: PostConditionPrincipalID.Standard,\n    address: addr,\n  };\n}\n\nexport function createContractPrincipal(\n  addressString: string,\n  contractName: string\n): ContractPrincipal {\n  const addr = createAddress(addressString);\n  const name = createLPString(contractName);\n  return {\n    type: StacksMessageType.Principal,\n    prefix: PostConditionPrincipalID.Contract,\n    address: addr,\n    contractName: name,\n  };\n}\n\nexport function serializePrincipal(principal: PostConditionPrincipal): Buffer {\n  const bufferArray: BufferArray = new BufferArray();\n  bufferArray.push(Buffer.from([principal.prefix]));\n  bufferArray.push(serializeAddress(principal.address));\n  if (principal.prefix === PostConditionPrincipalID.Contract) {\n    bufferArray.push(serializeLPString(principal.contractName));\n  }\n  return bufferArray.concatBuffer();\n}\n\nexport function deserializePrincipal(bufferReader: BufferReader): PostConditionPrincipal {\n  const prefix = bufferReader.readUInt8Enum(PostConditionPrincipalID, _ => {\n    throw new DeserializationError('Unexpected Principal payload type: ${n}');\n  });\n  const address = deserializeAddress(bufferReader);\n  if (prefix === PostConditionPrincipalID.Standard) {\n    return { type: StacksMessageType.Principal, prefix, address } as StandardPrincipal;\n  }\n  const contractName = deserializeLPString(bufferReader);\n  return {\n    type: StacksMessageType.Principal,\n    prefix,\n    address,\n    contractName,\n  } as ContractPrincipal;\n}\n\nexport interface LengthPrefixedString {\n  readonly type: StacksMessageType.LengthPrefixedString;\n  readonly content: string;\n  readonly lengthPrefixBytes: number;\n  readonly maxLengthBytes: number;\n}\n\nexport function createLPString(content: string): LengthPrefixedString;\nexport function createLPString(content: string, lengthPrefixBytes: number): LengthPrefixedString;\nexport function createLPString(\n  content: string,\n  lengthPrefixBytes: number,\n  maxLengthBytes: number\n): LengthPrefixedString;\nexport function createLPString(\n  content: string,\n  lengthPrefixBytes?: number,\n  maxLengthBytes?: number\n): LengthPrefixedString {\n  const prefixLength = lengthPrefixBytes || 1;\n  const maxLength = maxLengthBytes || MAX_STRING_LENGTH_BYTES;\n  if (exceedsMaxLengthBytes(content, maxLength)) {\n    throw new Error(`String length exceeds maximum bytes ${maxLength.toString()}`);\n  }\n  return {\n    type: StacksMessageType.LengthPrefixedString,\n    content,\n    lengthPrefixBytes: prefixLength,\n    maxLengthBytes: maxLength,\n  };\n}\n\nexport function serializeLPString(lps: LengthPrefixedString) {\n  const bufferArray: BufferArray = new BufferArray();\n  const contentBuffer = Buffer.from(lps.content);\n  const length = contentBuffer.byteLength;\n  bufferArray.appendHexString(intToHexString(length, lps.lengthPrefixBytes));\n  bufferArray.push(contentBuffer);\n  return bufferArray.concatBuffer();\n}\n\nexport function deserializeLPString(\n  bufferReader: BufferReader,\n  prefixBytes?: number,\n  maxLength?: number\n): LengthPrefixedString {\n  prefixBytes = prefixBytes ? prefixBytes : 1;\n  const length = hexStringToInt(bufferReader.readBuffer(prefixBytes).toString('hex'));\n  const content = bufferReader.readBuffer(length).toString();\n  return createLPString(content, prefixBytes, maxLength ?? 128);\n}\n\nexport function codeBodyString(content: string): LengthPrefixedString {\n  return createLPString(content, 4, 100000);\n}\n\nexport interface MemoString {\n  readonly type: StacksMessageType.MemoString;\n  readonly content: string;\n}\n\nexport function createMemoString(content: string): MemoString {\n  if (content && exceedsMaxLengthBytes(content, MEMO_MAX_LENGTH_BYTES)) {\n    throw new Error(`Memo exceeds maximum length of ${MEMO_MAX_LENGTH_BYTES.toString()} bytes`);\n  }\n  return { type: StacksMessageType.MemoString, content };\n}\n\nexport function serializeMemoString(memoString: MemoString): Buffer {\n  const bufferArray: BufferArray = new BufferArray();\n  const contentBuffer = Buffer.from(memoString.content);\n  const paddedContent = rightPadHexToLength(\n    contentBuffer.toString('hex'),\n    MEMO_MAX_LENGTH_BYTES * 2\n  );\n  bufferArray.push(Buffer.from(paddedContent, 'hex'));\n  return bufferArray.concatBuffer();\n}\n\nexport function deserializeMemoString(bufferReader: BufferReader): MemoString {\n  const content = bufferReader.readBuffer(MEMO_MAX_LENGTH_BYTES).toString();\n  return { type: StacksMessageType.MemoString, content };\n}\n\nexport interface AssetInfo {\n  readonly type: StacksMessageType.AssetInfo;\n  readonly address: Address;\n  readonly contractName: LengthPrefixedString;\n  readonly assetName: LengthPrefixedString;\n}\n\n/**\n * Parse a fully qualified string that identifies the token type.\n * @param id - String in the format `{address}.{contractName}::{assetName}`\n * @example \"SP13N5TE1FBBGRZD1FCM49QDGN32WAXM2E5F8WT2G.example-contract::example-token\"\n */\nexport function parseAssetInfoString(id: string): AssetInfo {\n  const [assetAddress, assetContractName, assetTokenName] = id.split(/\\.|::/);\n  const assetInfo = createAssetInfo(assetAddress, assetContractName, assetTokenName);\n  return assetInfo;\n}\n\nexport function createAssetInfo(\n  addressString: string,\n  contractName: string,\n  assetName: string\n): AssetInfo {\n  return {\n    type: StacksMessageType.AssetInfo,\n    address: createAddress(addressString),\n    contractName: createLPString(contractName),\n    assetName: createLPString(assetName),\n  };\n}\n\nexport function serializeAssetInfo(info: AssetInfo): Buffer {\n  const bufferArray: BufferArray = new BufferArray();\n  bufferArray.push(serializeAddress(info.address));\n  bufferArray.push(serializeLPString(info.contractName));\n  bufferArray.push(serializeLPString(info.assetName));\n  return bufferArray.concatBuffer();\n}\n\nexport function deserializeAssetInfo(bufferReader: BufferReader): AssetInfo {\n  return {\n    type: StacksMessageType.AssetInfo,\n    address: deserializeAddress(bufferReader),\n    contractName: deserializeLPString(bufferReader),\n    assetName: deserializeLPString(bufferReader),\n  };\n}\n\nexport interface LengthPrefixedList {\n  readonly type: StacksMessageType.LengthPrefixedList;\n  readonly lengthPrefixBytes: number;\n  readonly values: StacksMessage[];\n}\n\nexport function createLPList<T extends StacksMessage>(\n  values: T[],\n  lengthPrefixBytes?: number\n): LengthPrefixedList {\n  return {\n    type: StacksMessageType.LengthPrefixedList,\n    lengthPrefixBytes: lengthPrefixBytes || 4,\n    values,\n  };\n}\n\nexport function serializeLPList(lpList: LengthPrefixedList): Buffer {\n  const list = lpList.values;\n  const bufferArray: BufferArray = new BufferArray();\n  bufferArray.appendHexString(intToHexString(list.length, lpList.lengthPrefixBytes));\n  for (let index = 0; index < list.length; index++) {\n    bufferArray.push(serializeStacksMessage(list[index]));\n  }\n  return bufferArray.concatBuffer();\n}\n\nexport function deserializeLPList(\n  bufferReader: BufferReader,\n  type: StacksMessageType,\n  lengthPrefixBytes?: number\n): LengthPrefixedList {\n  const length = hexStringToInt(bufferReader.readBuffer(lengthPrefixBytes || 4).toString('hex'));\n  const l: StacksMessage[] = [];\n  for (let index = 0; index < length; index++) {\n    switch (type) {\n      case StacksMessageType.Address:\n        l.push(deserializeAddress(bufferReader));\n        break;\n      case StacksMessageType.LengthPrefixedString:\n        l.push(deserializeLPString(bufferReader));\n        break;\n      case StacksMessageType.MemoString:\n        l.push(deserializeMemoString(bufferReader));\n        break;\n      case StacksMessageType.AssetInfo:\n        l.push(deserializeAssetInfo(bufferReader));\n        break;\n      case StacksMessageType.PostCondition:\n        l.push(deserializePostCondition(bufferReader));\n        break;\n      case StacksMessageType.PublicKey:\n        l.push(deserializePublicKey(bufferReader));\n        break;\n      case StacksMessageType.TransactionAuthField:\n        l.push(deserializeTransactionAuthField(bufferReader));\n        break;\n    }\n  }\n  return createLPList(l, lengthPrefixBytes);\n}\n","export class StacksTransactionError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.message = message;\n    this.name = this.constructor.name;\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, this.constructor);\n    }\n  }\n}\n\nexport class SerializationError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.message = message;\n    this.name = this.constructor.name;\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, this.constructor);\n    }\n  }\n}\n\nexport class DeserializationError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.message = message;\n    this.name = this.constructor.name;\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, this.constructor);\n    }\n  }\n}\n\nexport class NotImplementedError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.message = message;\n    this.name = this.constructor.name;\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, this.constructor);\n    }\n  }\n}\n\nexport class SigningError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.message = message;\n    this.name = this.constructor.name;\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, this.constructor);\n    }\n  }\n}\nexport class VerificationError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.message = message;\n    this.name = this.constructor.name;\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, this.constructor);\n    }\n  }\n}\n","import {\n  AuthType,\n  AddressHashMode,\n  PubKeyEncoding,\n  RECOVERABLE_ECDSA_SIG_LENGTH_BYTES,\n  SingleSigHashMode,\n  MultiSigHashMode,\n  StacksMessageType,\n} from './constants';\n\nimport { BufferArray, txidFromData, leftPadHex, cloneDeep } from './utils';\n\nimport {\n  addressFromPublicKeys,\n  deserializeLPList,\n  createLPList,\n  serializeLPList,\n  createEmptyAddress,\n} from './types';\n\nimport {\n  StacksPublicKey,\n  StacksPrivateKey,\n  createStacksPublicKey,\n  isCompressed,\n  signWithKey,\n  getPublicKey,\n  serializePublicKey,\n  deserializePublicKey,\n  publicKeyFromSignature,\n} from './keys';\n\nimport BigNum from 'bn.js';\nimport { BufferReader } from './bufferReader';\nimport { SerializationError, DeserializationError, SigningError } from './errors';\n\nabstract class Deserializable {\n  abstract serialize(): Buffer;\n  abstract deserialize(bufferReader: BufferReader): void;\n  static deserialize<T extends Deserializable>(this: new () => T, bufferReader: BufferReader): T {\n    const message = new this();\n    message.deserialize(bufferReader);\n    return message;\n  }\n}\n\nexport interface MessageSignature {\n  readonly type: StacksMessageType.MessageSignature;\n  data: string;\n}\n\nexport function createMessageSignature(signature: string): MessageSignature {\n  const length = Buffer.from(signature, 'hex').byteLength;\n  if (length != RECOVERABLE_ECDSA_SIG_LENGTH_BYTES) {\n    throw Error('Invalid signature');\n  }\n\n  return {\n    type: StacksMessageType.MessageSignature,\n    data: signature,\n  };\n}\n\nexport function emptyMessageSignature(): MessageSignature {\n  return {\n    type: StacksMessageType.MessageSignature,\n    data: Buffer.alloc(RECOVERABLE_ECDSA_SIG_LENGTH_BYTES, 0x00).toString('hex'),\n  };\n}\n\nexport function serializeMessageSignature(messageSignature: MessageSignature): Buffer {\n  const bufferArray: BufferArray = new BufferArray();\n  bufferArray.appendHexString(messageSignature.data);\n  return bufferArray.concatBuffer();\n}\n\nexport function deserializeMessageSignature(bufferReader: BufferReader): MessageSignature {\n  return createMessageSignature(\n    bufferReader.readBuffer(RECOVERABLE_ECDSA_SIG_LENGTH_BYTES).toString('hex')\n  );\n}\n\nenum AuthFieldType {\n  PublicKey = 0x00,\n  Signature = 0x02,\n}\n\nexport type TransactionAuthFieldContents = StacksPublicKey | MessageSignature;\n\nexport interface TransactionAuthField {\n  type: StacksMessageType.TransactionAuthField;\n  contents: TransactionAuthFieldContents;\n}\n\nexport function createTransactionAuthField(\n  contents: TransactionAuthFieldContents\n): TransactionAuthField {\n  return {\n    type: StacksMessageType.TransactionAuthField,\n    contents,\n  };\n}\n\nexport function serializeTransactionAuthField(field: TransactionAuthField): Buffer {\n  const bufferArray: BufferArray = new BufferArray();\n\n  switch (field.contents.type) {\n    case StacksMessageType.PublicKey:\n      bufferArray.appendByte(AuthFieldType.PublicKey);\n      bufferArray.push(serializePublicKey(field.contents));\n      break;\n    case StacksMessageType.MessageSignature:\n      bufferArray.appendByte(AuthFieldType.Signature);\n      bufferArray.push(serializeMessageSignature(field.contents));\n      break;\n  }\n\n  return bufferArray.concatBuffer();\n}\n\nexport function deserializeTransactionAuthField(bufferReader: BufferReader): TransactionAuthField {\n  const authFieldType = bufferReader.readUInt8Enum(AuthFieldType, n => {\n    throw new DeserializationError(`Could not read ${n} as AuthFieldType`);\n  });\n\n  switch (authFieldType) {\n    case AuthFieldType.PublicKey:\n      return createTransactionAuthField(deserializePublicKey(bufferReader));\n    case AuthFieldType.Signature:\n      return createTransactionAuthField(deserializeMessageSignature(bufferReader));\n    default:\n      throw new Error(`Unknown auth field type: ${JSON.stringify(authFieldType)}`);\n  }\n}\n\nexport interface SingleSigSpendingCondition {\n  hashMode: SingleSigHashMode;\n  signer: string;\n  nonce: BigNum;\n  fee: BigNum;\n  keyEncoding: PubKeyEncoding;\n  signature: MessageSignature;\n}\n\nexport interface MultiSigSpendingCondition {\n  hashMode: MultiSigHashMode;\n  signer: string;\n  nonce: BigNum;\n  fee: BigNum;\n  fields: TransactionAuthField[];\n  signaturesRequired: number;\n}\n\nexport type SpendingCondition = SingleSigSpendingCondition | MultiSigSpendingCondition;\n\nexport function createSingleSigSpendingCondition(\n  hashMode: SingleSigHashMode,\n  pubKey: string,\n  nonce: BigNum,\n  fee: BigNum\n): SingleSigSpendingCondition {\n  // address version arg doesn't matter for signer hash generation\n  const signer = addressFromPublicKeys(0, hashMode, 1, [createStacksPublicKey(pubKey)]).hash160;\n  const keyEncoding = isCompressed(createStacksPublicKey(pubKey))\n    ? PubKeyEncoding.Compressed\n    : PubKeyEncoding.Uncompressed;\n\n  return {\n    hashMode,\n    signer,\n    nonce,\n    fee,\n    keyEncoding,\n    signature: emptyMessageSignature(),\n  };\n}\n\nexport function createMultiSigSpendingCondition(\n  hashMode: MultiSigHashMode,\n  numSigs: number,\n  pubKeys: string[],\n  nonce: BigNum,\n  fee: BigNum\n): MultiSigSpendingCondition {\n  const stacksPublicKeys = pubKeys.map(createStacksPublicKey);\n\n  // address version arg doesn't matter for signer hash generation\n  const signer = addressFromPublicKeys(0, hashMode, numSigs, stacksPublicKeys).hash160;\n\n  return {\n    hashMode,\n    signer,\n    nonce,\n    fee,\n    fields: [],\n    signaturesRequired: numSigs,\n  };\n}\n\nexport function isSingleSig(condition: SpendingCondition): condition is SingleSigSpendingCondition {\n  return 'signature' in condition;\n}\n\nfunction clearCondition(condition: SpendingCondition): SpendingCondition {\n  const cloned = cloneDeep(condition);\n  cloned.nonce = new BigNum(0);\n  cloned.fee = new BigNum(0);\n\n  if (isSingleSig(cloned)) {\n    cloned.signature = emptyMessageSignature();\n  } else {\n    cloned.fields = [];\n  }\n\n  return cloned;\n}\n\nexport function serializeSingleSigSpendingCondition(condition: SingleSigSpendingCondition): Buffer {\n  const bufferArray: BufferArray = new BufferArray();\n  bufferArray.appendByte(condition.hashMode);\n  bufferArray.appendHexString(condition.signer);\n  bufferArray.push(condition.nonce.toArrayLike(Buffer, 'be', 8));\n  bufferArray.push(condition.fee.toArrayLike(Buffer, 'be', 8));\n  bufferArray.appendByte(condition.keyEncoding);\n  bufferArray.push(serializeMessageSignature(condition.signature));\n  return bufferArray.concatBuffer();\n}\n\nexport function serializeMultiSigSpendingCondition(condition: MultiSigSpendingCondition): Buffer {\n  const bufferArray: BufferArray = new BufferArray();\n  bufferArray.appendByte(condition.hashMode);\n  bufferArray.appendHexString(condition.signer);\n  bufferArray.push(condition.nonce.toArrayLike(Buffer, 'be', 8));\n  bufferArray.push(condition.fee.toArrayLike(Buffer, 'be', 8));\n\n  const fields = createLPList(condition.fields);\n  bufferArray.push(serializeLPList(fields));\n\n  const numSigs = Buffer.alloc(2);\n  numSigs.writeUInt16BE(condition.signaturesRequired, 0);\n  bufferArray.push(numSigs);\n  return bufferArray.concatBuffer();\n}\n\nexport function deserializeSingleSigSpendingCondition(\n  hashMode: SingleSigHashMode,\n  bufferReader: BufferReader\n): SingleSigSpendingCondition {\n  const signer = bufferReader.readBuffer(20).toString('hex');\n  const nonce = new BigNum(bufferReader.readBuffer(8).toString('hex'), 16);\n  const fee = new BigNum(bufferReader.readBuffer(8).toString('hex'), 16);\n\n  const keyEncoding = bufferReader.readUInt8Enum(PubKeyEncoding, n => {\n    throw new DeserializationError(`Could not parse ${n} as PubKeyEncoding`);\n  });\n  const signature = deserializeMessageSignature(bufferReader);\n\n  return {\n    hashMode,\n    signer,\n    nonce,\n    fee,\n    keyEncoding,\n    signature,\n  };\n}\n\nexport function deserializeMultiSigSpendingCondition(\n  hashMode: MultiSigHashMode,\n  bufferReader: BufferReader\n): MultiSigSpendingCondition {\n  const signer = bufferReader.readBuffer(20).toString('hex');\n  const nonce = new BigNum(bufferReader.readBuffer(8).toString('hex'), 16);\n  const fee = new BigNum(bufferReader.readBuffer(8).toString('hex'), 16);\n\n  const fields = deserializeLPList(bufferReader, StacksMessageType.TransactionAuthField)\n    .values as TransactionAuthField[];\n\n  const signaturesRequired = bufferReader.readUInt16BE();\n\n  return {\n    hashMode,\n    signer,\n    nonce,\n    fee,\n    fields,\n    signaturesRequired,\n  };\n}\n\nexport function serializeSpendingCondition(condition: SpendingCondition): Buffer {\n  if (isSingleSig(condition)) {\n    return serializeSingleSigSpendingCondition(condition);\n  } else {\n    return serializeMultiSigSpendingCondition(condition);\n  }\n}\n\nexport function deserializeSpendingCondition(bufferReader: BufferReader): SpendingCondition {\n  const hashMode = bufferReader.readUInt8Enum(AddressHashMode, n => {\n    throw new DeserializationError(`Could not parse ${n} as AddressHashMode`);\n  });\n\n  if (hashMode === AddressHashMode.SerializeP2PKH || hashMode === AddressHashMode.SerializeP2WPKH) {\n    return deserializeSingleSigSpendingCondition(hashMode, bufferReader);\n  } else {\n    return deserializeMultiSigSpendingCondition(hashMode, bufferReader);\n  }\n}\n\nexport function makeSigHashPreSign(\n  curSigHash: string,\n  authType: AuthType,\n  fee: BigNum,\n  nonce: BigNum\n): string {\n  // new hash combines the previous hash and all the new data this signature will add. This\n  // includes:\n  // * the previous hash\n  // * the auth flag\n  // * the tx fee (big-endian 8-byte number)\n  // * nonce (big-endian 8-byte number)\n  const hashLength = 32 + 1 + 8 + 8;\n\n  const sigHash =\n    curSigHash +\n    Buffer.from([authType]).toString('hex') +\n    fee.toArrayLike(Buffer, 'be', 8).toString('hex') +\n    nonce.toArrayLike(Buffer, 'be', 8).toString('hex');\n\n  if (Buffer.from(sigHash, 'hex').byteLength !== hashLength) {\n    throw Error('Invalid signature hash length');\n  }\n\n  return txidFromData(Buffer.from(sigHash, 'hex'));\n}\n\nfunction makeSigHashPostSign(\n  curSigHash: string,\n  pubKeyEncoding: PubKeyEncoding,\n  signature: MessageSignature\n): string {\n  // new hash combines the previous hash and all the new data this signature will add.  This\n  // includes:\n  // * the public key compression flag\n  // * the signature\n  const hashLength = 32 + 1 + RECOVERABLE_ECDSA_SIG_LENGTH_BYTES;\n\n  const sigHash = curSigHash + leftPadHex(pubKeyEncoding.toString(16)) + signature.data;\n\n  if (Buffer.from(sigHash, 'hex').byteLength > hashLength) {\n    throw Error('Invalid signature hash length');\n  }\n\n  return txidFromData(Buffer.from(sigHash, 'hex'));\n}\n\nexport function nextSignature(\n  curSigHash: string,\n  authType: AuthType,\n  fee: BigNum,\n  nonce: BigNum,\n  privateKey: StacksPrivateKey\n): {\n  nextSig: MessageSignature;\n  nextSigHash: string;\n} {\n  const sigHashPreSign = makeSigHashPreSign(curSigHash, authType, fee, nonce);\n\n  const signature = signWithKey(privateKey, sigHashPreSign);\n  const publicKey = getPublicKey(privateKey);\n  const publicKeyEncoding = isCompressed(publicKey)\n    ? PubKeyEncoding.Compressed\n    : PubKeyEncoding.Uncompressed;\n  const nextSigHash = makeSigHashPostSign(sigHashPreSign, publicKeyEncoding, signature);\n\n  return {\n    nextSig: signature,\n    nextSigHash,\n  };\n}\n\nexport function nextVerification(\n  initialSigHash: string,\n  authType: AuthType,\n  fee: BigNum,\n  nonce: BigNum,\n  // @ts-ignore\n  pubKeyEncoding: PubKeyEncoding,\n  signature: MessageSignature\n) {\n  const sigHashPreSign = makeSigHashPreSign(initialSigHash, authType, fee, nonce);\n\n  const publicKey = createStacksPublicKey(publicKeyFromSignature(sigHashPreSign, signature));\n\n  const nextSigHash = makeSigHashPostSign(sigHashPreSign, PubKeyEncoding.Compressed, signature);\n\n  return {\n    pubKey: publicKey,\n    nextSigHash,\n  };\n}\n\nfunction newInitialSigHash(): SpendingCondition {\n  const spendingCondition = createSingleSigSpendingCondition(\n    AddressHashMode.SerializeP2PKH,\n    '',\n    new BigNum(0),\n    new BigNum(0)\n  );\n  spendingCondition.signer = createEmptyAddress().hash160;\n  spendingCondition.keyEncoding = PubKeyEncoding.Compressed;\n  spendingCondition.signature = emptyMessageSignature();\n  return spendingCondition;\n}\n\nfunction verify(condition: SpendingCondition, initialSigHash: string, authType: AuthType): string {\n  if (isSingleSig(condition)) {\n    return verifySingleSig(condition, initialSigHash, authType);\n  } else {\n    // TODO: verify multisig\n    return '';\n  }\n}\n\nfunction verifySingleSig(\n  condition: SingleSigSpendingCondition,\n  initialSigHash: string,\n  authType: AuthType\n): string {\n  const { nextSigHash } = nextVerification(\n    initialSigHash,\n    authType,\n    condition.fee,\n    condition.nonce,\n    condition.keyEncoding,\n    condition.signature\n  );\n\n  // TODO: verify pub key\n\n  return nextSigHash;\n}\n\nexport class Authorization extends Deserializable {\n  authType?: AuthType;\n  spendingCondition?: SpendingCondition;\n  sponsorSpendingCondition?: SpendingCondition;\n\n  constructor(\n    authType?: AuthType,\n    spendingConditions?: SpendingCondition,\n    sponsorSpendingCondition?: SpendingCondition\n  ) {\n    super();\n    this.authType = authType;\n    this.spendingCondition = spendingConditions;\n    this.sponsorSpendingCondition = sponsorSpendingCondition;\n  }\n\n  intoInitialSighashAuth(): Authorization {\n    if (this.spendingCondition) {\n      switch (this.authType) {\n        case AuthType.Standard:\n          return new Authorization(AuthType.Standard, clearCondition(this.spendingCondition));\n        case AuthType.Sponsored:\n          return new Authorization(\n            AuthType.Sponsored,\n            clearCondition(this.spendingCondition),\n            newInitialSigHash()\n          );\n        default:\n          throw new SigningError('Unexpected authorization type for signing');\n      }\n    }\n\n    throw new Error('Authorization missing SpendingCondition');\n  }\n\n  setFee(amount: BigNum) {\n    switch (this.authType) {\n      case AuthType.Standard:\n        this.spendingCondition!.fee = amount;\n        break;\n      case AuthType.Sponsored:\n        this.sponsorSpendingCondition!.fee = amount;\n        break;\n    }\n  }\n\n  getFee() {\n    switch (this.authType) {\n      case AuthType.Standard:\n        return this.spendingCondition!.fee;\n      case AuthType.Sponsored:\n        return this.sponsorSpendingCondition!.fee;\n      default:\n        return 0;\n    }\n  }\n\n  setNonce(nonce: BigNum) {\n    this.spendingCondition!.nonce = nonce;\n  }\n\n  setSponsorNonce(nonce: BigNum) {\n    this.sponsorSpendingCondition!.nonce = nonce;\n  }\n\n  setSponsor(sponsorSpendingCondition: SpendingCondition) {\n    this.sponsorSpendingCondition = sponsorSpendingCondition;\n  }\n\n  verifyOrigin(initialSigHash: string): string {\n    switch (this.authType) {\n      case AuthType.Standard:\n        return verify(this.spendingCondition!, initialSigHash, AuthType.Standard);\n      case AuthType.Sponsored:\n        return verify(this.spendingCondition!, initialSigHash, AuthType.Standard);\n      default:\n        throw new SigningError('Invalid origin auth type');\n    }\n  }\n\n  serialize(): Buffer {\n    const bufferArray: BufferArray = new BufferArray();\n    if (this.authType === undefined) {\n      throw new SerializationError('\"authType\" is undefined');\n    }\n    bufferArray.appendByte(this.authType);\n\n    switch (this.authType) {\n      case AuthType.Standard:\n        if (this.spendingCondition === undefined) {\n          throw new SerializationError('\"spendingCondition\" is undefined');\n        }\n        bufferArray.push(serializeSpendingCondition(this.spendingCondition));\n        break;\n      case AuthType.Sponsored:\n        if (this.spendingCondition === undefined) {\n          throw new SerializationError('\"spendingCondition\" is undefined');\n        }\n        if (this.sponsorSpendingCondition === undefined) {\n          throw new SerializationError('\"spendingCondition\" is undefined');\n        }\n        bufferArray.push(serializeSpendingCondition(this.spendingCondition));\n        bufferArray.push(serializeSpendingCondition(this.sponsorSpendingCondition));\n        break;\n      default:\n        throw new SerializationError(\n          `Unexpected transaction AuthType while serializing: ${JSON.stringify(this.authType)}`\n        );\n    }\n\n    return bufferArray.concatBuffer();\n  }\n\n  deserialize(bufferReader: BufferReader) {\n    this.authType = bufferReader.readUInt8Enum(AuthType, n => {\n      throw new DeserializationError(`Could not parse ${n} as AuthType`);\n    });\n\n    switch (this.authType) {\n      case AuthType.Standard:\n        this.spendingCondition = deserializeSpendingCondition(bufferReader);\n        break;\n      case AuthType.Sponsored:\n        this.spendingCondition = deserializeSpendingCondition(bufferReader);\n        this.sponsorSpendingCondition = deserializeSpendingCondition(bufferReader);\n        break;\n      // throw new DeserializationError('Not yet implemented: deserializing sponsored transactions');\n      default:\n        throw new DeserializationError(\n          `Unexpected transaction AuthType while deserializing: ${JSON.stringify(this.authType)}`\n        );\n    }\n  }\n}\n\nexport class StandardAuthorization extends Authorization {\n  constructor(spendingCondition: SpendingCondition) {\n    super(AuthType.Standard, spendingCondition);\n  }\n}\n\nexport class SponsoredAuthorization extends Authorization {\n  constructor(\n    originSpendingCondition: SpendingCondition,\n    sponsorSpendingCondition?: SpendingCondition\n  ) {\n    let sponsorSC = sponsorSpendingCondition;\n    if (!sponsorSC) {\n      sponsorSC = createSingleSigSpendingCondition(\n        AddressHashMode.SerializeP2PKH,\n        '0'.repeat(66),\n        new BigNum(0),\n        new BigNum(0)\n      );\n    }\n    super(AuthType.Sponsored, originSpendingCondition, sponsorSC);\n  }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.b58ToC32 = exports.c32ToB58 = exports.versions = exports.c32normalize = exports.c32addressDecode = exports.c32address = exports.c32checkDecode = exports.c32checkEncode = exports.c32decode = exports.c32encode = void 0;\nvar encoding_1 = require(\"./encoding\");\nObject.defineProperty(exports, \"c32encode\", { enumerable: true, get: function () { return encoding_1.c32encode; } });\nObject.defineProperty(exports, \"c32decode\", { enumerable: true, get: function () { return encoding_1.c32decode; } });\nObject.defineProperty(exports, \"c32normalize\", { enumerable: true, get: function () { return encoding_1.c32normalize; } });\nvar checksum_1 = require(\"./checksum\");\nObject.defineProperty(exports, \"c32checkEncode\", { enumerable: true, get: function () { return checksum_1.c32checkEncode; } });\nObject.defineProperty(exports, \"c32checkDecode\", { enumerable: true, get: function () { return checksum_1.c32checkDecode; } });\nvar address_1 = require(\"./address\");\nObject.defineProperty(exports, \"c32address\", { enumerable: true, get: function () { return address_1.c32address; } });\nObject.defineProperty(exports, \"c32addressDecode\", { enumerable: true, get: function () { return address_1.c32addressDecode; } });\nObject.defineProperty(exports, \"c32ToB58\", { enumerable: true, get: function () { return address_1.c32ToB58; } });\nObject.defineProperty(exports, \"b58ToC32\", { enumerable: true, get: function () { return address_1.b58ToC32; } });\nObject.defineProperty(exports, \"versions\", { enumerable: true, get: function () { return address_1.versions; } });\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","module.exports = function(data, filename, mime, bom) {\n    var blobData = (typeof bom !== 'undefined') ? [bom, data] : [data]\n    var blob = new Blob(blobData, {type: mime || 'application/octet-stream'});\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    }\n    else {\n        var blobURL = (window.URL && window.URL.createObjectURL) ? window.URL.createObjectURL(blob) : window.webkitURL.createObjectURL(blob);\n        var tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n\n        // Fixes \"webkit blob resource error 1\"\n        setTimeout(function() {\n            document.body.removeChild(tempLink);\n            window.URL.revokeObjectURL(blobURL);\n        }, 200)\n    }\n}\n","import {\n  Address,\n  LengthPrefixedString,\n  createAddress,\n  createLPString,\n  addressToString,\n} from '../../types';\nimport { ClarityType } from '../clarityValue';\n\ntype PrincipalCV = StandardPrincipalCV | ContractPrincipalCV;\n\ninterface StandardPrincipalCV {\n  readonly type: ClarityType.PrincipalStandard;\n  readonly address: Address;\n}\n\ninterface ContractPrincipalCV {\n  readonly type: ClarityType.PrincipalContract;\n  readonly address: Address;\n  readonly contractName: LengthPrefixedString;\n}\n\nfunction principalToString(principal: PrincipalCV): string {\n  if (principal.type === ClarityType.PrincipalStandard) {\n    return addressToString(principal.address);\n  } else if (principal.type === ClarityType.PrincipalContract) {\n    const address = addressToString(principal.address);\n    return `${address}.${principal.contractName.content}`;\n  } else {\n    throw new Error(`Unexpected principal data: ${JSON.stringify(principal)}`);\n  }\n}\n\nfunction principalCV(principal: string): PrincipalCV {\n  if (principal.includes('.')) {\n    const [address, contractName] = principal.split('.');\n    return contractPrincipalCV(address, contractName);\n  } else {\n    return standardPrincipalCV(principal);\n  }\n}\n\nfunction standardPrincipalCV(addressString: string): StandardPrincipalCV {\n  const addr = createAddress(addressString);\n  return { type: ClarityType.PrincipalStandard, address: addr };\n}\n\nfunction standardPrincipalCVFromAddress(address: Address): StandardPrincipalCV {\n  return { type: ClarityType.PrincipalStandard, address };\n}\n\nfunction contractPrincipalCV(addressString: string, contractName: string): ContractPrincipalCV {\n  const addr = createAddress(addressString);\n  const lengthPrefixedContractName = createLPString(contractName);\n  return contractPrincipalCVFromAddress(addr, lengthPrefixedContractName);\n}\n\nfunction contractPrincipalCVFromAddress(\n  address: Address,\n  contractName: LengthPrefixedString\n): ContractPrincipalCV {\n  if (Buffer.byteLength(contractName.content) >= 128) {\n    throw new Error('Contract name must be less than 128 bytes');\n  }\n  return { type: ClarityType.PrincipalContract, address, contractName };\n}\n\nfunction contractPrincipalCVFromStandard(\n  sp: StandardPrincipalCV,\n  contractName: string\n): ContractPrincipalCV {\n  const lengthPrefixedContractName = createLPString(contractName);\n  return {\n    type: ClarityType.PrincipalContract,\n    address: sp.address,\n    contractName: lengthPrefixedContractName,\n  };\n}\n\nexport {\n  PrincipalCV,\n  StandardPrincipalCV,\n  ContractPrincipalCV,\n  principalCV,\n  principalToString,\n  standardPrincipalCV,\n  standardPrincipalCVFromAddress,\n  contractPrincipalCV,\n  contractPrincipalCVFromAddress,\n  contractPrincipalCVFromStandard,\n};\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","import { serializeAddress, serializeLPString, createLPString } from '../types';\nimport {\n  BooleanCV,\n  OptionalCV,\n  BufferCV,\n  IntCV,\n  UIntCV,\n  StandardPrincipalCV,\n  ContractPrincipalCV,\n  ResponseCV,\n  ListCV,\n  TupleCV,\n  ClarityType,\n  ClarityValue,\n} from '.';\nimport { BufferArray } from '../utils';\nimport { SerializationError } from '../errors';\nimport { StringAsciiCV, StringUtf8CV } from './types/stringCV';\n\nfunction bufferWithTypeID(typeId: ClarityType, buffer: Buffer): Buffer {\n  const id = Buffer.from([typeId]);\n  return Buffer.concat([id, buffer]);\n}\n\nfunction serializeBoolCV(value: BooleanCV): Buffer {\n  return Buffer.from([value.type]);\n}\n\nfunction serializeOptionalCV(cv: OptionalCV): Buffer {\n  if (cv.type === ClarityType.OptionalNone) {\n    return Buffer.from([cv.type]);\n  } else {\n    return bufferWithTypeID(cv.type, serializeCV(cv.value));\n  }\n}\n\nfunction serializeBufferCV(cv: BufferCV): Buffer {\n  const length = Buffer.alloc(4);\n  length.writeUInt32BE(cv.buffer.length, 0);\n  return bufferWithTypeID(cv.type, Buffer.concat([length, cv.buffer]));\n}\n\nfunction serializeIntCV(cv: IntCV | UIntCV): Buffer {\n  const buffer = cv.value.toArrayLike(Buffer, 'be', 16);\n  return bufferWithTypeID(cv.type, buffer);\n}\n\nfunction serializeStandardPrincipalCV(cv: StandardPrincipalCV): Buffer {\n  return bufferWithTypeID(cv.type, serializeAddress(cv.address));\n}\n\nfunction serializeContractPrincipalCV(cv: ContractPrincipalCV): Buffer {\n  return bufferWithTypeID(\n    cv.type,\n    Buffer.concat([serializeAddress(cv.address), serializeLPString(cv.contractName)])\n  );\n}\n\nfunction serializeResponseCV(cv: ResponseCV) {\n  return bufferWithTypeID(cv.type, serializeCV(cv.value));\n}\n\nfunction serializeListCV(cv: ListCV) {\n  const buffers = new BufferArray();\n\n  const length = Buffer.alloc(4);\n  length.writeUInt32BE(cv.list.length, 0);\n  buffers.push(length);\n\n  for (const value of cv.list) {\n    const serializedValue = serializeCV(value);\n    buffers.push(serializedValue);\n  }\n\n  return bufferWithTypeID(cv.type, buffers.concatBuffer());\n}\n\nfunction serializeTupleCV(cv: TupleCV) {\n  const buffers = new BufferArray();\n\n  const length = Buffer.alloc(4);\n  length.writeUInt32BE(Object.keys(cv.data).length, 0);\n  buffers.push(length);\n\n  const lexicographicOrder = Object.keys(cv.data).sort((a, b) => {\n    const bufA = Buffer.from(a);\n    const bufB = Buffer.from(b);\n    return bufA.compare(bufB);\n  });\n\n  for (const key of lexicographicOrder) {\n    const nameWithLength = createLPString(key);\n    buffers.push(serializeLPString(nameWithLength));\n\n    const serializedValue = serializeCV(cv.data[key]);\n    buffers.push(serializedValue);\n  }\n\n  return bufferWithTypeID(cv.type, buffers.concatBuffer());\n}\n\nfunction serializeStringCV(cv: StringAsciiCV | StringUtf8CV, encoding: 'ascii' | 'utf8') {\n  const buffers = new BufferArray();\n\n  const str = Buffer.from(cv.data, encoding);\n  const len = Buffer.alloc(4);\n  len.writeUInt32BE(str.length, 0);\n\n  buffers.push(len);\n  buffers.push(str);\n\n  return bufferWithTypeID(cv.type, buffers.concatBuffer());\n}\n\nfunction serializeStringAsciiCV(cv: StringAsciiCV) {\n  return serializeStringCV(cv, 'ascii');\n}\n\nfunction serializeStringUtf8CV(cv: StringUtf8CV) {\n  return serializeStringCV(cv, 'utf8');\n}\n\nexport function serializeCV(value: ClarityValue): Buffer {\n  switch (value.type) {\n    case ClarityType.BoolTrue:\n    case ClarityType.BoolFalse:\n      return serializeBoolCV(value);\n    case ClarityType.OptionalNone:\n    case ClarityType.OptionalSome:\n      return serializeOptionalCV(value);\n    case ClarityType.Buffer:\n      return serializeBufferCV(value);\n    case ClarityType.Int:\n    case ClarityType.UInt:\n      return serializeIntCV(value);\n    case ClarityType.PrincipalStandard:\n      return serializeStandardPrincipalCV(value);\n    case ClarityType.PrincipalContract:\n      return serializeContractPrincipalCV(value);\n    case ClarityType.ResponseOk:\n    case ClarityType.ResponseErr:\n      return serializeResponseCV(value);\n    case ClarityType.List:\n      return serializeListCV(value);\n    case ClarityType.Tuple:\n      return serializeTupleCV(value);\n    case ClarityType.StringASCII:\n      return serializeStringAsciiCV(value);\n    case ClarityType.StringUTF8:\n      return serializeStringUtf8CV(value);\n    default:\n      throw new SerializationError('Unable to serialize. Invalid Clarity Value.');\n  }\n}\n","import {\n  ClarityType,\n  ClarityValue,\n  intCV,\n  uintCV,\n  bufferCV,\n  trueCV,\n  falseCV,\n  standardPrincipalCVFromAddress,\n  contractPrincipalCVFromAddress,\n  responseOkCV,\n  responseErrorCV,\n  noneCV,\n  someCV,\n  listCV,\n  tupleCV,\n} from '.';\nimport { BufferReader } from '../bufferReader';\nimport { deserializeAddress, deserializeLPString } from '../types';\nimport { DeserializationError } from '../errors';\nimport { stringAsciiCV, stringUtf8CV } from './types/stringCV';\n\nexport default function deserializeCV(buffer: BufferReader | Buffer): ClarityValue {\n  const bufferReader = Buffer.isBuffer(buffer) ? new BufferReader(buffer) : buffer;\n  const type = bufferReader.readUInt8Enum(ClarityType, n => {\n    throw new DeserializationError(`Cannot recognize Clarity Type: ${n}`);\n  });\n\n  switch (type) {\n    case ClarityType.Int:\n      return intCV(bufferReader.readBuffer(16));\n\n    case ClarityType.UInt:\n      return uintCV(bufferReader.readBuffer(16));\n\n    case ClarityType.Buffer:\n      const bufferLength = bufferReader.readUInt32BE();\n      return bufferCV(bufferReader.readBuffer(bufferLength));\n\n    case ClarityType.BoolTrue:\n      return trueCV();\n\n    case ClarityType.BoolFalse:\n      return falseCV();\n\n    case ClarityType.PrincipalStandard:\n      const sAddress = deserializeAddress(bufferReader);\n      return standardPrincipalCVFromAddress(sAddress);\n\n    case ClarityType.PrincipalContract:\n      const cAddress = deserializeAddress(bufferReader);\n      const contractName = deserializeLPString(bufferReader);\n      return contractPrincipalCVFromAddress(cAddress, contractName);\n\n    case ClarityType.ResponseOk:\n      return responseOkCV(deserializeCV(bufferReader));\n\n    case ClarityType.ResponseErr:\n      return responseErrorCV(deserializeCV(bufferReader));\n\n    case ClarityType.OptionalNone:\n      return noneCV();\n\n    case ClarityType.OptionalSome:\n      return someCV(deserializeCV(bufferReader));\n\n    case ClarityType.List:\n      const listLength = bufferReader.readUInt32BE();\n      const listContents: ClarityValue[] = [];\n      for (let i = 0; i < listLength; i++) {\n        listContents.push(deserializeCV(bufferReader));\n      }\n      return listCV(listContents);\n\n    case ClarityType.Tuple:\n      const tupleLength = bufferReader.readUInt32BE();\n      const tupleContents: { [key: string]: ClarityValue } = {};\n      for (let i = 0; i < tupleLength; i++) {\n        const clarityName = deserializeLPString(bufferReader).content;\n        if (clarityName === undefined) {\n          throw new DeserializationError('\"content\" is undefined');\n        }\n        tupleContents[clarityName] = deserializeCV(bufferReader);\n      }\n      return tupleCV(tupleContents);\n\n    case ClarityType.StringASCII:\n      const asciiStrLen = bufferReader.readUInt32BE();\n      const asciiStr = bufferReader.readBuffer(asciiStrLen).toString('ascii');\n      return stringAsciiCV(asciiStr);\n\n    case ClarityType.StringUTF8:\n      const utf8StrLen = bufferReader.readUInt32BE();\n      const utf8Str = bufferReader.readBuffer(utf8StrLen).toString('utf8');\n      return stringUtf8CV(utf8Str);\n\n    default:\n      throw new DeserializationError(\n        'Unable to deserialize Clarity Value from buffer. Could not find valid Clarity Type.'\n      );\n  }\n}\n","import {\n  COMPRESSED_PUBKEY_LENGTH_BYTES,\n  UNCOMPRESSED_PUBKEY_LENGTH_BYTES,\n  StacksMessageType,\n  AddressHashMode,\n  TransactionVersion,\n} from './constants';\n\nimport {\n  BufferArray,\n  leftPadHexToLength,\n  intToHexString,\n  randomBytes,\n  hash160,\n  hashP2PKH,\n  hexStringToInt,\n} from './utils';\n\nimport { ec as EC } from 'elliptic';\n\nimport { MessageSignature, createMessageSignature } from './authorization';\nimport { BufferReader } from './bufferReader';\nimport { AddressVersion } from './constants';\nimport { c32address } from 'c32check';\nimport { addressHashModeToVersion, addressFromVersionHash, addressToString } from './types';\n\nexport interface StacksPublicKey {\n  readonly type: StacksMessageType.PublicKey;\n  readonly data: Buffer;\n}\n\n/** Creates a P2PKH address string from the given private key and tx version. */\nexport function getAddressFromPrivateKey(\n  /** Private key buffer or hex string */\n  privateKey: string | Buffer,\n  transactionVersion = TransactionVersion.Mainnet\n): string {\n  const pubKey = pubKeyfromPrivKey(privateKey);\n  return getAddressFromPublicKey(pubKey.data, transactionVersion);\n}\n\n/** Creates a P2PKH address string from the given public key and tx version. */\nexport function getAddressFromPublicKey(\n  /** Public key buffer or hex string */\n  publicKey: string | Buffer,\n  transactionVersion = TransactionVersion.Mainnet\n): string {\n  publicKey = typeof publicKey === 'string' ? publicKey : publicKey.toString('hex');\n  const addrVer = addressHashModeToVersion(AddressHashMode.SerializeP2PKH, transactionVersion);\n  const addr = addressFromVersionHash(addrVer, hashP2PKH(Buffer.from(publicKey, 'hex')));\n  const addrString = addressToString(addr);\n  return addrString;\n}\n\nexport function createStacksPublicKey(key: string): StacksPublicKey {\n  return {\n    type: StacksMessageType.PublicKey,\n    data: Buffer.from(key, 'hex'),\n  };\n}\n\nexport function publicKeyFromSignature(message: string, messageSignature: MessageSignature) {\n  const ec = new EC('secp256k1');\n  const messageBN = ec\n    .keyFromPrivate(message, 'hex')\n    .getPrivate()\n    .toString(10);\n\n  const parsedSignature = parseRecoverableSignature(messageSignature.data);\n\n  const publicKey = ec.recoverPubKey(\n    messageBN,\n    parsedSignature,\n    parsedSignature.recoveryParam,\n    'hex'\n  ) as { encodeCompressed: (enc: string) => string };\n\n  return publicKey.encodeCompressed('hex');\n}\n\nexport function publicKeyFromBuffer(data: Buffer): StacksPublicKey {\n  return { type: StacksMessageType.PublicKey, data };\n}\n\nexport function isCompressed(key: StacksPublicKey): boolean {\n  return !key.data.toString('hex').startsWith('04');\n}\n\nexport function publicKeyToString(key: StacksPublicKey): string {\n  return key.data.toString('hex');\n}\n\nexport function serializePublicKey(key: StacksPublicKey): Buffer {\n  const bufferArray: BufferArray = new BufferArray();\n  bufferArray.push(key.data);\n  return bufferArray.concatBuffer();\n}\n\nexport function pubKeyfromPrivKey(privateKey: string | Buffer): StacksPublicKey {\n  const privKey = createStacksPrivateKey(privateKey);\n  const ec = new EC('secp256k1');\n  const keyPair = ec.keyFromPrivate(privKey.data.toString('hex').slice(0, 64), 'hex');\n  const pubKey = keyPair.getPublic(privKey.compressed, 'hex');\n  return createStacksPublicKey(pubKey);\n}\n\nexport function deserializePublicKey(bufferReader: BufferReader): StacksPublicKey {\n  const fieldId = bufferReader.readUInt8();\n  const keyLength =\n    fieldId !== 4 ? COMPRESSED_PUBKEY_LENGTH_BYTES : UNCOMPRESSED_PUBKEY_LENGTH_BYTES;\n  return publicKeyFromBuffer(\n    Buffer.concat([Buffer.from([fieldId]), bufferReader.readBuffer(keyLength)])\n  );\n}\n\nexport interface StacksPrivateKey {\n  data: Buffer;\n  compressed: boolean;\n}\n\nexport function createStacksPrivateKey(key: string | Buffer): StacksPrivateKey {\n  const data = typeof key === 'string' ? Buffer.from(key, 'hex') : key;\n  let compressed: boolean;\n  if (data.length === 33) {\n    if (data[data.length - 1] !== 1) {\n      throw new Error(\n        'Improperly formatted private-key. 33 byte length usually ' +\n          'indicates compressed key, but last byte must be == 0x01'\n      );\n    }\n    compressed = true;\n  } else if (data.length === 32) {\n    compressed = false;\n  } else {\n    throw new Error(\n      `Improperly formatted private-key hex string: length should be 32 or 33 bytes, provided with length ${data.length}`\n    );\n  }\n  return { data, compressed };\n}\n\nexport function makeRandomPrivKey(entropy?: Buffer): StacksPrivateKey {\n  const ec = new EC('secp256k1');\n  const options = { entropy: entropy || randomBytes(32) };\n  const keyPair = ec.genKeyPair(options);\n  const privateKey = keyPair.getPrivate().toString('hex', 32);\n  return createStacksPrivateKey(privateKey);\n}\n\nexport function signWithKey(privateKey: StacksPrivateKey, input: string): MessageSignature {\n  const ec = new EC('secp256k1');\n  const key = ec.keyFromPrivate(privateKey.data.toString('hex').slice(0, 64), 'hex');\n  const signature = key.sign(input, 'hex', { canonical: true });\n  const coordinateValueBytes = 32;\n  const r = leftPadHexToLength(signature.r.toString('hex'), coordinateValueBytes * 2);\n  const s = leftPadHexToLength(signature.s.toString('hex'), coordinateValueBytes * 2);\n  if (signature.recoveryParam === undefined || signature.recoveryParam === null) {\n    throw new Error('\"signature.recoveryParam\" is not set');\n  }\n  const recoveryParam = intToHexString(signature.recoveryParam, 1);\n  const recoverableSignatureString = recoveryParam + r + s;\n  const recoverableSignature = createMessageSignature(recoverableSignatureString);\n  return recoverableSignature;\n}\n\nexport function getSignatureRecoveryParam(signature: string) {\n  const coordinateValueBytes = 32;\n  if (signature.length < coordinateValueBytes * 2 * 2 + 1) {\n    throw new Error('Invalid signature');\n  }\n  const recoveryParamHex = signature.substr(0, 2);\n  return hexStringToInt(recoveryParamHex);\n}\n\nexport function parseRecoverableSignature(signature: string) {\n  const coordinateValueBytes = 32;\n  if (signature.length < coordinateValueBytes * 2 * 2 + 1) {\n    throw new Error('Invalid signature');\n  }\n  const recoveryParamHex = signature.substr(0, 2);\n  const r = signature.substr(2, coordinateValueBytes * 2);\n  const s = signature.substr(2 + coordinateValueBytes * 2, coordinateValueBytes * 2);\n  return {\n    recoveryParam: hexStringToInt(recoveryParamHex),\n    r,\n    s,\n  };\n}\n\nexport function getPublicKey(privateKey: StacksPrivateKey): StacksPublicKey {\n  return pubKeyfromPrivKey(privateKey.data);\n}\n\nexport function privateKeyToString(privateKey: StacksPrivateKey): string {\n  return privateKey.data.toString('hex');\n}\n\nexport function publicKeyToAddress(version: AddressVersion, publicKey: StacksPublicKey): string {\n  return c32address(version, hash160(publicKey.data).toString('hex'));\n}\n","import { COINBASE_BUFFER_LENGTH_BYTES, PayloadType, StacksMessageType } from './constants';\n\nimport { BufferArray } from './utils';\n\nimport {\n  Address,\n  MemoString,\n  createAddress,\n  createMemoString,\n  LengthPrefixedString,\n  createLPString,\n  serializeStacksMessage,\n  deserializeAddress,\n  deserializeLPString,\n  deserializeMemoString,\n  codeBodyString,\n} from './types';\n\nimport { ClarityValue, serializeCV, deserializeCV } from './clarity/';\n\nimport BigNum from 'bn.js';\nimport { BufferReader } from './bufferReader';\nimport { PrincipalCV, principalCV } from './clarity/types/principalCV';\n\nexport type Payload =\n  | TokenTransferPayload\n  | ContractCallPayload\n  | SmartContractPayload\n  | PoisonPayload\n  | CoinbasePayload;\n\nexport interface TokenTransferPayload {\n  readonly type: StacksMessageType.Payload;\n  readonly payloadType: PayloadType.TokenTransfer;\n  readonly recipient: PrincipalCV;\n  readonly amount: BigNum;\n  readonly memo: MemoString;\n}\n\nexport function createTokenTransferPayload(\n  recipient: string | PrincipalCV,\n  amount: BigNum,\n  memo?: string | MemoString\n): TokenTransferPayload {\n  if (typeof recipient === 'string') {\n    recipient = principalCV(recipient);\n  }\n  if (typeof memo === 'string') {\n    memo = createMemoString(memo);\n  }\n\n  return {\n    type: StacksMessageType.Payload,\n    payloadType: PayloadType.TokenTransfer,\n    recipient,\n    amount,\n    memo: memo ?? createMemoString(''),\n  };\n}\n\nexport interface ContractCallPayload {\n  readonly type: StacksMessageType.Payload;\n  readonly payloadType: PayloadType.ContractCall;\n  readonly contractAddress: Address;\n  readonly contractName: LengthPrefixedString;\n  readonly functionName: LengthPrefixedString;\n  readonly functionArgs: ClarityValue[];\n}\n\nexport function createContractCallPayload(\n  contractAddress: string | Address,\n  contractName: string | LengthPrefixedString,\n  functionName: string | LengthPrefixedString,\n  functionArgs: ClarityValue[]\n): ContractCallPayload {\n  if (typeof contractAddress === 'string') {\n    contractAddress = createAddress(contractAddress);\n  }\n  if (typeof contractName === 'string') {\n    contractName = createLPString(contractName);\n  }\n  if (typeof functionName === 'string') {\n    functionName = createLPString(functionName);\n  }\n\n  return {\n    type: StacksMessageType.Payload,\n    payloadType: PayloadType.ContractCall,\n    contractAddress,\n    contractName,\n    functionName,\n    functionArgs,\n  };\n}\n\nexport interface SmartContractPayload {\n  readonly type: StacksMessageType.Payload;\n  readonly payloadType: PayloadType.SmartContract;\n  readonly contractName: LengthPrefixedString;\n  readonly codeBody: LengthPrefixedString;\n}\n\nexport function createSmartContractPayload(\n  contractName: string | LengthPrefixedString,\n  codeBody: string | LengthPrefixedString\n): SmartContractPayload {\n  if (typeof contractName === 'string') {\n    contractName = createLPString(contractName);\n  }\n  if (typeof codeBody === 'string') {\n    codeBody = codeBodyString(codeBody);\n  }\n\n  return {\n    type: StacksMessageType.Payload,\n    payloadType: PayloadType.SmartContract,\n    contractName,\n    codeBody,\n  };\n}\n\nexport interface PoisonPayload {\n  readonly type: StacksMessageType.Payload;\n  readonly payloadType: PayloadType.PoisonMicroblock;\n}\n\nexport function createPoisonPayload(): PoisonPayload {\n  return { type: StacksMessageType.Payload, payloadType: PayloadType.PoisonMicroblock };\n}\n\nexport interface CoinbasePayload {\n  readonly type: StacksMessageType.Payload;\n  readonly payloadType: PayloadType.Coinbase;\n  readonly coinbaseBuffer: Buffer;\n}\n\nexport function createCoinbasePayload(coinbaseBuffer: Buffer): CoinbasePayload {\n  if (coinbaseBuffer.byteLength != COINBASE_BUFFER_LENGTH_BYTES) {\n    throw Error(`Coinbase buffer size must be ${COINBASE_BUFFER_LENGTH_BYTES} bytes`);\n  }\n  return { type: StacksMessageType.Payload, payloadType: PayloadType.Coinbase, coinbaseBuffer };\n}\n\nexport function serializePayload(payload: Payload): Buffer {\n  const bufferArray: BufferArray = new BufferArray();\n  bufferArray.appendByte(payload.payloadType);\n\n  switch (payload.payloadType) {\n    case PayloadType.TokenTransfer:\n      bufferArray.push(serializeCV(payload.recipient));\n      bufferArray.push(payload.amount.toArrayLike(Buffer, 'be', 8));\n      bufferArray.push(serializeStacksMessage(payload.memo));\n      break;\n    case PayloadType.ContractCall:\n      bufferArray.push(serializeStacksMessage(payload.contractAddress));\n      bufferArray.push(serializeStacksMessage(payload.contractName));\n      bufferArray.push(serializeStacksMessage(payload.functionName));\n      const numArgs = Buffer.alloc(4);\n      numArgs.writeUInt32BE(payload.functionArgs.length, 0);\n      bufferArray.push(numArgs);\n      payload.functionArgs.forEach(arg => {\n        bufferArray.push(serializeCV(arg));\n      });\n      break;\n    case PayloadType.SmartContract:\n      bufferArray.push(serializeStacksMessage(payload.contractName));\n      bufferArray.push(serializeStacksMessage(payload.codeBody));\n      break;\n    case PayloadType.PoisonMicroblock:\n      // TODO: implement\n      break;\n    case PayloadType.Coinbase:\n      bufferArray.push(payload.coinbaseBuffer);\n      break;\n  }\n\n  return bufferArray.concatBuffer();\n}\n\nexport function deserializePayload(bufferReader: BufferReader): Payload {\n  const payloadType = bufferReader.readUInt8Enum(PayloadType, n => {\n    throw new Error(`Cannot recognize PayloadType: ${n}`);\n  });\n\n  switch (payloadType) {\n    case PayloadType.TokenTransfer:\n      const recipient = deserializeCV(bufferReader) as PrincipalCV;\n      const amount = new BigNum(bufferReader.readBuffer(8));\n      const memo = deserializeMemoString(bufferReader);\n      return createTokenTransferPayload(recipient, amount, memo);\n    case PayloadType.ContractCall:\n      const contractAddress = deserializeAddress(bufferReader);\n      const contractCallName = deserializeLPString(bufferReader);\n      const functionName = deserializeLPString(bufferReader);\n      const functionArgs = [];\n      const numberOfArgs = bufferReader.readUInt32BE();\n      for (let i = 0; i < numberOfArgs; i++) {\n        const clarityValue = deserializeCV(bufferReader);\n        functionArgs.push(clarityValue);\n      }\n      return createContractCallPayload(\n        contractAddress,\n        contractCallName,\n        functionName,\n        functionArgs\n      );\n    case PayloadType.SmartContract:\n      const smartContractName = deserializeLPString(bufferReader);\n      const codeBody = deserializeLPString(bufferReader, 4, 100000);\n      return createSmartContractPayload(smartContractName, codeBody);\n    case PayloadType.PoisonMicroblock:\n      // TODO: implement\n      return createPoisonPayload();\n    case PayloadType.Coinbase:\n      const coinbaseBuffer = bufferReader.readBuffer(COINBASE_BUFFER_LENGTH_BYTES);\n      return createCoinbasePayload(coinbaseBuffer);\n  }\n}\n","import { ClarityType } from '../clarityValue';\n\ninterface BufferCV {\n  readonly type: ClarityType.Buffer;\n  readonly buffer: Buffer;\n}\n\nconst bufferCV = (buffer: Buffer): BufferCV => {\n  if (buffer.length > 1000000) {\n    throw new Error('Cannot construct clarity buffer that is greater than 1MB');\n  }\n\n  return { type: ClarityType.Buffer, buffer };\n};\n\nconst bufferCVFromString = (str: string): BufferCV => bufferCV(Buffer.from(str));\n\nexport { BufferCV, bufferCV, bufferCVFromString };\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.c32decode = exports.c32normalize = exports.c32encode = exports.c32 = void 0;\nvar buffer_1 = require(\"buffer/\");\nexports.c32 = '0123456789ABCDEFGHJKMNPQRSTVWXYZ';\nvar hex = '0123456789abcdef';\n/**\n * Encode a hex string as a c32 string.  Note that the hex string is assumed\n * to be big-endian (and the resulting c32 string will be as well).\n * @param {string} inputHex - the input to encode\n * @param {number} minLength - the minimum length of the c32 string\n * @returns {string} the c32check-encoded representation of the data, as a string\n */\nfunction c32encode(inputHex, minLength) {\n    // must be hex\n    if (!inputHex.match(/^[0-9a-fA-F]*$/)) {\n        throw new Error('Not a hex-encoded string');\n    }\n    if ((inputHex.length) % 2 !== 0) {\n        inputHex = \"0\" + inputHex;\n    }\n    inputHex = inputHex.toLowerCase();\n    var res = [];\n    var carry = 0;\n    for (var i = inputHex.length - 1; i >= 0; i--) {\n        if (carry < 4) {\n            var currentCode = hex.indexOf(inputHex[i]) >> carry;\n            var nextCode = 0;\n            if (i !== 0) {\n                nextCode = hex.indexOf(inputHex[i - 1]);\n            }\n            // carry = 0, nextBits is 1, carry = 1, nextBits is 2\n            var nextBits = 1 + carry;\n            var nextLowBits = (nextCode % (1 << nextBits)) << (5 - nextBits);\n            var curC32Digit = exports.c32[currentCode + nextLowBits];\n            carry = nextBits;\n            res.unshift(curC32Digit);\n        }\n        else {\n            carry = 0;\n        }\n    }\n    var C32leadingZeros = 0;\n    for (var i = 0; i < res.length; i++) {\n        if (res[i] !== '0') {\n            break;\n        }\n        else {\n            C32leadingZeros++;\n        }\n    }\n    res = res.slice(C32leadingZeros);\n    var zeroPrefix = buffer_1.Buffer.from(inputHex, 'hex').toString().match(/^\\u0000*/);\n    var numLeadingZeroBytesInHex = zeroPrefix ? zeroPrefix[0].length : 0;\n    for (var i = 0; i < numLeadingZeroBytesInHex; i++) {\n        res.unshift(exports.c32[0]);\n    }\n    if (minLength) {\n        var count = minLength - res.length;\n        for (var i = 0; i < count; i++) {\n            res.unshift(exports.c32[0]);\n        }\n    }\n    return res.join('');\n}\nexports.c32encode = c32encode;\n/*\n * Normalize a c32 string\n * @param {string} c32input - the c32-encoded input string\n * @returns {string} the canonical representation of the c32 input string\n */\nfunction c32normalize(c32input) {\n    // must be upper-case\n    // replace all O's with 0's\n    // replace all I's and L's with 1's\n    return c32input.toUpperCase()\n        .replace(/O/g, '0')\n        .replace(/L|I/g, '1');\n}\nexports.c32normalize = c32normalize;\n/*\n * Decode a c32 string back into a hex string.  Note that the c32 input\n * string is assumed to be big-endian (and the resulting hex string will\n * be as well).\n * @param {string} c32input - the c32-encoded input to decode\n * @param {number} minLength - the minimum length of the output hex string (in bytes)\n * @returns {string} the hex-encoded representation of the data, as a string\n */\nfunction c32decode(c32input, minLength) {\n    c32input = c32normalize(c32input);\n    // must result in a c32 string\n    if (!c32input.match(\"^[\" + exports.c32 + \"]*$\")) {\n        throw new Error('Not a c32-encoded string');\n    }\n    var zeroPrefix = c32input.match(\"^\" + exports.c32[0] + \"*\");\n    var numLeadingZeroBytes = zeroPrefix ? zeroPrefix[0].length : 0;\n    var res = [];\n    var carry = 0;\n    var carryBits = 0;\n    for (var i = c32input.length - 1; i >= 0; i--) {\n        if (carryBits === 4) {\n            res.unshift(hex[carry]);\n            carryBits = 0;\n            carry = 0;\n        }\n        var currentCode = exports.c32.indexOf(c32input[i]) << carryBits;\n        var currentValue = currentCode + carry;\n        var currentHexDigit = hex[currentValue % 16];\n        carryBits += 1;\n        carry = currentValue >> 4;\n        if (carry > 1 << carryBits) {\n            throw new Error('Panic error in decoding.');\n        }\n        res.unshift(currentHexDigit);\n    }\n    // one last carry\n    res.unshift(hex[carry]);\n    if (res.length % 2 === 1) {\n        res.unshift('0');\n    }\n    var hexLeadingZeros = 0;\n    for (var i = 0; i < res.length; i++) {\n        if (res[i] !== '0') {\n            break;\n        }\n        else {\n            hexLeadingZeros++;\n        }\n    }\n    res = res.slice(hexLeadingZeros - (hexLeadingZeros % 2));\n    var hexStr = res.join('');\n    for (var i = 0; i < numLeadingZeroBytes; i++) {\n        hexStr = \"00\" + hexStr;\n    }\n    if (minLength) {\n        var count = minLength * 2 - hexStr.length;\n        for (var i = 0; i < count; i += 2) {\n            hexStr = \"00\" + hexStr;\n        }\n    }\n    return hexStr;\n}\nexports.c32decode = c32decode;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.c32checkDecode = exports.c32checkEncode = void 0;\nvar buffer_1 = require(\"buffer/\");\nvar encoding_1 = require(\"./encoding\");\nvar cross_sha256_1 = require(\"cross-sha256\");\n/**\n * Get the c32check checksum of a hex-encoded string\n * @param {string} dataHex - the hex string\n * @returns {string} the c32 checksum, as a bin-encoded string\n */\nfunction c32checksum(dataHex) {\n    var dataHash = cross_sha256_1.hashSha256(cross_sha256_1.hashSha256(buffer_1.Buffer.from(dataHex, 'hex')));\n    var checksum = dataHash.slice(0, 4).toString('hex');\n    return checksum;\n}\n/**\n * Encode a hex string as a c32check string.  This is a lot like how\n * base58check works in Bitcoin-land, but this algorithm uses the\n * z-base-32 alphabet instead of the base58 alphabet.  The algorithm\n * is as follows:\n * * calculate the c32checksum of version + data\n * * c32encode version + data + c32checksum\n * @param {number} version - the version string (between 0 and 31)\n * @param {string} data - the data to encode\n * @returns {string} the c32check representation\n */\nfunction c32checkEncode(version, data) {\n    if (version < 0 || version >= 32) {\n        throw new Error('Invalid version (must be between 0 and 31)');\n    }\n    if (!data.match(/^[0-9a-fA-F]*$/)) {\n        throw new Error('Invalid data (not a hex string)');\n    }\n    data = data.toLowerCase();\n    if (data.length % 2 !== 0) {\n        data = \"0\" + data;\n    }\n    var versionHex = version.toString(16);\n    if (versionHex.length === 1) {\n        versionHex = \"0\" + versionHex;\n    }\n    var checksumHex = c32checksum(\"\" + versionHex + data);\n    var c32str = encoding_1.c32encode(\"\" + data + checksumHex);\n    return \"\" + encoding_1.c32[version] + c32str;\n}\nexports.c32checkEncode = c32checkEncode;\n/*\n * Decode a c32check string back into its version and data payload.  This is\n * a lot like how base58check works in Bitcoin-land, but this algorithm uses\n * the z-base-32 alphabet instead of the base58 alphabet.  The algorithm\n * is as follows:\n * * extract the version, data, and checksum\n * * verify the checksum matches c32checksum(version + data)\n * * return data\n * @param {string} c32data - the c32check-encoded string\n * @returns {array} [version (number), data (string)].  The returned data\n * will be a hex string.  Throws an exception if the checksum does not match.\n */\nfunction c32checkDecode(c32data) {\n    c32data = encoding_1.c32normalize(c32data);\n    var dataHex = encoding_1.c32decode(c32data.slice(1));\n    var versionChar = c32data[0];\n    var version = encoding_1.c32.indexOf(versionChar);\n    var checksum = dataHex.slice(-8);\n    var versionHex = version.toString(16);\n    if (versionHex.length === 1) {\n        versionHex = \"0\" + versionHex;\n    }\n    if (c32checksum(\"\" + versionHex + dataHex.substring(0, dataHex.length - 8)) !== checksum) {\n        throw new Error('Invalid c32check string: checksum mismatch');\n    }\n    return [version, dataHex.substring(0, dataHex.length - 8)];\n}\nexports.c32checkDecode = c32checkDecode;\n","import {\n  PostConditionType,\n  FungibleConditionCode,\n  NonFungibleConditionCode,\n  StacksMessageType,\n} from './constants';\n\nimport { BufferArray } from './utils';\n\nimport {\n  AssetInfo,\n  serializeAssetInfo,\n  deserializeAssetInfo,\n  PostConditionPrincipal,\n  serializePrincipal,\n  deserializePrincipal,\n  parseAssetInfoString,\n  parsePrincipalString,\n} from './types';\n\nimport BigNum from 'bn.js';\nimport { BufferReader } from './bufferReader';\nimport { ClarityValue, serializeCV, deserializeCV } from './clarity';\nimport { DeserializationError } from './errors';\n\nexport type PostCondition = STXPostCondition | FungiblePostCondition | NonFungiblePostCondition;\n\nexport interface STXPostCondition {\n  readonly type: StacksMessageType.PostCondition;\n  readonly conditionType: PostConditionType.STX;\n  readonly principal: PostConditionPrincipal;\n  readonly conditionCode: FungibleConditionCode;\n  readonly amount: BigNum;\n}\n\nexport function createSTXPostCondition(\n  principal: string | PostConditionPrincipal,\n  conditionCode: FungibleConditionCode,\n  amount: BigNum\n): STXPostCondition {\n  if (typeof principal === 'string') {\n    principal = parsePrincipalString(principal);\n  }\n\n  return {\n    type: StacksMessageType.PostCondition,\n    conditionType: PostConditionType.STX,\n    principal,\n    conditionCode,\n    amount,\n  };\n}\n\nexport interface FungiblePostCondition {\n  readonly type: StacksMessageType.PostCondition;\n  readonly conditionType: PostConditionType.Fungible;\n  readonly principal: PostConditionPrincipal;\n  readonly conditionCode: FungibleConditionCode;\n  readonly amount: BigNum;\n  readonly assetInfo: AssetInfo;\n}\n\nexport function createFungiblePostCondition(\n  principal: string | PostConditionPrincipal,\n  conditionCode: FungibleConditionCode,\n  amount: BigNum,\n  assetInfo: string | AssetInfo\n): FungiblePostCondition {\n  if (typeof principal === 'string') {\n    principal = parsePrincipalString(principal);\n  }\n  if (typeof assetInfo === 'string') {\n    assetInfo = parseAssetInfoString(assetInfo);\n  }\n\n  return {\n    type: StacksMessageType.PostCondition,\n    conditionType: PostConditionType.Fungible,\n    principal,\n    conditionCode,\n    amount,\n    assetInfo,\n  };\n}\n\nexport interface NonFungiblePostCondition {\n  readonly type: StacksMessageType.PostCondition;\n  readonly conditionType: PostConditionType.NonFungible;\n  readonly principal: PostConditionPrincipal;\n  readonly conditionCode: NonFungibleConditionCode;\n  /** Structure that identifies the token type. */\n  readonly assetInfo: AssetInfo;\n  /** The Clarity value that names the token instance. */\n  readonly assetName: ClarityValue;\n}\n\nexport function createNonFungiblePostCondition(\n  principal: string | PostConditionPrincipal,\n  conditionCode: NonFungibleConditionCode,\n  assetInfo: string | AssetInfo,\n  assetName: ClarityValue\n): NonFungiblePostCondition {\n  if (typeof principal === 'string') {\n    principal = parsePrincipalString(principal);\n  }\n  if (typeof assetInfo === 'string') {\n    assetInfo = parseAssetInfoString(assetInfo);\n  }\n\n  return {\n    type: StacksMessageType.PostCondition,\n    conditionType: PostConditionType.NonFungible,\n    principal,\n    conditionCode,\n    assetInfo,\n    assetName,\n  };\n}\n\nexport function serializePostCondition(postCondition: PostCondition): Buffer {\n  const bufferArray: BufferArray = new BufferArray();\n  bufferArray.appendByte(postCondition.conditionType);\n  bufferArray.push(serializePrincipal(postCondition.principal));\n\n  if (\n    postCondition.conditionType === PostConditionType.Fungible ||\n    postCondition.conditionType === PostConditionType.NonFungible\n  ) {\n    bufferArray.push(serializeAssetInfo(postCondition.assetInfo));\n  }\n\n  if (postCondition.conditionType === PostConditionType.NonFungible) {\n    bufferArray.push(serializeCV(postCondition.assetName));\n  }\n\n  bufferArray.appendByte(postCondition.conditionCode);\n\n  if (\n    postCondition.conditionType === PostConditionType.STX ||\n    postCondition.conditionType === PostConditionType.Fungible\n  ) {\n    bufferArray.push(postCondition.amount.toArrayLike(Buffer, 'be', 8));\n  }\n\n  return bufferArray.concatBuffer();\n}\n\nexport function deserializePostCondition(bufferReader: BufferReader): PostCondition {\n  const postConditionType = bufferReader.readUInt8Enum(PostConditionType, n => {\n    throw new DeserializationError(`Could not read ${n} as PostConditionType`);\n  });\n\n  const principal = deserializePrincipal(bufferReader);\n\n  let conditionCode;\n  let assetInfo;\n  let amount;\n  switch (postConditionType) {\n    case PostConditionType.STX:\n      conditionCode = bufferReader.readUInt8Enum(FungibleConditionCode, n => {\n        throw new DeserializationError(`Could not read ${n} as FungibleConditionCode`);\n      });\n      amount = new BigNum(bufferReader.readBuffer(8).toString('hex'), 16);\n      return {\n        type: StacksMessageType.PostCondition,\n        conditionType: PostConditionType.STX,\n        principal,\n        conditionCode,\n        amount,\n      };\n    case PostConditionType.Fungible:\n      assetInfo = deserializeAssetInfo(bufferReader);\n      conditionCode = bufferReader.readUInt8Enum(FungibleConditionCode, n => {\n        throw new DeserializationError(`Could not read ${n} as FungibleConditionCode`);\n      });\n      amount = new BigNum(bufferReader.readBuffer(8).toString('hex'), 16);\n      return {\n        type: StacksMessageType.PostCondition,\n        conditionType: PostConditionType.Fungible,\n        principal,\n        conditionCode,\n        amount,\n        assetInfo,\n      };\n    case PostConditionType.NonFungible:\n      assetInfo = deserializeAssetInfo(bufferReader);\n      const assetName = deserializeCV(bufferReader);\n      conditionCode = bufferReader.readUInt8Enum(NonFungibleConditionCode, n => {\n        throw new DeserializationError(`Could not read ${n} as FungibleConditionCode`);\n      });\n      return {\n        type: StacksMessageType.PostCondition,\n        conditionType: PostConditionType.NonFungible,\n        principal,\n        conditionCode,\n        assetInfo,\n        assetName,\n      };\n  }\n}\n","import BigNum from 'bn.js';\nimport { CLARITY_INT_SIZE } from '../../constants';\nimport { ClarityType } from '../clarityValue';\n\ninterface IntCV {\n  readonly type: ClarityType.Int;\n  readonly value: BigNum;\n}\n\nconst intCV = (value: number | string | Buffer): IntCV => {\n  const bn = new BigNum(value);\n  const twos = bn.toTwos(CLARITY_INT_SIZE);\n\n  if (twos.bitLength() > CLARITY_INT_SIZE) {\n    throw new Error('Cannot construct clarity integer from value greater than INT_SIZE bits');\n  }\n\n  return { type: ClarityType.Int, value: twos };\n};\n\ninterface UIntCV {\n  readonly type: ClarityType.UInt;\n  readonly value: BigNum;\n}\n\nconst uintCV = (value: number | string | Buffer): UIntCV => {\n  const bn = new BigNum(value);\n  const twos = bn.toTwos(CLARITY_INT_SIZE);\n\n  if (twos.isNeg()) {\n    throw new Error('Cannot construct unsigned clarity integer from negative value');\n  } else if (twos.bitLength() > CLARITY_INT_SIZE) {\n    throw new Error('Cannot construct unsigned clarity integer from value greater than 128 bits');\n  }\n\n  return { type: ClarityType.UInt, value: twos };\n};\n\nexport { IntCV, UIntCV, intCV, uintCV };\n","import { ClarityType } from '../clarityValue';\n\ntype BooleanCV = TrueCV | FalseCV;\n\ninterface TrueCV {\n  type: ClarityType.BoolTrue;\n}\n\ninterface FalseCV {\n  type: ClarityType.BoolFalse;\n}\n\nconst trueCV = (): BooleanCV => ({ type: ClarityType.BoolTrue });\nconst falseCV = (): BooleanCV => ({ type: ClarityType.BoolFalse });\n\nexport { BooleanCV, TrueCV, FalseCV, trueCV, falseCV };\n","import { ClarityType, ClarityValue } from '../clarityValue';\n\ntype OptionalCV = NoneCV | SomeCV;\n\ninterface NoneCV {\n  readonly type: ClarityType.OptionalNone;\n}\n\ninterface SomeCV {\n  readonly type: ClarityType.OptionalSome;\n  readonly value: ClarityValue;\n}\n\nconst noneCV = (): OptionalCV => ({ type: ClarityType.OptionalNone });\nconst someCV = (value: ClarityValue): OptionalCV => ({ type: ClarityType.OptionalSome, value });\nconst optionalCVOf = (value?: ClarityValue): OptionalCV => {\n  if (value) {\n    return someCV(value);\n  } else {\n    return noneCV();\n  }\n};\n\nexport { OptionalCV, NoneCV, SomeCV, noneCV, someCV, optionalCVOf };\n","import { ClarityType } from '../clarityValue';\n\ninterface StringAsciiCV {\n  readonly type: ClarityType.StringASCII;\n  readonly data: string;\n}\n\ninterface StringUtf8CV {\n  readonly type: ClarityType.StringUTF8;\n  readonly data: string;\n}\n\nconst stringAsciiCV = (data: string): StringAsciiCV => {\n  return { type: ClarityType.StringASCII, data };\n};\n\nconst stringUtf8CV = (data: string): StringUtf8CV => {\n  return { type: ClarityType.StringUTF8, data };\n};\n\nconst stringCV = (data: string, encoding: 'ascii' | 'utf8'): StringAsciiCV | StringUtf8CV => {\n  switch (encoding) {\n    case 'ascii':\n      return stringAsciiCV(data);\n    case 'utf8':\n      return stringAsciiCV(data);\n  }\n};\n\nexport { StringAsciiCV, StringUtf8CV, stringAsciiCV, stringUtf8CV, stringCV };\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./AccountDataResponse\"), exports);\n__exportStar(require(\"./AddressAssetsListResponse\"), exports);\n__exportStar(require(\"./AddressBalanceResponse\"), exports);\n__exportStar(require(\"./AddressBalanceResponseStx\"), exports);\n__exportStar(require(\"./AddressStxBalanceResponse\"), exports);\n__exportStar(require(\"./AddressTransactionsListResponse\"), exports);\n__exportStar(require(\"./Block\"), exports);\n__exportStar(require(\"./BlockListResponse\"), exports);\n__exportStar(require(\"./BurnchainReward\"), exports);\n__exportStar(require(\"./BurnchainRewardListResponse\"), exports);\n__exportStar(require(\"./BurnchainRewardsTotal\"), exports);\n__exportStar(require(\"./ContractInterfaceResponse\"), exports);\n__exportStar(require(\"./ContractSourceResponse\"), exports);\n__exportStar(require(\"./CoreNodeInfoResponse\"), exports);\n__exportStar(require(\"./CoreNodePoxResponse\"), exports);\n__exportStar(require(\"./MapEntryResponse\"), exports);\n__exportStar(require(\"./MempoolTransactionListResponse\"), exports);\n__exportStar(require(\"./NetworkBlockTimeResponse\"), exports);\n__exportStar(require(\"./NetworkBlockTimesResponse\"), exports);\n__exportStar(require(\"./NetworkBlockTimesResponseMainnet\"), exports);\n__exportStar(require(\"./NetworkIdentifier\"), exports);\n__exportStar(require(\"./OtherTransactionIdentifier\"), exports);\n__exportStar(require(\"./PostCoreNodeTransactionsError\"), exports);\n__exportStar(require(\"./ReadOnlyFunctionArgs\"), exports);\n__exportStar(require(\"./ReadOnlyFunctionSuccessResponse\"), exports);\n__exportStar(require(\"./RosettaAccount\"), exports);\n__exportStar(require(\"./RosettaAccountBalanceRequest\"), exports);\n__exportStar(require(\"./RosettaAccountBalanceResponse\"), exports);\n__exportStar(require(\"./RosettaAccountBalanceResponseCoinIdentifier\"), exports);\n__exportStar(require(\"./RosettaAccountBalanceResponseMetadata\"), exports);\n__exportStar(require(\"./RosettaAccountIdentifier\"), exports);\n__exportStar(require(\"./RosettaAmount\"), exports);\n__exportStar(require(\"./RosettaBlock\"), exports);\n__exportStar(require(\"./RosettaBlockMetadata\"), exports);\n__exportStar(require(\"./RosettaBlockMetadata1\"), exports);\n__exportStar(require(\"./RosettaBlockMetadata2\"), exports);\n__exportStar(require(\"./RosettaBlockRequest\"), exports);\n__exportStar(require(\"./RosettaBlockResponse\"), exports);\n__exportStar(require(\"./RosettaBlockTransactionRequest\"), exports);\n__exportStar(require(\"./RosettaBlockTransactionResponse\"), exports);\n__exportStar(require(\"./RosettaCoin\"), exports);\n__exportStar(require(\"./RosettaCoinChange\"), exports);\n__exportStar(require(\"./RosettaConstructionCombineRequest\"), exports);\n__exportStar(require(\"./RosettaConstructionCombineResponse\"), exports);\n__exportStar(require(\"./RosettaConstructionDeriveRequest\"), exports);\n__exportStar(require(\"./RosettaConstructionDeriveResponse\"), exports);\n__exportStar(require(\"./RosettaConstructionHashRequest\"), exports);\n__exportStar(require(\"./RosettaConstructionHashResponse\"), exports);\n__exportStar(require(\"./RosettaConstructionMetadataRequest\"), exports);\n__exportStar(require(\"./RosettaConstructionMetadataResponse\"), exports);\n__exportStar(require(\"./RosettaConstructionMetadataResponseMetadata\"), exports);\n__exportStar(require(\"./RosettaConstructionParseRequest\"), exports);\n__exportStar(require(\"./RosettaConstructionParseResponse\"), exports);\n__exportStar(require(\"./RosettaConstructionPayloadResponse\"), exports);\n__exportStar(require(\"./RosettaConstructionPayloadsRequest\"), exports);\n__exportStar(require(\"./RosettaConstructionPreprocessRequest\"), exports);\n__exportStar(require(\"./RosettaConstructionPreprocessResponse\"), exports);\n__exportStar(require(\"./RosettaConstructionSubmitRequest\"), exports);\n__exportStar(require(\"./RosettaConstructionSubmitResponse\"), exports);\n__exportStar(require(\"./RosettaCurrency\"), exports);\n__exportStar(require(\"./RosettaError\"), exports);\n__exportStar(require(\"./RosettaErrorDetails\"), exports);\n__exportStar(require(\"./RosettaMaxFeeAmount\"), exports);\n__exportStar(require(\"./RosettaMempoolRequest\"), exports);\n__exportStar(require(\"./RosettaMempoolResponse\"), exports);\n__exportStar(require(\"./RosettaMempoolTransactionRequest\"), exports);\n__exportStar(require(\"./RosettaMempoolTransactionResponse\"), exports);\n__exportStar(require(\"./RosettaNetworkListResponse\"), exports);\n__exportStar(require(\"./RosettaNetworkListResponseSubNetworkIdentifier\"), exports);\n__exportStar(require(\"./RosettaNetworkListResponseSubNetworkIdentifierMetadata\"), exports);\n__exportStar(require(\"./RosettaNetworkOptionsResponse\"), exports);\n__exportStar(require(\"./RosettaNetworkOptionsResponseAllow\"), exports);\n__exportStar(require(\"./RosettaNetworkOptionsResponseVersion\"), exports);\n__exportStar(require(\"./RosettaOperation\"), exports);\n__exportStar(require(\"./RosettaOperationIdentifier\"), exports);\n__exportStar(require(\"./RosettaOperationStatus\"), exports);\n__exportStar(require(\"./RosettaOptions\"), exports);\n__exportStar(require(\"./RosettaOptionsRequest\"), exports);\n__exportStar(require(\"./RosettaParentBlockIdentifier\"), exports);\n__exportStar(require(\"./RosettaPublicKey\"), exports);\n__exportStar(require(\"./RosettaRelatedOperation\"), exports);\n__exportStar(require(\"./RosettaSignature\"), exports);\n__exportStar(require(\"./RosettaStatusRequest\"), exports);\n__exportStar(require(\"./RosettaSubAccount\"), exports);\n__exportStar(require(\"./RosettaTransaction\"), exports);\n__exportStar(require(\"./RunFaucetResponse\"), exports);\n__exportStar(require(\"./SigningPayload\"), exports);\n__exportStar(require(\"./TransactionIdentifier\"), exports);\n__exportStar(require(\"./TransactionResults\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TextApiResponse = exports.BlobApiResponse = exports.VoidApiResponse = exports.JSONApiResponse = exports.canConsumeForm = exports.mapValues = exports.querystring = exports.exists = exports.Configuration = exports.COLLECTION_FORMATS = exports.RequiredError = exports.BaseAPI = exports.BASE_PATH = void 0;\nexports.BASE_PATH = \"https://stacks-node-api.mainnet.stacks.co\".replace(/\\/+$/, \"\");\nconst isBlob = (value) => typeof Blob !== 'undefined' && value instanceof Blob;\n/**\n * This is the base class for all generated API classes.\n */\nclass BaseAPI {\n    constructor(configuration = new Configuration()) {\n        this.configuration = configuration;\n        this.fetchApi = async (url, init) => {\n            let fetchParams = { url, init };\n            for (const middleware of this.middleware) {\n                if (middleware.pre) {\n                    fetchParams = await middleware.pre(Object.assign({ fetch: this.fetchApi }, fetchParams)) || fetchParams;\n                }\n            }\n            let response = await this.configuration.fetchApi(fetchParams.url, fetchParams.init);\n            for (const middleware of this.middleware) {\n                if (middleware.post) {\n                    response = await middleware.post({\n                        fetch: this.fetchApi,\n                        url,\n                        init,\n                        response: response.clone(),\n                    }) || response;\n                }\n            }\n            return response;\n        };\n        this.middleware = configuration.middleware;\n    }\n    withMiddleware(...middlewares) {\n        const next = this.clone();\n        next.middleware = next.middleware.concat(...middlewares);\n        return next;\n    }\n    withPreMiddleware(...preMiddlewares) {\n        const middlewares = preMiddlewares.map((pre) => ({ pre }));\n        return this.withMiddleware(...middlewares);\n    }\n    withPostMiddleware(...postMiddlewares) {\n        const middlewares = postMiddlewares.map((post) => ({ post }));\n        return this.withMiddleware(...middlewares);\n    }\n    async request(context) {\n        const { url, init } = this.createFetchParams(context);\n        const response = await this.fetchApi(url, init);\n        if (response.status >= 200 && response.status < 300) {\n            return response;\n        }\n        throw response;\n    }\n    createFetchParams(context) {\n        let url = this.configuration.basePath + context.path;\n        if (context.query !== undefined && Object.keys(context.query).length !== 0) {\n            // only add the querystring to the URL if there are query parameters.\n            // this is done to avoid urls ending with a \"?\" character which buggy webservers\n            // do not handle correctly sometimes.\n            url += '?' + this.configuration.queryParamsStringify(context.query);\n        }\n        const body = ((typeof FormData !== \"undefined\" && context.body instanceof FormData) || context.body instanceof URLSearchParams || isBlob(context.body))\n            ? context.body\n            : JSON.stringify(context.body);\n        const headers = Object.assign({}, this.configuration.headers, context.headers);\n        const init = {\n            method: context.method,\n            headers: headers,\n            body,\n            credentials: this.configuration.credentials\n        };\n        return { url, init };\n    }\n    /**\n     * Create a shallow clone of `this` by constructing a new instance\n     * and then shallow cloning data members.\n     */\n    clone() {\n        const constructor = this.constructor;\n        const next = new constructor(this.configuration);\n        next.middleware = this.middleware.slice();\n        return next;\n    }\n}\nexports.BaseAPI = BaseAPI;\n;\nclass RequiredError extends Error {\n    constructor(field, msg) {\n        super(msg);\n        this.field = field;\n        this.name = \"RequiredError\";\n    }\n}\nexports.RequiredError = RequiredError;\nexports.COLLECTION_FORMATS = {\n    csv: \",\",\n    ssv: \" \",\n    tsv: \"\\t\",\n    pipes: \"|\",\n};\nclass Configuration {\n    constructor(configuration = {}) {\n        this.configuration = configuration;\n    }\n    get basePath() {\n        return this.configuration.basePath != null ? this.configuration.basePath : exports.BASE_PATH;\n    }\n    get fetchApi() {\n        return this.configuration.fetchApi || window.fetch.bind(window);\n    }\n    get middleware() {\n        return this.configuration.middleware || [];\n    }\n    get queryParamsStringify() {\n        return this.configuration.queryParamsStringify || querystring;\n    }\n    get username() {\n        return this.configuration.username;\n    }\n    get password() {\n        return this.configuration.password;\n    }\n    get apiKey() {\n        const apiKey = this.configuration.apiKey;\n        if (apiKey) {\n            return typeof apiKey === 'function' ? apiKey : () => apiKey;\n        }\n        return undefined;\n    }\n    get accessToken() {\n        const accessToken = this.configuration.accessToken;\n        if (accessToken) {\n            return typeof accessToken === 'function' ? accessToken : () => accessToken;\n        }\n        return undefined;\n    }\n    get headers() {\n        return this.configuration.headers;\n    }\n    get credentials() {\n        return this.configuration.credentials;\n    }\n}\nexports.Configuration = Configuration;\nfunction exists(json, key) {\n    const value = json[key];\n    return value !== null && value !== undefined;\n}\nexports.exists = exists;\nfunction querystring(params, prefix = '') {\n    return Object.keys(params)\n        .map((key) => {\n        const fullKey = prefix + (prefix.length ? `[${key}]` : key);\n        const value = params[key];\n        if (value instanceof Array) {\n            const multiValue = value.map(singleValue => encodeURIComponent(String(singleValue)))\n                .join(`&${encodeURIComponent(fullKey)}=`);\n            return `${encodeURIComponent(fullKey)}=${multiValue}`;\n        }\n        if (value instanceof Object) {\n            return querystring(value, fullKey);\n        }\n        return `${encodeURIComponent(fullKey)}=${encodeURIComponent(String(value))}`;\n    })\n        .filter(part => part.length > 0)\n        .join('&');\n}\nexports.querystring = querystring;\nfunction mapValues(data, fn) {\n    return Object.keys(data).reduce((acc, key) => (Object.assign(Object.assign({}, acc), { [key]: fn(data[key]) })), {});\n}\nexports.mapValues = mapValues;\nfunction canConsumeForm(consumes) {\n    for (const consume of consumes) {\n        if ('multipart/form-data' === consume.contentType) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.canConsumeForm = canConsumeForm;\nclass JSONApiResponse {\n    constructor(raw, transformer = (jsonValue) => jsonValue) {\n        this.raw = raw;\n        this.transformer = transformer;\n    }\n    async value() {\n        return this.transformer(await this.raw.json());\n    }\n}\nexports.JSONApiResponse = JSONApiResponse;\nclass VoidApiResponse {\n    constructor(raw) {\n        this.raw = raw;\n    }\n    async value() {\n        return undefined;\n    }\n}\nexports.VoidApiResponse = VoidApiResponse;\nclass BlobApiResponse {\n    constructor(raw) {\n        this.raw = raw;\n    }\n    async value() {\n        return await this.raw.blob();\n    }\n    ;\n}\nexports.BlobApiResponse = BlobApiResponse;\nclass TextApiResponse {\n    constructor(raw) {\n        this.raw = raw;\n    }\n    async value() {\n        return await this.raw.text();\n    }\n    ;\n}\nexports.TextApiResponse = TextApiResponse;\n//# sourceMappingURL=runtime.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.c32ToB58 = exports.b58ToC32 = exports.c32addressDecode = exports.c32address = exports.versions = void 0;\nvar checksum_1 = require(\"./checksum\");\nvar base58check = require(\"./base58check\");\nexports.versions = {\n    mainnet: {\n        p2pkh: 22,\n        p2sh: 20 // 'M'\n    },\n    testnet: {\n        p2pkh: 26,\n        p2sh: 21 // 'N'\n    }\n};\n// address conversion : bitcoin to stacks\nvar ADDR_BITCOIN_TO_STACKS = {};\nADDR_BITCOIN_TO_STACKS[0] = exports.versions.mainnet.p2pkh;\nADDR_BITCOIN_TO_STACKS[5] = exports.versions.mainnet.p2sh;\nADDR_BITCOIN_TO_STACKS[111] = exports.versions.testnet.p2pkh;\nADDR_BITCOIN_TO_STACKS[196] = exports.versions.testnet.p2sh;\n// address conversion : stacks to bitcoin \nvar ADDR_STACKS_TO_BITCOIN = {};\nADDR_STACKS_TO_BITCOIN[exports.versions.mainnet.p2pkh] = 0;\nADDR_STACKS_TO_BITCOIN[exports.versions.mainnet.p2sh] = 5;\nADDR_STACKS_TO_BITCOIN[exports.versions.testnet.p2pkh] = 111;\nADDR_STACKS_TO_BITCOIN[exports.versions.testnet.p2sh] = 196;\n/**\n * Make a c32check address with the given version and hash160\n * The only difference between a c32check string and c32 address\n * is that the letter 'S' is pre-pended.\n * @param {number} version - the address version number\n * @param {string} hash160hex - the hash160 to encode (must be a hash160)\n * @returns {string} the address\n */\nfunction c32address(version, hash160hex) {\n    if (!hash160hex.match(/^[0-9a-fA-F]{40}$/)) {\n        throw new Error('Invalid argument: not a hash160 hex string');\n    }\n    var c32string = checksum_1.c32checkEncode(version, hash160hex);\n    return \"S\" + c32string;\n}\nexports.c32address = c32address;\n/**\n * Decode a c32 address into its version and hash160\n * @param {string} c32addr - the c32check-encoded address\n * @returns {[number, string]} a tuple with the version and hash160\n */\nfunction c32addressDecode(c32addr) {\n    if (c32addr.length <= 5) {\n        throw new Error('Invalid c32 address: invalid length');\n    }\n    return checksum_1.c32checkDecode(c32addr.slice(1));\n}\nexports.c32addressDecode = c32addressDecode;\n/*\n * Convert a base58check address to a c32check address.\n * Try to convert the version number if one is not given.\n * @param {string} b58check - the base58check encoded address\n * @param {number} version - the version number, if not inferred from the address\n * @returns {string} the c32 address with the given version number (or the\n *   semantically-equivalent c32 version number, if not given)\n */\nfunction b58ToC32(b58check, version) {\n    if (version === void 0) { version = -1; }\n    var addrInfo = base58check.decode(b58check);\n    var hash160String = addrInfo.data.toString('hex');\n    var addrVersion = parseInt(addrInfo.prefix.toString('hex'), 16);\n    var stacksVersion;\n    if (version < 0) {\n        stacksVersion = addrVersion;\n        if (ADDR_BITCOIN_TO_STACKS[addrVersion] !== undefined) {\n            stacksVersion = ADDR_BITCOIN_TO_STACKS[addrVersion];\n        }\n    }\n    else {\n        stacksVersion = version;\n    }\n    return c32address(stacksVersion, hash160String);\n}\nexports.b58ToC32 = b58ToC32;\n/*\n * Convert a c32check address to a base58check address.\n * @param {string} c32string - the c32check address\n * @param {number} version - the version number, if not inferred from the address\n * @returns {string} the base58 address with the given version number (or the\n *    semantically-equivalent bitcoin version number, if not given)\n */\nfunction c32ToB58(c32string, version) {\n    if (version === void 0) { version = -1; }\n    var addrInfo = c32addressDecode(c32string);\n    var stacksVersion = addrInfo[0];\n    var hash160String = addrInfo[1];\n    var bitcoinVersion;\n    if (version < 0) {\n        bitcoinVersion = stacksVersion;\n        if (ADDR_STACKS_TO_BITCOIN[stacksVersion] !== undefined) {\n            bitcoinVersion = ADDR_STACKS_TO_BITCOIN[stacksVersion];\n        }\n    }\n    else {\n        bitcoinVersion = version;\n    }\n    var prefix = bitcoinVersion.toString(16);\n    if (prefix.length === 1) {\n        prefix = \"0\" + prefix;\n    }\n    return base58check.encode(hash160String, prefix);\n}\nexports.c32ToB58 = c32ToB58;\n","/*\n * From https://github.com/wzbg/base58check\n * @Author: zyc\n * @Date:   2016-09-11 23:36:05\n */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decode = exports.encode = void 0;\nvar buffer_1 = require(\"buffer/\");\nvar cross_sha256_1 = require(\"cross-sha256\");\nvar basex = require(\"base-x\");\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\nfunction encode(data, prefix, encoding) {\n    if (prefix === void 0) { prefix = '00'; }\n    if (encoding === void 0) { encoding = 'hex'; }\n    if (typeof data === 'string') {\n        data = new buffer_1.Buffer(data, encoding);\n    }\n    if (!(data instanceof buffer_1.Buffer)) {\n        throw new TypeError('\"data\" argument must be an Array of Buffers');\n    }\n    if (!(prefix instanceof buffer_1.Buffer)) {\n        prefix = new buffer_1.Buffer(prefix, encoding);\n    }\n    var hash = buffer_1.Buffer.concat([prefix, data]);\n    hash = cross_sha256_1.hashSha256(hash);\n    hash = cross_sha256_1.hashSha256(hash);\n    hash = buffer_1.Buffer.concat([prefix, data, hash.slice(0, 4)]);\n    return basex(ALPHABET).encode(hash);\n}\nexports.encode = encode;\nfunction decode(string, encoding) {\n    var buffer = new buffer_1.Buffer(basex(ALPHABET).decode(string));\n    var prefix = buffer.slice(0, 1);\n    var data = buffer.slice(1, -4);\n    var hash = buffer_1.Buffer.concat([prefix, data]);\n    hash = cross_sha256_1.hashSha256(hash);\n    hash = cross_sha256_1.hashSha256(hash);\n    buffer.slice(-4).forEach(function (check, index) {\n        if (check !== hash[index]) {\n            throw new Error('Invalid checksum');\n        }\n    });\n    if (encoding) {\n        prefix = prefix.toString(encoding);\n        data = data.toString(encoding);\n    }\n    return { prefix: prefix, data: data };\n}\nexports.decode = decode;\n","import { SmartBuffer, SmartBufferOptions } from 'smart-buffer';\n\nfunction createEnumChecker<T extends string, TEnumValue extends number>(\n  enumVariable: { [key in T]: TEnumValue }\n): (value: number) => value is TEnumValue {\n  // Create a set of valid enum number values.\n  const enumValues = Object.values<number>(enumVariable).filter(v => typeof v === 'number');\n  const enumValueSet = new Set<number>(enumValues);\n  return (value: number): value is TEnumValue => enumValueSet.has(value);\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nconst enumCheckFunctions = new Map<object, (value: number) => boolean>();\n\n/**\n * Type guard to check if a given value is a valid enum value.\n * @param enumVariable - Literal `enum` type.\n * @param value - A value to check against the enum's values.\n * @example\n * ```ts\n * enum Color {\n *   Purple = 3,\n *   Orange = 5\n * }\n * const val: number = 3;\n * if (isEnum(Color, val)) {\n *   // `val` is known as enum type `Color`, e.g.:\n *   const colorVal: Color = val;\n * }\n * ```\n */\nexport function isEnum<T extends string, TEnumValue extends number>(\n  enumVariable: { [key in T]: TEnumValue },\n  value: number\n): value is TEnumValue {\n  const checker = enumCheckFunctions.get(enumVariable);\n  if (checker !== undefined) {\n    return checker(value);\n  }\n  const newChecker = createEnumChecker(enumVariable);\n  enumCheckFunctions.set(enumVariable, newChecker);\n  return isEnum(enumVariable, value);\n}\n\nexport class BufferReader {\n  smartBuffer: SmartBuffer;\n\n  static fromBuffer(buffer: Buffer): BufferReader {\n    return new BufferReader({ buff: buffer });\n  }\n\n  constructor(options?: SmartBufferOptions | Buffer) {\n    if (Buffer.isBuffer(options)) {\n      this.smartBuffer = new SmartBuffer({ buff: options });\n    } else {\n      this.smartBuffer = new SmartBuffer(options);\n    }\n  }\n\n  readBuffer(length: number): Buffer {\n    return this.smartBuffer.readBuffer(length);\n  }\n\n  readUInt32BE(offset?: number): number {\n    return this.smartBuffer.readUInt32BE(offset);\n  }\n\n  readUInt8(): number {\n    return this.smartBuffer.readUInt8();\n  }\n\n  readUInt16BE(): number {\n    return this.smartBuffer.readUInt16BE();\n  }\n\n  readBigUIntLE(length: number): bigint {\n    const buffer = Buffer.from(this.smartBuffer.readBuffer(length)).reverse();\n    const hex = buffer.toString();\n    const num = BigInt(`0x${hex}`);\n    return num;\n  }\n\n  readBigUIntBE(length: number): bigint {\n    const buffer = this.smartBuffer.readBuffer(length);\n    const hex = buffer.toString('hex');\n    const num = BigInt(`0x${hex}`);\n    return num;\n  }\n\n  readBigUInt64BE(): bigint {\n    return this.smartBuffer.readBigUInt64BE();\n  }\n\n  readString(arg?: number | BufferEncoding, encoding?: BufferEncoding): string {\n    return this.smartBuffer.readString(arg, encoding);\n  }\n\n  get readOffset(): number {\n    return this.smartBuffer.readOffset;\n  }\n\n  set readOffset(val: number) {\n    this.smartBuffer.readOffset = val;\n  }\n\n  get internalBuffer(): Buffer {\n    return this.smartBuffer.internalBuffer;\n  }\n\n  readUInt8Enum<T extends string, TEnumValue extends number>(\n    enumVariable: { [key in T]: TEnumValue },\n    invalidEnumErrorFormatter: (val: number) => Error\n  ): TEnumValue {\n    const num = this.smartBuffer.readUInt8();\n    if (isEnum(enumVariable, num)) {\n      return num;\n    } else {\n      throw invalidEnumErrorFormatter(num);\n    }\n  }\n}\n","import { ClarityType, ClarityValue } from '../clarityValue';\n\ntype ResponseCV = ResponseErrorCV | ResponseOkCV;\n\ninterface ResponseErrorCV {\n  readonly type: ClarityType.ResponseErr;\n  readonly value: ClarityValue;\n}\n\ninterface ResponseOkCV {\n  readonly type: ClarityType.ResponseOk;\n  readonly value: ClarityValue;\n}\n\nfunction responseErrorCV(value: ClarityValue): ResponseErrorCV {\n  return { type: ClarityType.ResponseErr, value };\n}\n\nfunction responseOkCV(value: ClarityValue): ResponseOkCV {\n  return { type: ClarityType.ResponseOk, value };\n}\n\nexport { ResponseCV, ResponseErrorCV, ResponseOkCV, responseErrorCV, responseOkCV };\n","import { ClarityValue, ClarityType } from '../clarityValue';\n\ninterface ListCV {\n  type: ClarityType.List;\n  list: ClarityValue[];\n}\n\nfunction listCV<T extends ClarityValue>(values: T[]): ListCV {\n  return { type: ClarityType.List, list: values };\n}\n\nexport { ListCV, listCV };\n","import { ClarityType, ClarityValue } from '../clarityValue';\nimport { isClarityName } from '../../utils';\n\ntype TupleData = { [key: string]: ClarityValue };\n\ninterface TupleCV {\n  type: ClarityType.Tuple;\n  data: TupleData;\n}\n\nfunction tupleCV(data: TupleData): TupleCV {\n  for (const key in data) {\n    if (!isClarityName(key)) {\n      throw new Error(`\"${key}\" is not a valid Clarity name`);\n    }\n  }\n\n  return { type: ClarityType.Tuple, data };\n}\n\nexport { TupleCV, tupleCV };\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./generated\"), exports);\n__exportStar(require(\"./ws\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./runtime\"), exports);\n__exportStar(require(\"./apis\"), exports);\n__exportStar(require(\"./models\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./AccountsApi\"), exports);\n__exportStar(require(\"./BlocksApi\"), exports);\n__exportStar(require(\"./BurnchainApi\"), exports);\n__exportStar(require(\"./FaucetsApi\"), exports);\n__exportStar(require(\"./FeesApi\"), exports);\n__exportStar(require(\"./InfoApi\"), exports);\n__exportStar(require(\"./RosettaApi\"), exports);\n__exportStar(require(\"./SearchApi\"), exports);\n__exportStar(require(\"./SmartContractsApi\"), exports);\n__exportStar(require(\"./TransactionsApi\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AccountsApi = void 0;\nconst runtime = require(\"../runtime\");\nconst models_1 = require(\"../models\");\n/**\n *\n */\nclass AccountsApi extends runtime.BaseAPI {\n    /**\n     * Get account assets\n     */\n    async getAccountAssetsRaw(requestParameters) {\n        if (requestParameters.principal === null || requestParameters.principal === undefined) {\n            throw new runtime.RequiredError('principal', 'Required parameter requestParameters.principal was null or undefined when calling getAccountAssets.');\n        }\n        const queryParameters = {};\n        if (requestParameters.limit !== undefined) {\n            queryParameters['limit'] = requestParameters.limit;\n        }\n        if (requestParameters.offset !== undefined) {\n            queryParameters['offset'] = requestParameters.offset;\n        }\n        const headerParameters = {};\n        const response = await this.request({\n            path: `/extended/v1/address/{principal}/assets`.replace(`{${\"principal\"}}`, encodeURIComponent(String(requestParameters.principal))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n        return new runtime.JSONApiResponse(response, (jsonValue) => models_1.AddressAssetsListResponseFromJSON(jsonValue));\n    }\n    /**\n     * Get account assets\n     */\n    async getAccountAssets(requestParameters) {\n        const response = await this.getAccountAssetsRaw(requestParameters);\n        return await response.value();\n    }\n    /**\n     * Get account balances\n     */\n    async getAccountBalanceRaw(requestParameters) {\n        if (requestParameters.principal === null || requestParameters.principal === undefined) {\n            throw new runtime.RequiredError('principal', 'Required parameter requestParameters.principal was null or undefined when calling getAccountBalance.');\n        }\n        const queryParameters = {};\n        const headerParameters = {};\n        const response = await this.request({\n            path: `/extended/v1/address/{principal}/balances`.replace(`{${\"principal\"}}`, encodeURIComponent(String(requestParameters.principal))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n        return new runtime.JSONApiResponse(response, (jsonValue) => models_1.AddressBalanceResponseFromJSON(jsonValue));\n    }\n    /**\n     * Get account balances\n     */\n    async getAccountBalance(requestParameters) {\n        const response = await this.getAccountBalanceRaw(requestParameters);\n        return await response.value();\n    }\n    /**\n     * Get the account data for the provided principal  Where balance is the hex encoding of a unsigned 128-bit integer (big-endian), nonce is a unsigned 64-bit integer, and the proofs are provided as hex strings.  For non-existent accounts, this does not 404, rather it returns an object with balance and nonce of 0.\n     * Get account info\n     */\n    async getAccountInfoRaw(requestParameters) {\n        if (requestParameters.principal === null || requestParameters.principal === undefined) {\n            throw new runtime.RequiredError('principal', 'Required parameter requestParameters.principal was null or undefined when calling getAccountInfo.');\n        }\n        const queryParameters = {};\n        if (requestParameters.proof !== undefined) {\n            queryParameters['proof'] = requestParameters.proof;\n        }\n        if (requestParameters.tip !== undefined) {\n            queryParameters['tip'] = requestParameters.tip;\n        }\n        const headerParameters = {};\n        const response = await this.request({\n            path: `/v2/accounts/{principal}`.replace(`{${\"principal\"}}`, encodeURIComponent(String(requestParameters.principal))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n        return new runtime.JSONApiResponse(response, (jsonValue) => models_1.AccountDataResponseFromJSON(jsonValue));\n    }\n    /**\n     * Get the account data for the provided principal  Where balance is the hex encoding of a unsigned 128-bit integer (big-endian), nonce is a unsigned 64-bit integer, and the proofs are provided as hex strings.  For non-existent accounts, this does not 404, rather it returns an object with balance and nonce of 0.\n     * Get account info\n     */\n    async getAccountInfo(requestParameters) {\n        const response = await this.getAccountInfoRaw(requestParameters);\n        return await response.value();\n    }\n    /**\n     * Get account STX balance\n     */\n    async getAccountStxBalanceRaw(requestParameters) {\n        if (requestParameters.principal === null || requestParameters.principal === undefined) {\n            throw new runtime.RequiredError('principal', 'Required parameter requestParameters.principal was null or undefined when calling getAccountStxBalance.');\n        }\n        const queryParameters = {};\n        const headerParameters = {};\n        const response = await this.request({\n            path: `/extended/v1/address/{principal}/stx`.replace(`{${\"principal\"}}`, encodeURIComponent(String(requestParameters.principal))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n        return new runtime.JSONApiResponse(response, (jsonValue) => models_1.AddressStxBalanceResponseFromJSON(jsonValue));\n    }\n    /**\n     * Get account STX balance\n     */\n    async getAccountStxBalance(requestParameters) {\n        const response = await this.getAccountStxBalanceRaw(requestParameters);\n        return await response.value();\n    }\n    /**\n     * Get account transactions\n     */\n    async getAccountTransactionsRaw(requestParameters) {\n        if (requestParameters.principal === null || requestParameters.principal === undefined) {\n            throw new runtime.RequiredError('principal', 'Required parameter requestParameters.principal was null or undefined when calling getAccountTransactions.');\n        }\n        const queryParameters = {};\n        if (requestParameters.limit !== undefined) {\n            queryParameters['limit'] = requestParameters.limit;\n        }\n        if (requestParameters.offset !== undefined) {\n            queryParameters['offset'] = requestParameters.offset;\n        }\n        const headerParameters = {};\n        const response = await this.request({\n            path: `/extended/v1/address/{principal}/transactions`.replace(`{${\"principal\"}}`, encodeURIComponent(String(requestParameters.principal))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n        return new runtime.JSONApiResponse(response, (jsonValue) => models_1.AddressTransactionsListResponseFromJSON(jsonValue));\n    }\n    /**\n     * Get account transactions\n     */\n    async getAccountTransactions(requestParameters) {\n        const response = await this.getAccountTransactionsRaw(requestParameters);\n        return await response.value();\n    }\n}\nexports.AccountsApi = AccountsApi;\n//# sourceMappingURL=AccountsApi.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AccountDataResponseToJSON = exports.AccountDataResponseFromJSONTyped = exports.AccountDataResponseFromJSON = void 0;\nfunction AccountDataResponseFromJSON(json) {\n    return AccountDataResponseFromJSONTyped(json, false);\n}\nexports.AccountDataResponseFromJSON = AccountDataResponseFromJSON;\nfunction AccountDataResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'balance': json['balance'],\n        'locked': json['locked'],\n        'unlock_height': json['unlock_height'],\n        'nonce': json['nonce'],\n        'balance_proof': json['balance_proof'],\n        'nonce_proof': json['nonce_proof'],\n    };\n}\nexports.AccountDataResponseFromJSONTyped = AccountDataResponseFromJSONTyped;\nfunction AccountDataResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'balance': value.balance,\n        'locked': value.locked,\n        'unlock_height': value.unlock_height,\n        'nonce': value.nonce,\n        'balance_proof': value.balance_proof,\n        'nonce_proof': value.nonce_proof,\n    };\n}\nexports.AccountDataResponseToJSON = AccountDataResponseToJSON;\n//# sourceMappingURL=AccountDataResponse.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AddressAssetsListResponseToJSON = exports.AddressAssetsListResponseFromJSONTyped = exports.AddressAssetsListResponseFromJSON = void 0;\nfunction AddressAssetsListResponseFromJSON(json) {\n    return AddressAssetsListResponseFromJSONTyped(json, false);\n}\nexports.AddressAssetsListResponseFromJSON = AddressAssetsListResponseFromJSON;\nfunction AddressAssetsListResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'limit': json['limit'],\n        'offset': json['offset'],\n        'total': json['total'],\n        'results': json['results'],\n    };\n}\nexports.AddressAssetsListResponseFromJSONTyped = AddressAssetsListResponseFromJSONTyped;\nfunction AddressAssetsListResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'limit': value.limit,\n        'offset': value.offset,\n        'total': value.total,\n        'results': value.results,\n    };\n}\nexports.AddressAssetsListResponseToJSON = AddressAssetsListResponseToJSON;\n//# sourceMappingURL=AddressAssetsListResponse.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AddressBalanceResponseToJSON = exports.AddressBalanceResponseFromJSONTyped = exports.AddressBalanceResponseFromJSON = void 0;\nconst _1 = require(\"./\");\nfunction AddressBalanceResponseFromJSON(json) {\n    return AddressBalanceResponseFromJSONTyped(json, false);\n}\nexports.AddressBalanceResponseFromJSON = AddressBalanceResponseFromJSON;\nfunction AddressBalanceResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'stx': _1.AddressBalanceResponseStxFromJSON(json['stx']),\n        'fungible_tokens': json['fungible_tokens'],\n        'non_fungible_tokens': json['non_fungible_tokens'],\n    };\n}\nexports.AddressBalanceResponseFromJSONTyped = AddressBalanceResponseFromJSONTyped;\nfunction AddressBalanceResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'stx': _1.AddressBalanceResponseStxToJSON(value.stx),\n        'fungible_tokens': value.fungible_tokens,\n        'non_fungible_tokens': value.non_fungible_tokens,\n    };\n}\nexports.AddressBalanceResponseToJSON = AddressBalanceResponseToJSON;\n//# sourceMappingURL=AddressBalanceResponse.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AddressBalanceResponseStxToJSON = exports.AddressBalanceResponseStxFromJSONTyped = exports.AddressBalanceResponseStxFromJSON = void 0;\nfunction AddressBalanceResponseStxFromJSON(json) {\n    return AddressBalanceResponseStxFromJSONTyped(json, false);\n}\nexports.AddressBalanceResponseStxFromJSON = AddressBalanceResponseStxFromJSON;\nfunction AddressBalanceResponseStxFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'balance': json['balance'],\n        'total_sent': json['total_sent'],\n        'total_received': json['total_received'],\n        'total_fees_sent': json['total_fees_sent'],\n        'total_miner_rewards_received': json['total_miner_rewards_received'],\n        'lock_tx_id': json['lock_tx_id'],\n        'locked': json['locked'],\n        'lock_height': json['lock_height'],\n        'burnchain_lock_height': json['burnchain_lock_height'],\n        'burnchain_unlock_height': json['burnchain_unlock_height'],\n    };\n}\nexports.AddressBalanceResponseStxFromJSONTyped = AddressBalanceResponseStxFromJSONTyped;\nfunction AddressBalanceResponseStxToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'balance': value.balance,\n        'total_sent': value.total_sent,\n        'total_received': value.total_received,\n        'total_fees_sent': value.total_fees_sent,\n        'total_miner_rewards_received': value.total_miner_rewards_received,\n        'lock_tx_id': value.lock_tx_id,\n        'locked': value.locked,\n        'lock_height': value.lock_height,\n        'burnchain_lock_height': value.burnchain_lock_height,\n        'burnchain_unlock_height': value.burnchain_unlock_height,\n    };\n}\nexports.AddressBalanceResponseStxToJSON = AddressBalanceResponseStxToJSON;\n//# sourceMappingURL=AddressBalanceResponseStx.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AddressStxBalanceResponseToJSON = exports.AddressStxBalanceResponseFromJSONTyped = exports.AddressStxBalanceResponseFromJSON = void 0;\nfunction AddressStxBalanceResponseFromJSON(json) {\n    return AddressStxBalanceResponseFromJSONTyped(json, false);\n}\nexports.AddressStxBalanceResponseFromJSON = AddressStxBalanceResponseFromJSON;\nfunction AddressStxBalanceResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'balance': json['balance'],\n        'total_sent': json['total_sent'],\n        'total_received': json['total_received'],\n        'total_fees_sent': json['total_fees_sent'],\n        'total_miner_rewards_received': json['total_miner_rewards_received'],\n        'lock_tx_id': json['lock_tx_id'],\n        'locked': json['locked'],\n        'lock_height': json['lock_height'],\n        'burnchain_lock_height': json['burnchain_lock_height'],\n        'burnchain_unlock_height': json['burnchain_unlock_height'],\n    };\n}\nexports.AddressStxBalanceResponseFromJSONTyped = AddressStxBalanceResponseFromJSONTyped;\nfunction AddressStxBalanceResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'balance': value.balance,\n        'total_sent': value.total_sent,\n        'total_received': value.total_received,\n        'total_fees_sent': value.total_fees_sent,\n        'total_miner_rewards_received': value.total_miner_rewards_received,\n        'lock_tx_id': value.lock_tx_id,\n        'locked': value.locked,\n        'lock_height': value.lock_height,\n        'burnchain_lock_height': value.burnchain_lock_height,\n        'burnchain_unlock_height': value.burnchain_unlock_height,\n    };\n}\nexports.AddressStxBalanceResponseToJSON = AddressStxBalanceResponseToJSON;\n//# sourceMappingURL=AddressStxBalanceResponse.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AddressTransactionsListResponseToJSON = exports.AddressTransactionsListResponseFromJSONTyped = exports.AddressTransactionsListResponseFromJSON = void 0;\nfunction AddressTransactionsListResponseFromJSON(json) {\n    return AddressTransactionsListResponseFromJSONTyped(json, false);\n}\nexports.AddressTransactionsListResponseFromJSON = AddressTransactionsListResponseFromJSON;\nfunction AddressTransactionsListResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'limit': json['limit'],\n        'offset': json['offset'],\n        'total': json['total'],\n        'results': json['results'],\n    };\n}\nexports.AddressTransactionsListResponseFromJSONTyped = AddressTransactionsListResponseFromJSONTyped;\nfunction AddressTransactionsListResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'limit': value.limit,\n        'offset': value.offset,\n        'total': value.total,\n        'results': value.results,\n    };\n}\nexports.AddressTransactionsListResponseToJSON = AddressTransactionsListResponseToJSON;\n//# sourceMappingURL=AddressTransactionsListResponse.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BlockToJSON = exports.BlockFromJSONTyped = exports.BlockFromJSON = void 0;\nfunction BlockFromJSON(json) {\n    return BlockFromJSONTyped(json, false);\n}\nexports.BlockFromJSON = BlockFromJSON;\nfunction BlockFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'canonical': json['canonical'],\n        'height': json['height'],\n        'hash': json['hash'],\n        'parent_block_hash': json['parent_block_hash'],\n        'burn_block_time': json['burn_block_time'],\n        'burn_block_time_iso': json['burn_block_time_iso'],\n        'burn_block_hash': json['burn_block_hash'],\n        'burn_block_height': json['burn_block_height'],\n        'miner_txid': json['miner_txid'],\n        'txs': json['txs'],\n    };\n}\nexports.BlockFromJSONTyped = BlockFromJSONTyped;\nfunction BlockToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'canonical': value.canonical,\n        'height': value.height,\n        'hash': value.hash,\n        'parent_block_hash': value.parent_block_hash,\n        'burn_block_time': value.burn_block_time,\n        'burn_block_time_iso': value.burn_block_time_iso,\n        'burn_block_hash': value.burn_block_hash,\n        'burn_block_height': value.burn_block_height,\n        'miner_txid': value.miner_txid,\n        'txs': value.txs,\n    };\n}\nexports.BlockToJSON = BlockToJSON;\n//# sourceMappingURL=Block.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BlockListResponseToJSON = exports.BlockListResponseFromJSONTyped = exports.BlockListResponseFromJSON = void 0;\nconst _1 = require(\"./\");\nfunction BlockListResponseFromJSON(json) {\n    return BlockListResponseFromJSONTyped(json, false);\n}\nexports.BlockListResponseFromJSON = BlockListResponseFromJSON;\nfunction BlockListResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'limit': json['limit'],\n        'offset': json['offset'],\n        'total': json['total'],\n        'results': (json['results'].map(_1.BlockFromJSON)),\n    };\n}\nexports.BlockListResponseFromJSONTyped = BlockListResponseFromJSONTyped;\nfunction BlockListResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'limit': value.limit,\n        'offset': value.offset,\n        'total': value.total,\n        'results': (value.results.map(_1.BlockToJSON)),\n    };\n}\nexports.BlockListResponseToJSON = BlockListResponseToJSON;\n//# sourceMappingURL=BlockListResponse.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BurnchainRewardToJSON = exports.BurnchainRewardFromJSONTyped = exports.BurnchainRewardFromJSON = void 0;\nfunction BurnchainRewardFromJSON(json) {\n    return BurnchainRewardFromJSONTyped(json, false);\n}\nexports.BurnchainRewardFromJSON = BurnchainRewardFromJSON;\nfunction BurnchainRewardFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'canonical': json['canonical'],\n        'burn_block_hash': json['burn_block_hash'],\n        'burn_block_height': json['burn_block_height'],\n        'burn_amount': json['burn_amount'],\n        'reward_recipient': json['reward_recipient'],\n        'reward_amount': json['reward_amount'],\n        'reward_index': json['reward_index'],\n    };\n}\nexports.BurnchainRewardFromJSONTyped = BurnchainRewardFromJSONTyped;\nfunction BurnchainRewardToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'canonical': value.canonical,\n        'burn_block_hash': value.burn_block_hash,\n        'burn_block_height': value.burn_block_height,\n        'burn_amount': value.burn_amount,\n        'reward_recipient': value.reward_recipient,\n        'reward_amount': value.reward_amount,\n        'reward_index': value.reward_index,\n    };\n}\nexports.BurnchainRewardToJSON = BurnchainRewardToJSON;\n//# sourceMappingURL=BurnchainReward.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BurnchainRewardListResponseToJSON = exports.BurnchainRewardListResponseFromJSONTyped = exports.BurnchainRewardListResponseFromJSON = void 0;\nconst _1 = require(\"./\");\nfunction BurnchainRewardListResponseFromJSON(json) {\n    return BurnchainRewardListResponseFromJSONTyped(json, false);\n}\nexports.BurnchainRewardListResponseFromJSON = BurnchainRewardListResponseFromJSON;\nfunction BurnchainRewardListResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'limit': json['limit'],\n        'offset': json['offset'],\n        'results': (json['results'].map(_1.BurnchainRewardFromJSON)),\n    };\n}\nexports.BurnchainRewardListResponseFromJSONTyped = BurnchainRewardListResponseFromJSONTyped;\nfunction BurnchainRewardListResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'limit': value.limit,\n        'offset': value.offset,\n        'results': (value.results.map(_1.BurnchainRewardToJSON)),\n    };\n}\nexports.BurnchainRewardListResponseToJSON = BurnchainRewardListResponseToJSON;\n//# sourceMappingURL=BurnchainRewardListResponse.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BurnchainRewardsTotalToJSON = exports.BurnchainRewardsTotalFromJSONTyped = exports.BurnchainRewardsTotalFromJSON = void 0;\nfunction BurnchainRewardsTotalFromJSON(json) {\n    return BurnchainRewardsTotalFromJSONTyped(json, false);\n}\nexports.BurnchainRewardsTotalFromJSON = BurnchainRewardsTotalFromJSON;\nfunction BurnchainRewardsTotalFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'reward_recipient': json['reward_recipient'],\n        'reward_amount': json['reward_amount'],\n    };\n}\nexports.BurnchainRewardsTotalFromJSONTyped = BurnchainRewardsTotalFromJSONTyped;\nfunction BurnchainRewardsTotalToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'reward_recipient': value.reward_recipient,\n        'reward_amount': value.reward_amount,\n    };\n}\nexports.BurnchainRewardsTotalToJSON = BurnchainRewardsTotalToJSON;\n//# sourceMappingURL=BurnchainRewardsTotal.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ContractInterfaceResponseToJSON = exports.ContractInterfaceResponseFromJSONTyped = exports.ContractInterfaceResponseFromJSON = void 0;\nfunction ContractInterfaceResponseFromJSON(json) {\n    return ContractInterfaceResponseFromJSONTyped(json, false);\n}\nexports.ContractInterfaceResponseFromJSON = ContractInterfaceResponseFromJSON;\nfunction ContractInterfaceResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'functions': json['functions'],\n        'variables': json['variables'],\n        'maps': json['maps'],\n        'fungible_tokens': json['fungible_tokens'],\n        'non_fungible_tokens': json['non_fungible_tokens'],\n    };\n}\nexports.ContractInterfaceResponseFromJSONTyped = ContractInterfaceResponseFromJSONTyped;\nfunction ContractInterfaceResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'functions': value.functions,\n        'variables': value.variables,\n        'maps': value.maps,\n        'fungible_tokens': value.fungible_tokens,\n        'non_fungible_tokens': value.non_fungible_tokens,\n    };\n}\nexports.ContractInterfaceResponseToJSON = ContractInterfaceResponseToJSON;\n//# sourceMappingURL=ContractInterfaceResponse.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ContractSourceResponseToJSON = exports.ContractSourceResponseFromJSONTyped = exports.ContractSourceResponseFromJSON = void 0;\nfunction ContractSourceResponseFromJSON(json) {\n    return ContractSourceResponseFromJSONTyped(json, false);\n}\nexports.ContractSourceResponseFromJSON = ContractSourceResponseFromJSON;\nfunction ContractSourceResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'source': json['source'],\n        'publish_height': json['publish_height'],\n        'proof': json['proof'],\n    };\n}\nexports.ContractSourceResponseFromJSONTyped = ContractSourceResponseFromJSONTyped;\nfunction ContractSourceResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'source': value.source,\n        'publish_height': value.publish_height,\n        'proof': value.proof,\n    };\n}\nexports.ContractSourceResponseToJSON = ContractSourceResponseToJSON;\n//# sourceMappingURL=ContractSourceResponse.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CoreNodeInfoResponseToJSON = exports.CoreNodeInfoResponseFromJSONTyped = exports.CoreNodeInfoResponseFromJSON = void 0;\nfunction CoreNodeInfoResponseFromJSON(json) {\n    return CoreNodeInfoResponseFromJSONTyped(json, false);\n}\nexports.CoreNodeInfoResponseFromJSON = CoreNodeInfoResponseFromJSON;\nfunction CoreNodeInfoResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'peer_version': json['peer_version'],\n        'pox_consensus': json['pox_consensus'],\n        'burn_block_height': json['burn_block_height'],\n        'stable_pox_consensus': json['stable_pox_consensus'],\n        'stable_burn_block_height': json['stable_burn_block_height'],\n        'server_version': json['server_version'],\n        'network_id': json['network_id'],\n        'parent_network_id': json['parent_network_id'],\n        'stacks_tip_height': json['stacks_tip_height'],\n        'stacks_tip': json['stacks_tip'],\n        'stacks_tip_consensus_hash': json['stacks_tip_consensus_hash'],\n        'unanchored_tip': json['unanchored_tip'],\n        'exit_at_block_height': json['exit_at_block_height'],\n    };\n}\nexports.CoreNodeInfoResponseFromJSONTyped = CoreNodeInfoResponseFromJSONTyped;\nfunction CoreNodeInfoResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'peer_version': value.peer_version,\n        'pox_consensus': value.pox_consensus,\n        'burn_block_height': value.burn_block_height,\n        'stable_pox_consensus': value.stable_pox_consensus,\n        'stable_burn_block_height': value.stable_burn_block_height,\n        'server_version': value.server_version,\n        'network_id': value.network_id,\n        'parent_network_id': value.parent_network_id,\n        'stacks_tip_height': value.stacks_tip_height,\n        'stacks_tip': value.stacks_tip,\n        'stacks_tip_consensus_hash': value.stacks_tip_consensus_hash,\n        'unanchored_tip': value.unanchored_tip,\n        'exit_at_block_height': value.exit_at_block_height,\n    };\n}\nexports.CoreNodeInfoResponseToJSON = CoreNodeInfoResponseToJSON;\n//# sourceMappingURL=CoreNodeInfoResponse.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CoreNodePoxResponseToJSON = exports.CoreNodePoxResponseFromJSONTyped = exports.CoreNodePoxResponseFromJSON = void 0;\nfunction CoreNodePoxResponseFromJSON(json) {\n    return CoreNodePoxResponseFromJSONTyped(json, false);\n}\nexports.CoreNodePoxResponseFromJSON = CoreNodePoxResponseFromJSON;\nfunction CoreNodePoxResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'contract_id': json['contract_id'],\n        'first_burnchain_block_height': json['first_burnchain_block_height'],\n        'min_amount_ustx': json['min_amount_ustx'],\n        'registration_window_length': json['registration_window_length'],\n        'rejection_fraction': json['rejection_fraction'],\n        'reward_cycle_id': json['reward_cycle_id'],\n        'reward_cycle_length': json['reward_cycle_length'],\n        'rejection_votes_left_required': json['rejection_votes_left_required'],\n        'total_liquid_supply_ustx': json['total_liquid_supply_ustx'],\n    };\n}\nexports.CoreNodePoxResponseFromJSONTyped = CoreNodePoxResponseFromJSONTyped;\nfunction CoreNodePoxResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'contract_id': value.contract_id,\n        'first_burnchain_block_height': value.first_burnchain_block_height,\n        'min_amount_ustx': value.min_amount_ustx,\n        'registration_window_length': value.registration_window_length,\n        'rejection_fraction': value.rejection_fraction,\n        'reward_cycle_id': value.reward_cycle_id,\n        'reward_cycle_length': value.reward_cycle_length,\n        'rejection_votes_left_required': value.rejection_votes_left_required,\n        'total_liquid_supply_ustx': value.total_liquid_supply_ustx,\n    };\n}\nexports.CoreNodePoxResponseToJSON = CoreNodePoxResponseToJSON;\n//# sourceMappingURL=CoreNodePoxResponse.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MapEntryResponseToJSON = exports.MapEntryResponseFromJSONTyped = exports.MapEntryResponseFromJSON = void 0;\nconst runtime_1 = require(\"../runtime\");\nfunction MapEntryResponseFromJSON(json) {\n    return MapEntryResponseFromJSONTyped(json, false);\n}\nexports.MapEntryResponseFromJSON = MapEntryResponseFromJSON;\nfunction MapEntryResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'data': json['data'],\n        'proof': !runtime_1.exists(json, 'proof') ? undefined : json['proof'],\n    };\n}\nexports.MapEntryResponseFromJSONTyped = MapEntryResponseFromJSONTyped;\nfunction MapEntryResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'data': value.data,\n        'proof': value.proof,\n    };\n}\nexports.MapEntryResponseToJSON = MapEntryResponseToJSON;\n//# sourceMappingURL=MapEntryResponse.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MempoolTransactionListResponseToJSON = exports.MempoolTransactionListResponseFromJSONTyped = exports.MempoolTransactionListResponseFromJSON = void 0;\nfunction MempoolTransactionListResponseFromJSON(json) {\n    return MempoolTransactionListResponseFromJSONTyped(json, false);\n}\nexports.MempoolTransactionListResponseFromJSON = MempoolTransactionListResponseFromJSON;\nfunction MempoolTransactionListResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'limit': json['limit'],\n        'offset': json['offset'],\n        'total': json['total'],\n        'results': json['results'],\n    };\n}\nexports.MempoolTransactionListResponseFromJSONTyped = MempoolTransactionListResponseFromJSONTyped;\nfunction MempoolTransactionListResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'limit': value.limit,\n        'offset': value.offset,\n        'total': value.total,\n        'results': value.results,\n    };\n}\nexports.MempoolTransactionListResponseToJSON = MempoolTransactionListResponseToJSON;\n//# sourceMappingURL=MempoolTransactionListResponse.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NetworkBlockTimeResponseToJSON = exports.NetworkBlockTimeResponseFromJSONTyped = exports.NetworkBlockTimeResponseFromJSON = void 0;\nfunction NetworkBlockTimeResponseFromJSON(json) {\n    return NetworkBlockTimeResponseFromJSONTyped(json, false);\n}\nexports.NetworkBlockTimeResponseFromJSON = NetworkBlockTimeResponseFromJSON;\nfunction NetworkBlockTimeResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'target_block_time': json['target_block_time'],\n    };\n}\nexports.NetworkBlockTimeResponseFromJSONTyped = NetworkBlockTimeResponseFromJSONTyped;\nfunction NetworkBlockTimeResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'target_block_time': value.target_block_time,\n    };\n}\nexports.NetworkBlockTimeResponseToJSON = NetworkBlockTimeResponseToJSON;\n//# sourceMappingURL=NetworkBlockTimeResponse.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NetworkBlockTimesResponseToJSON = exports.NetworkBlockTimesResponseFromJSONTyped = exports.NetworkBlockTimesResponseFromJSON = void 0;\nconst _1 = require(\"./\");\nfunction NetworkBlockTimesResponseFromJSON(json) {\n    return NetworkBlockTimesResponseFromJSONTyped(json, false);\n}\nexports.NetworkBlockTimesResponseFromJSON = NetworkBlockTimesResponseFromJSON;\nfunction NetworkBlockTimesResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'mainnet': _1.NetworkBlockTimesResponseMainnetFromJSON(json['mainnet']),\n        'testnet': _1.NetworkBlockTimesResponseMainnetFromJSON(json['testnet']),\n    };\n}\nexports.NetworkBlockTimesResponseFromJSONTyped = NetworkBlockTimesResponseFromJSONTyped;\nfunction NetworkBlockTimesResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'mainnet': _1.NetworkBlockTimesResponseMainnetToJSON(value.mainnet),\n        'testnet': _1.NetworkBlockTimesResponseMainnetToJSON(value.testnet),\n    };\n}\nexports.NetworkBlockTimesResponseToJSON = NetworkBlockTimesResponseToJSON;\n//# sourceMappingURL=NetworkBlockTimesResponse.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NetworkBlockTimesResponseMainnetToJSON = exports.NetworkBlockTimesResponseMainnetFromJSONTyped = exports.NetworkBlockTimesResponseMainnetFromJSON = void 0;\nfunction NetworkBlockTimesResponseMainnetFromJSON(json) {\n    return NetworkBlockTimesResponseMainnetFromJSONTyped(json, false);\n}\nexports.NetworkBlockTimesResponseMainnetFromJSON = NetworkBlockTimesResponseMainnetFromJSON;\nfunction NetworkBlockTimesResponseMainnetFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'target_block_time': json['target_block_time'],\n    };\n}\nexports.NetworkBlockTimesResponseMainnetFromJSONTyped = NetworkBlockTimesResponseMainnetFromJSONTyped;\nfunction NetworkBlockTimesResponseMainnetToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'target_block_time': value.target_block_time,\n    };\n}\nexports.NetworkBlockTimesResponseMainnetToJSON = NetworkBlockTimesResponseMainnetToJSON;\n//# sourceMappingURL=NetworkBlockTimesResponseMainnet.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NetworkIdentifierToJSON = exports.NetworkIdentifierFromJSONTyped = exports.NetworkIdentifierFromJSON = void 0;\nconst runtime_1 = require(\"../runtime\");\nconst _1 = require(\"./\");\nfunction NetworkIdentifierFromJSON(json) {\n    return NetworkIdentifierFromJSONTyped(json, false);\n}\nexports.NetworkIdentifierFromJSON = NetworkIdentifierFromJSON;\nfunction NetworkIdentifierFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'blockchain': json['blockchain'],\n        'network': json['network'],\n        'sub_network_identifier': !runtime_1.exists(json, 'sub_network_identifier') ? undefined : _1.RosettaNetworkListResponseSubNetworkIdentifierFromJSON(json['sub_network_identifier']),\n    };\n}\nexports.NetworkIdentifierFromJSONTyped = NetworkIdentifierFromJSONTyped;\nfunction NetworkIdentifierToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'blockchain': value.blockchain,\n        'network': value.network,\n        'sub_network_identifier': _1.RosettaNetworkListResponseSubNetworkIdentifierToJSON(value.sub_network_identifier),\n    };\n}\nexports.NetworkIdentifierToJSON = NetworkIdentifierToJSON;\n//# sourceMappingURL=NetworkIdentifier.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OtherTransactionIdentifierToJSON = exports.OtherTransactionIdentifierFromJSONTyped = exports.OtherTransactionIdentifierFromJSON = void 0;\nfunction OtherTransactionIdentifierFromJSON(json) {\n    return OtherTransactionIdentifierFromJSONTyped(json, false);\n}\nexports.OtherTransactionIdentifierFromJSON = OtherTransactionIdentifierFromJSON;\nfunction OtherTransactionIdentifierFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'hash': json['hash'],\n    };\n}\nexports.OtherTransactionIdentifierFromJSONTyped = OtherTransactionIdentifierFromJSONTyped;\nfunction OtherTransactionIdentifierToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'hash': value.hash,\n    };\n}\nexports.OtherTransactionIdentifierToJSON = OtherTransactionIdentifierToJSON;\n//# sourceMappingURL=OtherTransactionIdentifier.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PostCoreNodeTransactionsErrorToJSON = exports.PostCoreNodeTransactionsErrorFromJSONTyped = exports.PostCoreNodeTransactionsErrorFromJSON = void 0;\nfunction PostCoreNodeTransactionsErrorFromJSON(json) {\n    return PostCoreNodeTransactionsErrorFromJSONTyped(json, false);\n}\nexports.PostCoreNodeTransactionsErrorFromJSON = PostCoreNodeTransactionsErrorFromJSON;\nfunction PostCoreNodeTransactionsErrorFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'error': json['error'],\n        'reason': json['reason'],\n        'reason_data': json['reason_data'],\n        'txid': json['txid'],\n    };\n}\nexports.PostCoreNodeTransactionsErrorFromJSONTyped = PostCoreNodeTransactionsErrorFromJSONTyped;\nfunction PostCoreNodeTransactionsErrorToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'error': value.error,\n        'reason': value.reason,\n        'reason_data': value.reason_data,\n        'txid': value.txid,\n    };\n}\nexports.PostCoreNodeTransactionsErrorToJSON = PostCoreNodeTransactionsErrorToJSON;\n//# sourceMappingURL=PostCoreNodeTransactionsError.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ReadOnlyFunctionArgsToJSON = exports.ReadOnlyFunctionArgsFromJSONTyped = exports.ReadOnlyFunctionArgsFromJSON = void 0;\nfunction ReadOnlyFunctionArgsFromJSON(json) {\n    return ReadOnlyFunctionArgsFromJSONTyped(json, false);\n}\nexports.ReadOnlyFunctionArgsFromJSON = ReadOnlyFunctionArgsFromJSON;\nfunction ReadOnlyFunctionArgsFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'sender': json['sender'],\n        'arguments': json['arguments'],\n    };\n}\nexports.ReadOnlyFunctionArgsFromJSONTyped = ReadOnlyFunctionArgsFromJSONTyped;\nfunction ReadOnlyFunctionArgsToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'sender': value.sender,\n        'arguments': value.arguments,\n    };\n}\nexports.ReadOnlyFunctionArgsToJSON = ReadOnlyFunctionArgsToJSON;\n//# sourceMappingURL=ReadOnlyFunctionArgs.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ReadOnlyFunctionSuccessResponseToJSON = exports.ReadOnlyFunctionSuccessResponseFromJSONTyped = exports.ReadOnlyFunctionSuccessResponseFromJSON = void 0;\nconst runtime_1 = require(\"../runtime\");\nfunction ReadOnlyFunctionSuccessResponseFromJSON(json) {\n    return ReadOnlyFunctionSuccessResponseFromJSONTyped(json, false);\n}\nexports.ReadOnlyFunctionSuccessResponseFromJSON = ReadOnlyFunctionSuccessResponseFromJSON;\nfunction ReadOnlyFunctionSuccessResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'okay': json['okay'],\n        'result': !runtime_1.exists(json, 'result') ? undefined : json['result'],\n        'cause': !runtime_1.exists(json, 'cause') ? undefined : json['cause'],\n    };\n}\nexports.ReadOnlyFunctionSuccessResponseFromJSONTyped = ReadOnlyFunctionSuccessResponseFromJSONTyped;\nfunction ReadOnlyFunctionSuccessResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'okay': value.okay,\n        'result': value.result,\n        'cause': value.cause,\n    };\n}\nexports.ReadOnlyFunctionSuccessResponseToJSON = ReadOnlyFunctionSuccessResponseToJSON;\n//# sourceMappingURL=ReadOnlyFunctionSuccessResponse.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RosettaAccountToJSON = exports.RosettaAccountFromJSONTyped = exports.RosettaAccountFromJSON = void 0;\nconst runtime_1 = require(\"../runtime\");\nconst _1 = require(\"./\");\nfunction RosettaAccountFromJSON(json) {\n    return RosettaAccountFromJSONTyped(json, false);\n}\nexports.RosettaAccountFromJSON = RosettaAccountFromJSON;\nfunction RosettaAccountFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'address': json['address'],\n        'sub_account': !runtime_1.exists(json, 'sub_account') ? undefined : _1.RosettaSubAccountFromJSON(json['sub_account']),\n        'metadata': !runtime_1.exists(json, 'metadata') ? undefined : json['metadata'],\n    };\n}\nexports.RosettaAccountFromJSONTyped = RosettaAccountFromJSONTyped;\nfunction RosettaAccountToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'address': value.address,\n        'sub_account': _1.RosettaSubAccountToJSON(value.sub_account),\n        'metadata': value.metadata,\n    };\n}\nexports.RosettaAccountToJSON = RosettaAccountToJSON;\n//# sourceMappingURL=RosettaAccount.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RosettaAccountBalanceRequestToJSON = exports.RosettaAccountBalanceRequestFromJSONTyped = exports.RosettaAccountBalanceRequestFromJSON = void 0;\nconst runtime_1 = require(\"../runtime\");\nconst _1 = require(\"./\");\nfunction RosettaAccountBalanceRequestFromJSON(json) {\n    return RosettaAccountBalanceRequestFromJSONTyped(json, false);\n}\nexports.RosettaAccountBalanceRequestFromJSON = RosettaAccountBalanceRequestFromJSON;\nfunction RosettaAccountBalanceRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'network_identifier': _1.NetworkIdentifierFromJSON(json['network_identifier']),\n        'account_identifier': _1.RosettaAccountFromJSON(json['account_identifier']),\n        'block_identifier': !runtime_1.exists(json, 'block_identifier') ? undefined : json['block_identifier'],\n    };\n}\nexports.RosettaAccountBalanceRequestFromJSONTyped = RosettaAccountBalanceRequestFromJSONTyped;\nfunction RosettaAccountBalanceRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'network_identifier': _1.NetworkIdentifierToJSON(value.network_identifier),\n        'account_identifier': _1.RosettaAccountToJSON(value.account_identifier),\n        'block_identifier': value.block_identifier,\n    };\n}\nexports.RosettaAccountBalanceRequestToJSON = RosettaAccountBalanceRequestToJSON;\n//# sourceMappingURL=RosettaAccountBalanceRequest.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RosettaAccountBalanceResponseToJSON = exports.RosettaAccountBalanceResponseFromJSONTyped = exports.RosettaAccountBalanceResponseFromJSON = void 0;\nconst runtime_1 = require(\"../runtime\");\nconst _1 = require(\"./\");\nfunction RosettaAccountBalanceResponseFromJSON(json) {\n    return RosettaAccountBalanceResponseFromJSONTyped(json, false);\n}\nexports.RosettaAccountBalanceResponseFromJSON = RosettaAccountBalanceResponseFromJSON;\nfunction RosettaAccountBalanceResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'block_identifier': json['block_identifier'],\n        'balances': (json['balances'].map(_1.RosettaAmountFromJSON)),\n        'coins': !runtime_1.exists(json, 'coins') ? undefined : (json['coins'].map(_1.RosettaCoinFromJSON)),\n        'metadata': !runtime_1.exists(json, 'metadata') ? undefined : _1.RosettaAccountBalanceResponseMetadataFromJSON(json['metadata']),\n    };\n}\nexports.RosettaAccountBalanceResponseFromJSONTyped = RosettaAccountBalanceResponseFromJSONTyped;\nfunction RosettaAccountBalanceResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'block_identifier': value.block_identifier,\n        'balances': (value.balances.map(_1.RosettaAmountToJSON)),\n        'coins': value.coins === undefined ? undefined : (value.coins.map(_1.RosettaCoinToJSON)),\n        'metadata': _1.RosettaAccountBalanceResponseMetadataToJSON(value.metadata),\n    };\n}\nexports.RosettaAccountBalanceResponseToJSON = RosettaAccountBalanceResponseToJSON;\n//# sourceMappingURL=RosettaAccountBalanceResponse.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RosettaAccountBalanceResponseCoinIdentifierToJSON = exports.RosettaAccountBalanceResponseCoinIdentifierFromJSONTyped = exports.RosettaAccountBalanceResponseCoinIdentifierFromJSON = void 0;\nfunction RosettaAccountBalanceResponseCoinIdentifierFromJSON(json) {\n    return RosettaAccountBalanceResponseCoinIdentifierFromJSONTyped(json, false);\n}\nexports.RosettaAccountBalanceResponseCoinIdentifierFromJSON = RosettaAccountBalanceResponseCoinIdentifierFromJSON;\nfunction RosettaAccountBalanceResponseCoinIdentifierFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'identifier': json['identifier'],\n    };\n}\nexports.RosettaAccountBalanceResponseCoinIdentifierFromJSONTyped = RosettaAccountBalanceResponseCoinIdentifierFromJSONTyped;\nfunction RosettaAccountBalanceResponseCoinIdentifierToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'identifier': value.identifier,\n    };\n}\nexports.RosettaAccountBalanceResponseCoinIdentifierToJSON = RosettaAccountBalanceResponseCoinIdentifierToJSON;\n//# sourceMappingURL=RosettaAccountBalanceResponseCoinIdentifier.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RosettaAccountBalanceResponseMetadataToJSON = exports.RosettaAccountBalanceResponseMetadataFromJSONTyped = exports.RosettaAccountBalanceResponseMetadataFromJSON = void 0;\nfunction RosettaAccountBalanceResponseMetadataFromJSON(json) {\n    return RosettaAccountBalanceResponseMetadataFromJSONTyped(json, false);\n}\nexports.RosettaAccountBalanceResponseMetadataFromJSON = RosettaAccountBalanceResponseMetadataFromJSON;\nfunction RosettaAccountBalanceResponseMetadataFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'sequence_number': json['sequence_number'],\n    };\n}\nexports.RosettaAccountBalanceResponseMetadataFromJSONTyped = RosettaAccountBalanceResponseMetadataFromJSONTyped;\nfunction RosettaAccountBalanceResponseMetadataToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'sequence_number': value.sequence_number,\n    };\n}\nexports.RosettaAccountBalanceResponseMetadataToJSON = RosettaAccountBalanceResponseMetadataToJSON;\n//# sourceMappingURL=RosettaAccountBalanceResponseMetadata.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RosettaAccountIdentifierToJSON = exports.RosettaAccountIdentifierFromJSONTyped = exports.RosettaAccountIdentifierFromJSON = void 0;\nconst runtime_1 = require(\"../runtime\");\nconst _1 = require(\"./\");\nfunction RosettaAccountIdentifierFromJSON(json) {\n    return RosettaAccountIdentifierFromJSONTyped(json, false);\n}\nexports.RosettaAccountIdentifierFromJSON = RosettaAccountIdentifierFromJSON;\nfunction RosettaAccountIdentifierFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'address': json['address'],\n        'sub_account': !runtime_1.exists(json, 'sub_account') ? undefined : _1.RosettaSubAccountFromJSON(json['sub_account']),\n        'metadata': !runtime_1.exists(json, 'metadata') ? undefined : json['metadata'],\n    };\n}\nexports.RosettaAccountIdentifierFromJSONTyped = RosettaAccountIdentifierFromJSONTyped;\nfunction RosettaAccountIdentifierToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'address': value.address,\n        'sub_account': _1.RosettaSubAccountToJSON(value.sub_account),\n        'metadata': value.metadata,\n    };\n}\nexports.RosettaAccountIdentifierToJSON = RosettaAccountIdentifierToJSON;\n//# sourceMappingURL=RosettaAccountIdentifier.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RosettaAmountToJSON = exports.RosettaAmountFromJSONTyped = exports.RosettaAmountFromJSON = void 0;\nconst runtime_1 = require(\"../runtime\");\nconst _1 = require(\"./\");\nfunction RosettaAmountFromJSON(json) {\n    return RosettaAmountFromJSONTyped(json, false);\n}\nexports.RosettaAmountFromJSON = RosettaAmountFromJSON;\nfunction RosettaAmountFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'value': json['value'],\n        'currency': _1.RosettaCurrencyFromJSON(json['currency']),\n        'metadata': !runtime_1.exists(json, 'metadata') ? undefined : json['metadata'],\n    };\n}\nexports.RosettaAmountFromJSONTyped = RosettaAmountFromJSONTyped;\nfunction RosettaAmountToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'value': value.value,\n        'currency': _1.RosettaCurrencyToJSON(value.currency),\n        'metadata': value.metadata,\n    };\n}\nexports.RosettaAmountToJSON = RosettaAmountToJSON;\n//# sourceMappingURL=RosettaAmount.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RosettaBlockToJSON = exports.RosettaBlockFromJSONTyped = exports.RosettaBlockFromJSON = void 0;\nconst runtime_1 = require(\"../runtime\");\nconst _1 = require(\"./\");\nfunction RosettaBlockFromJSON(json) {\n    return RosettaBlockFromJSONTyped(json, false);\n}\nexports.RosettaBlockFromJSON = RosettaBlockFromJSON;\nfunction RosettaBlockFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'block_identifier': json['block_identifier'],\n        'parent_block_identifier': _1.RosettaParentBlockIdentifierFromJSON(json['parent_block_identifier']),\n        'timestamp': json['timestamp'],\n        'transactions': (json['transactions'].map(_1.RosettaTransactionFromJSON)),\n        'metadata': !runtime_1.exists(json, 'metadata') ? undefined : _1.RosettaBlockMetadata2FromJSON(json['metadata']),\n    };\n}\nexports.RosettaBlockFromJSONTyped = RosettaBlockFromJSONTyped;\nfunction RosettaBlockToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'block_identifier': value.block_identifier,\n        'parent_block_identifier': _1.RosettaParentBlockIdentifierToJSON(value.parent_block_identifier),\n        'timestamp': value.timestamp,\n        'transactions': (value.transactions.map(_1.RosettaTransactionToJSON)),\n        'metadata': _1.RosettaBlockMetadata2ToJSON(value.metadata),\n    };\n}\nexports.RosettaBlockToJSON = RosettaBlockToJSON;\n//# sourceMappingURL=RosettaBlock.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RosettaBlockMetadataToJSON = exports.RosettaBlockMetadataFromJSONTyped = exports.RosettaBlockMetadataFromJSON = void 0;\nfunction RosettaBlockMetadataFromJSON(json) {\n    return RosettaBlockMetadataFromJSONTyped(json, false);\n}\nexports.RosettaBlockMetadataFromJSON = RosettaBlockMetadataFromJSON;\nfunction RosettaBlockMetadataFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'asm': json['asm'],\n        'hex': json['hex'],\n    };\n}\nexports.RosettaBlockMetadataFromJSONTyped = RosettaBlockMetadataFromJSONTyped;\nfunction RosettaBlockMetadataToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'asm': value.asm,\n        'hex': value.hex,\n    };\n}\nexports.RosettaBlockMetadataToJSON = RosettaBlockMetadataToJSON;\n//# sourceMappingURL=RosettaBlockMetadata.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RosettaBlockMetadata1ToJSON = exports.RosettaBlockMetadata1FromJSONTyped = exports.RosettaBlockMetadata1FromJSON = void 0;\nfunction RosettaBlockMetadata1FromJSON(json) {\n    return RosettaBlockMetadata1FromJSONTyped(json, false);\n}\nexports.RosettaBlockMetadata1FromJSON = RosettaBlockMetadata1FromJSON;\nfunction RosettaBlockMetadata1FromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'size': json['size'],\n        'lockTime': json['lockTime'],\n    };\n}\nexports.RosettaBlockMetadata1FromJSONTyped = RosettaBlockMetadata1FromJSONTyped;\nfunction RosettaBlockMetadata1ToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'size': value.size,\n        'lockTime': value.lockTime,\n    };\n}\nexports.RosettaBlockMetadata1ToJSON = RosettaBlockMetadata1ToJSON;\n//# sourceMappingURL=RosettaBlockMetadata1.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RosettaBlockMetadata2ToJSON = exports.RosettaBlockMetadata2FromJSONTyped = exports.RosettaBlockMetadata2FromJSON = void 0;\nfunction RosettaBlockMetadata2FromJSON(json) {\n    return RosettaBlockMetadata2FromJSONTyped(json, false);\n}\nexports.RosettaBlockMetadata2FromJSON = RosettaBlockMetadata2FromJSON;\nfunction RosettaBlockMetadata2FromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'transactions_root': json['transactions_root'],\n        'difficulty': json['difficulty'],\n    };\n}\nexports.RosettaBlockMetadata2FromJSONTyped = RosettaBlockMetadata2FromJSONTyped;\nfunction RosettaBlockMetadata2ToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'transactions_root': value.transactions_root,\n        'difficulty': value.difficulty,\n    };\n}\nexports.RosettaBlockMetadata2ToJSON = RosettaBlockMetadata2ToJSON;\n//# sourceMappingURL=RosettaBlockMetadata2.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RosettaBlockRequestToJSON = exports.RosettaBlockRequestFromJSONTyped = exports.RosettaBlockRequestFromJSON = void 0;\nconst runtime_1 = require(\"../runtime\");\nconst _1 = require(\"./\");\nfunction RosettaBlockRequestFromJSON(json) {\n    return RosettaBlockRequestFromJSONTyped(json, false);\n}\nexports.RosettaBlockRequestFromJSON = RosettaBlockRequestFromJSON;\nfunction RosettaBlockRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'network_identifier': _1.NetworkIdentifierFromJSON(json['network_identifier']),\n        'block_identifier': !runtime_1.exists(json, 'block_identifier') ? undefined : json['block_identifier'],\n    };\n}\nexports.RosettaBlockRequestFromJSONTyped = RosettaBlockRequestFromJSONTyped;\nfunction RosettaBlockRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'network_identifier': _1.NetworkIdentifierToJSON(value.network_identifier),\n        'block_identifier': value.block_identifier,\n    };\n}\nexports.RosettaBlockRequestToJSON = RosettaBlockRequestToJSON;\n//# sourceMappingURL=RosettaBlockRequest.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RosettaBlockResponseToJSON = exports.RosettaBlockResponseFromJSONTyped = exports.RosettaBlockResponseFromJSON = void 0;\nconst runtime_1 = require(\"../runtime\");\nconst _1 = require(\"./\");\nfunction RosettaBlockResponseFromJSON(json) {\n    return RosettaBlockResponseFromJSONTyped(json, false);\n}\nexports.RosettaBlockResponseFromJSON = RosettaBlockResponseFromJSON;\nfunction RosettaBlockResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'block': !runtime_1.exists(json, 'block') ? undefined : _1.RosettaBlockFromJSON(json['block']),\n        'other_transactions': !runtime_1.exists(json, 'other_transactions') ? undefined : (json['other_transactions'].map(_1.OtherTransactionIdentifierFromJSON)),\n    };\n}\nexports.RosettaBlockResponseFromJSONTyped = RosettaBlockResponseFromJSONTyped;\nfunction RosettaBlockResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'block': _1.RosettaBlockToJSON(value.block),\n        'other_transactions': value.other_transactions === undefined ? undefined : (value.other_transactions.map(_1.OtherTransactionIdentifierToJSON)),\n    };\n}\nexports.RosettaBlockResponseToJSON = RosettaBlockResponseToJSON;\n//# sourceMappingURL=RosettaBlockResponse.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RosettaBlockTransactionRequestToJSON = exports.RosettaBlockTransactionRequestFromJSONTyped = exports.RosettaBlockTransactionRequestFromJSON = void 0;\nconst _1 = require(\"./\");\nfunction RosettaBlockTransactionRequestFromJSON(json) {\n    return RosettaBlockTransactionRequestFromJSONTyped(json, false);\n}\nexports.RosettaBlockTransactionRequestFromJSON = RosettaBlockTransactionRequestFromJSON;\nfunction RosettaBlockTransactionRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'network_identifier': _1.NetworkIdentifierFromJSON(json['network_identifier']),\n        'block_identifier': json['block_identifier'],\n        'transaction_identifier': _1.TransactionIdentifierFromJSON(json['transaction_identifier']),\n    };\n}\nexports.RosettaBlockTransactionRequestFromJSONTyped = RosettaBlockTransactionRequestFromJSONTyped;\nfunction RosettaBlockTransactionRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'network_identifier': _1.NetworkIdentifierToJSON(value.network_identifier),\n        'block_identifier': value.block_identifier,\n        'transaction_identifier': _1.TransactionIdentifierToJSON(value.transaction_identifier),\n    };\n}\nexports.RosettaBlockTransactionRequestToJSON = RosettaBlockTransactionRequestToJSON;\n//# sourceMappingURL=RosettaBlockTransactionRequest.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RosettaBlockTransactionResponseToJSON = exports.RosettaBlockTransactionResponseFromJSONTyped = exports.RosettaBlockTransactionResponseFromJSON = void 0;\nconst _1 = require(\"./\");\nfunction RosettaBlockTransactionResponseFromJSON(json) {\n    return RosettaBlockTransactionResponseFromJSONTyped(json, false);\n}\nexports.RosettaBlockTransactionResponseFromJSON = RosettaBlockTransactionResponseFromJSON;\nfunction RosettaBlockTransactionResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'transaction': _1.RosettaTransactionFromJSON(json['transaction']),\n    };\n}\nexports.RosettaBlockTransactionResponseFromJSONTyped = RosettaBlockTransactionResponseFromJSONTyped;\nfunction RosettaBlockTransactionResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'transaction': _1.RosettaTransactionToJSON(value.transaction),\n    };\n}\nexports.RosettaBlockTransactionResponseToJSON = RosettaBlockTransactionResponseToJSON;\n//# sourceMappingURL=RosettaBlockTransactionResponse.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RosettaCoinToJSON = exports.RosettaCoinFromJSONTyped = exports.RosettaCoinFromJSON = void 0;\nconst _1 = require(\"./\");\nfunction RosettaCoinFromJSON(json) {\n    return RosettaCoinFromJSONTyped(json, false);\n}\nexports.RosettaCoinFromJSON = RosettaCoinFromJSON;\nfunction RosettaCoinFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'coin_identifier': _1.RosettaAccountBalanceResponseCoinIdentifierFromJSON(json['coin_identifier']),\n        'amount': _1.RosettaAmountFromJSON(json['amount']),\n    };\n}\nexports.RosettaCoinFromJSONTyped = RosettaCoinFromJSONTyped;\nfunction RosettaCoinToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'coin_identifier': _1.RosettaAccountBalanceResponseCoinIdentifierToJSON(value.coin_identifier),\n        'amount': _1.RosettaAmountToJSON(value.amount),\n    };\n}\nexports.RosettaCoinToJSON = RosettaCoinToJSON;\n//# sourceMappingURL=RosettaCoin.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RosettaCoinChangeToJSON = exports.RosettaCoinChangeFromJSONTyped = exports.RosettaCoinChangeFromJSON = exports.RosettaCoinChangeCoinActionEnum = void 0;\nconst _1 = require(\"./\");\n/**\n* @export\n* @enum {string}\n*/\nvar RosettaCoinChangeCoinActionEnum;\n(function (RosettaCoinChangeCoinActionEnum) {\n    RosettaCoinChangeCoinActionEnum[\"created\"] = \"coin_created\";\n    RosettaCoinChangeCoinActionEnum[\"spent\"] = \"coin_spent\";\n})(RosettaCoinChangeCoinActionEnum = exports.RosettaCoinChangeCoinActionEnum || (exports.RosettaCoinChangeCoinActionEnum = {}));\nfunction RosettaCoinChangeFromJSON(json) {\n    return RosettaCoinChangeFromJSONTyped(json, false);\n}\nexports.RosettaCoinChangeFromJSON = RosettaCoinChangeFromJSON;\nfunction RosettaCoinChangeFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'coin_identifier': _1.RosettaAccountBalanceResponseCoinIdentifierFromJSON(json['coin_identifier']),\n        'coin_action': json['coin_action'],\n    };\n}\nexports.RosettaCoinChangeFromJSONTyped = RosettaCoinChangeFromJSONTyped;\nfunction RosettaCoinChangeToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'coin_identifier': _1.RosettaAccountBalanceResponseCoinIdentifierToJSON(value.coin_identifier),\n        'coin_action': value.coin_action,\n    };\n}\nexports.RosettaCoinChangeToJSON = RosettaCoinChangeToJSON;\n//# sourceMappingURL=RosettaCoinChange.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RosettaConstructionCombineRequestToJSON = exports.RosettaConstructionCombineRequestFromJSONTyped = exports.RosettaConstructionCombineRequestFromJSON = void 0;\nconst _1 = require(\"./\");\nfunction RosettaConstructionCombineRequestFromJSON(json) {\n    return RosettaConstructionCombineRequestFromJSONTyped(json, false);\n}\nexports.RosettaConstructionCombineRequestFromJSON = RosettaConstructionCombineRequestFromJSON;\nfunction RosettaConstructionCombineRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'network_identifier': _1.NetworkIdentifierFromJSON(json['network_identifier']),\n        'unsigned_transaction': json['unsigned_transaction'],\n        'signatures': (json['signatures'].map(_1.RosettaSignatureFromJSON)),\n    };\n}\nexports.RosettaConstructionCombineRequestFromJSONTyped = RosettaConstructionCombineRequestFromJSONTyped;\nfunction RosettaConstructionCombineRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'network_identifier': _1.NetworkIdentifierToJSON(value.network_identifier),\n        'unsigned_transaction': value.unsigned_transaction,\n        'signatures': (value.signatures.map(_1.RosettaSignatureToJSON)),\n    };\n}\nexports.RosettaConstructionCombineRequestToJSON = RosettaConstructionCombineRequestToJSON;\n//# sourceMappingURL=RosettaConstructionCombineRequest.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RosettaConstructionCombineResponseToJSON = exports.RosettaConstructionCombineResponseFromJSONTyped = exports.RosettaConstructionCombineResponseFromJSON = void 0;\nfunction RosettaConstructionCombineResponseFromJSON(json) {\n    return RosettaConstructionCombineResponseFromJSONTyped(json, false);\n}\nexports.RosettaConstructionCombineResponseFromJSON = RosettaConstructionCombineResponseFromJSON;\nfunction RosettaConstructionCombineResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'signed_transaction': json['signed_transaction'],\n    };\n}\nexports.RosettaConstructionCombineResponseFromJSONTyped = RosettaConstructionCombineResponseFromJSONTyped;\nfunction RosettaConstructionCombineResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'signed_transaction': value.signed_transaction,\n    };\n}\nexports.RosettaConstructionCombineResponseToJSON = RosettaConstructionCombineResponseToJSON;\n//# sourceMappingURL=RosettaConstructionCombineResponse.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RosettaConstructionDeriveRequestToJSON = exports.RosettaConstructionDeriveRequestFromJSONTyped = exports.RosettaConstructionDeriveRequestFromJSON = void 0;\nconst runtime_1 = require(\"../runtime\");\nconst _1 = require(\"./\");\nfunction RosettaConstructionDeriveRequestFromJSON(json) {\n    return RosettaConstructionDeriveRequestFromJSONTyped(json, false);\n}\nexports.RosettaConstructionDeriveRequestFromJSON = RosettaConstructionDeriveRequestFromJSON;\nfunction RosettaConstructionDeriveRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'network_identifier': _1.NetworkIdentifierFromJSON(json['network_identifier']),\n        'public_key': _1.RosettaPublicKeyFromJSON(json['public_key']),\n        'metadata': !runtime_1.exists(json, 'metadata') ? undefined : json['metadata'],\n    };\n}\nexports.RosettaConstructionDeriveRequestFromJSONTyped = RosettaConstructionDeriveRequestFromJSONTyped;\nfunction RosettaConstructionDeriveRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'network_identifier': _1.NetworkIdentifierToJSON(value.network_identifier),\n        'public_key': _1.RosettaPublicKeyToJSON(value.public_key),\n        'metadata': value.metadata,\n    };\n}\nexports.RosettaConstructionDeriveRequestToJSON = RosettaConstructionDeriveRequestToJSON;\n//# sourceMappingURL=RosettaConstructionDeriveRequest.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RosettaConstructionDeriveResponseToJSON = exports.RosettaConstructionDeriveResponseFromJSONTyped = exports.RosettaConstructionDeriveResponseFromJSON = void 0;\nconst runtime_1 = require(\"../runtime\");\nfunction RosettaConstructionDeriveResponseFromJSON(json) {\n    return RosettaConstructionDeriveResponseFromJSONTyped(json, false);\n}\nexports.RosettaConstructionDeriveResponseFromJSON = RosettaConstructionDeriveResponseFromJSON;\nfunction RosettaConstructionDeriveResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'address': json['address'],\n        'metadata': !runtime_1.exists(json, 'metadata') ? undefined : json['metadata'],\n    };\n}\nexports.RosettaConstructionDeriveResponseFromJSONTyped = RosettaConstructionDeriveResponseFromJSONTyped;\nfunction RosettaConstructionDeriveResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'address': value.address,\n        'metadata': value.metadata,\n    };\n}\nexports.RosettaConstructionDeriveResponseToJSON = RosettaConstructionDeriveResponseToJSON;\n//# sourceMappingURL=RosettaConstructionDeriveResponse.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RosettaConstructionHashRequestToJSON = exports.RosettaConstructionHashRequestFromJSONTyped = exports.RosettaConstructionHashRequestFromJSON = void 0;\nconst _1 = require(\"./\");\nfunction RosettaConstructionHashRequestFromJSON(json) {\n    return RosettaConstructionHashRequestFromJSONTyped(json, false);\n}\nexports.RosettaConstructionHashRequestFromJSON = RosettaConstructionHashRequestFromJSON;\nfunction RosettaConstructionHashRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'network_identifier': _1.NetworkIdentifierFromJSON(json['network_identifier']),\n        'signed_transaction': json['signed_transaction'],\n    };\n}\nexports.RosettaConstructionHashRequestFromJSONTyped = RosettaConstructionHashRequestFromJSONTyped;\nfunction RosettaConstructionHashRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'network_identifier': _1.NetworkIdentifierToJSON(value.network_identifier),\n        'signed_transaction': value.signed_transaction,\n    };\n}\nexports.RosettaConstructionHashRequestToJSON = RosettaConstructionHashRequestToJSON;\n//# sourceMappingURL=RosettaConstructionHashRequest.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RosettaConstructionHashResponseToJSON = exports.RosettaConstructionHashResponseFromJSONTyped = exports.RosettaConstructionHashResponseFromJSON = void 0;\nconst runtime_1 = require(\"../runtime\");\nconst _1 = require(\"./\");\nfunction RosettaConstructionHashResponseFromJSON(json) {\n    return RosettaConstructionHashResponseFromJSONTyped(json, false);\n}\nexports.RosettaConstructionHashResponseFromJSON = RosettaConstructionHashResponseFromJSON;\nfunction RosettaConstructionHashResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'transaction_identifier': _1.TransactionIdentifierFromJSON(json['transaction_identifier']),\n        'metadata': !runtime_1.exists(json, 'metadata') ? undefined : json['metadata'],\n    };\n}\nexports.RosettaConstructionHashResponseFromJSONTyped = RosettaConstructionHashResponseFromJSONTyped;\nfunction RosettaConstructionHashResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'transaction_identifier': _1.TransactionIdentifierToJSON(value.transaction_identifier),\n        'metadata': value.metadata,\n    };\n}\nexports.RosettaConstructionHashResponseToJSON = RosettaConstructionHashResponseToJSON;\n//# sourceMappingURL=RosettaConstructionHashResponse.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RosettaConstructionMetadataRequestToJSON = exports.RosettaConstructionMetadataRequestFromJSONTyped = exports.RosettaConstructionMetadataRequestFromJSON = void 0;\nconst runtime_1 = require(\"../runtime\");\nconst _1 = require(\"./\");\nfunction RosettaConstructionMetadataRequestFromJSON(json) {\n    return RosettaConstructionMetadataRequestFromJSONTyped(json, false);\n}\nexports.RosettaConstructionMetadataRequestFromJSON = RosettaConstructionMetadataRequestFromJSON;\nfunction RosettaConstructionMetadataRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'network_identifier': _1.NetworkIdentifierFromJSON(json['network_identifier']),\n        'options': _1.RosettaOptionsFromJSON(json['options']),\n        'public_keys': !runtime_1.exists(json, 'public_keys') ? undefined : (json['public_keys'].map(_1.RosettaPublicKeyFromJSON)),\n    };\n}\nexports.RosettaConstructionMetadataRequestFromJSONTyped = RosettaConstructionMetadataRequestFromJSONTyped;\nfunction RosettaConstructionMetadataRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'network_identifier': _1.NetworkIdentifierToJSON(value.network_identifier),\n        'options': _1.RosettaOptionsToJSON(value.options),\n        'public_keys': value.public_keys === undefined ? undefined : (value.public_keys.map(_1.RosettaPublicKeyToJSON)),\n    };\n}\nexports.RosettaConstructionMetadataRequestToJSON = RosettaConstructionMetadataRequestToJSON;\n//# sourceMappingURL=RosettaConstructionMetadataRequest.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RosettaConstructionMetadataResponseToJSON = exports.RosettaConstructionMetadataResponseFromJSONTyped = exports.RosettaConstructionMetadataResponseFromJSON = void 0;\nconst runtime_1 = require(\"../runtime\");\nconst _1 = require(\"./\");\nfunction RosettaConstructionMetadataResponseFromJSON(json) {\n    return RosettaConstructionMetadataResponseFromJSONTyped(json, false);\n}\nexports.RosettaConstructionMetadataResponseFromJSON = RosettaConstructionMetadataResponseFromJSON;\nfunction RosettaConstructionMetadataResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'metadata': _1.RosettaConstructionMetadataResponseMetadataFromJSON(json['metadata']),\n        'suggested_fee': !runtime_1.exists(json, 'suggested_fee') ? undefined : _1.RosettaAmountFromJSON(json['suggested_fee']),\n    };\n}\nexports.RosettaConstructionMetadataResponseFromJSONTyped = RosettaConstructionMetadataResponseFromJSONTyped;\nfunction RosettaConstructionMetadataResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'metadata': _1.RosettaConstructionMetadataResponseMetadataToJSON(value.metadata),\n        'suggested_fee': _1.RosettaAmountToJSON(value.suggested_fee),\n    };\n}\nexports.RosettaConstructionMetadataResponseToJSON = RosettaConstructionMetadataResponseToJSON;\n//# sourceMappingURL=RosettaConstructionMetadataResponse.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RosettaConstructionMetadataResponseMetadataToJSON = exports.RosettaConstructionMetadataResponseMetadataFromJSONTyped = exports.RosettaConstructionMetadataResponseMetadataFromJSON = void 0;\nconst runtime_1 = require(\"../runtime\");\nfunction RosettaConstructionMetadataResponseMetadataFromJSON(json) {\n    return RosettaConstructionMetadataResponseMetadataFromJSONTyped(json, false);\n}\nexports.RosettaConstructionMetadataResponseMetadataFromJSON = RosettaConstructionMetadataResponseMetadataFromJSON;\nfunction RosettaConstructionMetadataResponseMetadataFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'account_sequence': !runtime_1.exists(json, 'account_sequence') ? undefined : json['account_sequence'],\n        'recent_block_hash': !runtime_1.exists(json, 'recent_block_hash') ? undefined : json['recent_block_hash'],\n    };\n}\nexports.RosettaConstructionMetadataResponseMetadataFromJSONTyped = RosettaConstructionMetadataResponseMetadataFromJSONTyped;\nfunction RosettaConstructionMetadataResponseMetadataToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'account_sequence': value.account_sequence,\n        'recent_block_hash': value.recent_block_hash,\n    };\n}\nexports.RosettaConstructionMetadataResponseMetadataToJSON = RosettaConstructionMetadataResponseMetadataToJSON;\n//# sourceMappingURL=RosettaConstructionMetadataResponseMetadata.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RosettaConstructionParseRequestToJSON = exports.RosettaConstructionParseRequestFromJSONTyped = exports.RosettaConstructionParseRequestFromJSON = void 0;\nconst _1 = require(\"./\");\nfunction RosettaConstructionParseRequestFromJSON(json) {\n    return RosettaConstructionParseRequestFromJSONTyped(json, false);\n}\nexports.RosettaConstructionParseRequestFromJSON = RosettaConstructionParseRequestFromJSON;\nfunction RosettaConstructionParseRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'network_identifier': _1.NetworkIdentifierFromJSON(json['network_identifier']),\n        'signed': json['signed'],\n        'transaction': json['transaction'],\n    };\n}\nexports.RosettaConstructionParseRequestFromJSONTyped = RosettaConstructionParseRequestFromJSONTyped;\nfunction RosettaConstructionParseRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'network_identifier': _1.NetworkIdentifierToJSON(value.network_identifier),\n        'signed': value.signed,\n        'transaction': value.transaction,\n    };\n}\nexports.RosettaConstructionParseRequestToJSON = RosettaConstructionParseRequestToJSON;\n//# sourceMappingURL=RosettaConstructionParseRequest.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RosettaConstructionParseResponseToJSON = exports.RosettaConstructionParseResponseFromJSONTyped = exports.RosettaConstructionParseResponseFromJSON = void 0;\nconst runtime_1 = require(\"../runtime\");\nconst _1 = require(\"./\");\nfunction RosettaConstructionParseResponseFromJSON(json) {\n    return RosettaConstructionParseResponseFromJSONTyped(json, false);\n}\nexports.RosettaConstructionParseResponseFromJSON = RosettaConstructionParseResponseFromJSON;\nfunction RosettaConstructionParseResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'operations': (json['operations'].map(_1.RosettaOperationFromJSON)),\n        'signers': !runtime_1.exists(json, 'signers') ? undefined : json['signers'],\n        'account_identifier_signers': !runtime_1.exists(json, 'account_identifier_signers') ? undefined : (json['account_identifier_signers'].map(_1.RosettaAccountIdentifierFromJSON)),\n    };\n}\nexports.RosettaConstructionParseResponseFromJSONTyped = RosettaConstructionParseResponseFromJSONTyped;\nfunction RosettaConstructionParseResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'operations': (value.operations.map(_1.RosettaOperationToJSON)),\n        'signers': value.signers,\n        'account_identifier_signers': value.account_identifier_signers === undefined ? undefined : (value.account_identifier_signers.map(_1.RosettaAccountIdentifierToJSON)),\n    };\n}\nexports.RosettaConstructionParseResponseToJSON = RosettaConstructionParseResponseToJSON;\n//# sourceMappingURL=RosettaConstructionParseResponse.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RosettaConstructionPayloadResponseToJSON = exports.RosettaConstructionPayloadResponseFromJSONTyped = exports.RosettaConstructionPayloadResponseFromJSON = void 0;\nconst _1 = require(\"./\");\nfunction RosettaConstructionPayloadResponseFromJSON(json) {\n    return RosettaConstructionPayloadResponseFromJSONTyped(json, false);\n}\nexports.RosettaConstructionPayloadResponseFromJSON = RosettaConstructionPayloadResponseFromJSON;\nfunction RosettaConstructionPayloadResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'unsigned_transaction': json['unsigned_transaction'],\n        'payloads': (json['payloads'].map(_1.SigningPayloadFromJSON)),\n    };\n}\nexports.RosettaConstructionPayloadResponseFromJSONTyped = RosettaConstructionPayloadResponseFromJSONTyped;\nfunction RosettaConstructionPayloadResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'unsigned_transaction': value.unsigned_transaction,\n        'payloads': (value.payloads.map(_1.SigningPayloadToJSON)),\n    };\n}\nexports.RosettaConstructionPayloadResponseToJSON = RosettaConstructionPayloadResponseToJSON;\n//# sourceMappingURL=RosettaConstructionPayloadResponse.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RosettaConstructionPayloadsRequestToJSON = exports.RosettaConstructionPayloadsRequestFromJSONTyped = exports.RosettaConstructionPayloadsRequestFromJSON = void 0;\nconst runtime_1 = require(\"../runtime\");\nconst _1 = require(\"./\");\nfunction RosettaConstructionPayloadsRequestFromJSON(json) {\n    return RosettaConstructionPayloadsRequestFromJSONTyped(json, false);\n}\nexports.RosettaConstructionPayloadsRequestFromJSON = RosettaConstructionPayloadsRequestFromJSON;\nfunction RosettaConstructionPayloadsRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'network_identifier': _1.NetworkIdentifierFromJSON(json['network_identifier']),\n        'operations': (json['operations'].map(_1.RosettaOperationFromJSON)),\n        'public_keys': !runtime_1.exists(json, 'public_keys') ? undefined : (json['public_keys'].map(_1.RosettaPublicKeyFromJSON)),\n    };\n}\nexports.RosettaConstructionPayloadsRequestFromJSONTyped = RosettaConstructionPayloadsRequestFromJSONTyped;\nfunction RosettaConstructionPayloadsRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'network_identifier': _1.NetworkIdentifierToJSON(value.network_identifier),\n        'operations': (value.operations.map(_1.RosettaOperationToJSON)),\n        'public_keys': value.public_keys === undefined ? undefined : (value.public_keys.map(_1.RosettaPublicKeyToJSON)),\n    };\n}\nexports.RosettaConstructionPayloadsRequestToJSON = RosettaConstructionPayloadsRequestToJSON;\n//# sourceMappingURL=RosettaConstructionPayloadsRequest.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RosettaConstructionPreprocessRequestToJSON = exports.RosettaConstructionPreprocessRequestFromJSONTyped = exports.RosettaConstructionPreprocessRequestFromJSON = void 0;\nconst runtime_1 = require(\"../runtime\");\nconst _1 = require(\"./\");\nfunction RosettaConstructionPreprocessRequestFromJSON(json) {\n    return RosettaConstructionPreprocessRequestFromJSONTyped(json, false);\n}\nexports.RosettaConstructionPreprocessRequestFromJSON = RosettaConstructionPreprocessRequestFromJSON;\nfunction RosettaConstructionPreprocessRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'network_identifier': _1.NetworkIdentifierFromJSON(json['network_identifier']),\n        'operations': (json['operations'].map(_1.RosettaOperationFromJSON)),\n        'metadata': !runtime_1.exists(json, 'metadata') ? undefined : json['metadata'],\n        'max_fee': !runtime_1.exists(json, 'max_fee') ? undefined : (json['max_fee'].map(_1.RosettaMaxFeeAmountFromJSON)),\n        'suggested_fee_multiplier': !runtime_1.exists(json, 'suggested_fee_multiplier') ? undefined : json['suggested_fee_multiplier'],\n    };\n}\nexports.RosettaConstructionPreprocessRequestFromJSONTyped = RosettaConstructionPreprocessRequestFromJSONTyped;\nfunction RosettaConstructionPreprocessRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'network_identifier': _1.NetworkIdentifierToJSON(value.network_identifier),\n        'operations': (value.operations.map(_1.RosettaOperationToJSON)),\n        'metadata': value.metadata,\n        'max_fee': value.max_fee === undefined ? undefined : (value.max_fee.map(_1.RosettaMaxFeeAmountToJSON)),\n        'suggested_fee_multiplier': value.suggested_fee_multiplier,\n    };\n}\nexports.RosettaConstructionPreprocessRequestToJSON = RosettaConstructionPreprocessRequestToJSON;\n//# sourceMappingURL=RosettaConstructionPreprocessRequest.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RosettaConstructionPreprocessResponseToJSON = exports.RosettaConstructionPreprocessResponseFromJSONTyped = exports.RosettaConstructionPreprocessResponseFromJSON = void 0;\nconst runtime_1 = require(\"../runtime\");\nconst _1 = require(\"./\");\nfunction RosettaConstructionPreprocessResponseFromJSON(json) {\n    return RosettaConstructionPreprocessResponseFromJSONTyped(json, false);\n}\nexports.RosettaConstructionPreprocessResponseFromJSON = RosettaConstructionPreprocessResponseFromJSON;\nfunction RosettaConstructionPreprocessResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'options': !runtime_1.exists(json, 'options') ? undefined : _1.RosettaOptionsFromJSON(json['options']),\n        'required_public_keys': !runtime_1.exists(json, 'required_public_keys') ? undefined : (json['required_public_keys'].map(_1.RosettaAccountFromJSON)),\n    };\n}\nexports.RosettaConstructionPreprocessResponseFromJSONTyped = RosettaConstructionPreprocessResponseFromJSONTyped;\nfunction RosettaConstructionPreprocessResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'options': _1.RosettaOptionsToJSON(value.options),\n        'required_public_keys': value.required_public_keys === undefined ? undefined : (value.required_public_keys.map(_1.RosettaAccountToJSON)),\n    };\n}\nexports.RosettaConstructionPreprocessResponseToJSON = RosettaConstructionPreprocessResponseToJSON;\n//# sourceMappingURL=RosettaConstructionPreprocessResponse.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RosettaConstructionSubmitRequestToJSON = exports.RosettaConstructionSubmitRequestFromJSONTyped = exports.RosettaConstructionSubmitRequestFromJSON = void 0;\nconst _1 = require(\"./\");\nfunction RosettaConstructionSubmitRequestFromJSON(json) {\n    return RosettaConstructionSubmitRequestFromJSONTyped(json, false);\n}\nexports.RosettaConstructionSubmitRequestFromJSON = RosettaConstructionSubmitRequestFromJSON;\nfunction RosettaConstructionSubmitRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'network_identifier': _1.NetworkIdentifierFromJSON(json['network_identifier']),\n        'signed_transaction': json['signed_transaction'],\n    };\n}\nexports.RosettaConstructionSubmitRequestFromJSONTyped = RosettaConstructionSubmitRequestFromJSONTyped;\nfunction RosettaConstructionSubmitRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'network_identifier': _1.NetworkIdentifierToJSON(value.network_identifier),\n        'signed_transaction': value.signed_transaction,\n    };\n}\nexports.RosettaConstructionSubmitRequestToJSON = RosettaConstructionSubmitRequestToJSON;\n//# sourceMappingURL=RosettaConstructionSubmitRequest.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RosettaConstructionSubmitResponseToJSON = exports.RosettaConstructionSubmitResponseFromJSONTyped = exports.RosettaConstructionSubmitResponseFromJSON = void 0;\nconst runtime_1 = require(\"../runtime\");\nconst _1 = require(\"./\");\nfunction RosettaConstructionSubmitResponseFromJSON(json) {\n    return RosettaConstructionSubmitResponseFromJSONTyped(json, false);\n}\nexports.RosettaConstructionSubmitResponseFromJSON = RosettaConstructionSubmitResponseFromJSON;\nfunction RosettaConstructionSubmitResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'transaction_identifier': _1.TransactionIdentifierFromJSON(json['transaction_identifier']),\n        'metadata': !runtime_1.exists(json, 'metadata') ? undefined : json['metadata'],\n    };\n}\nexports.RosettaConstructionSubmitResponseFromJSONTyped = RosettaConstructionSubmitResponseFromJSONTyped;\nfunction RosettaConstructionSubmitResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'transaction_identifier': _1.TransactionIdentifierToJSON(value.transaction_identifier),\n        'metadata': value.metadata,\n    };\n}\nexports.RosettaConstructionSubmitResponseToJSON = RosettaConstructionSubmitResponseToJSON;\n//# sourceMappingURL=RosettaConstructionSubmitResponse.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RosettaCurrencyToJSON = exports.RosettaCurrencyFromJSONTyped = exports.RosettaCurrencyFromJSON = void 0;\nconst runtime_1 = require(\"../runtime\");\nfunction RosettaCurrencyFromJSON(json) {\n    return RosettaCurrencyFromJSONTyped(json, false);\n}\nexports.RosettaCurrencyFromJSON = RosettaCurrencyFromJSON;\nfunction RosettaCurrencyFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'symbol': json['symbol'],\n        'decimals': json['decimals'],\n        'metadata': !runtime_1.exists(json, 'metadata') ? undefined : json['metadata'],\n    };\n}\nexports.RosettaCurrencyFromJSONTyped = RosettaCurrencyFromJSONTyped;\nfunction RosettaCurrencyToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'symbol': value.symbol,\n        'decimals': value.decimals,\n        'metadata': value.metadata,\n    };\n}\nexports.RosettaCurrencyToJSON = RosettaCurrencyToJSON;\n//# sourceMappingURL=RosettaCurrency.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RosettaErrorToJSON = exports.RosettaErrorFromJSONTyped = exports.RosettaErrorFromJSON = void 0;\nconst runtime_1 = require(\"../runtime\");\nconst _1 = require(\"./\");\nfunction RosettaErrorFromJSON(json) {\n    return RosettaErrorFromJSONTyped(json, false);\n}\nexports.RosettaErrorFromJSON = RosettaErrorFromJSON;\nfunction RosettaErrorFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'code': json['code'],\n        'message': json['message'],\n        'retriable': json['retriable'],\n        'details': !runtime_1.exists(json, 'details') ? undefined : _1.RosettaErrorDetailsFromJSON(json['details']),\n    };\n}\nexports.RosettaErrorFromJSONTyped = RosettaErrorFromJSONTyped;\nfunction RosettaErrorToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'code': value.code,\n        'message': value.message,\n        'retriable': value.retriable,\n        'details': _1.RosettaErrorDetailsToJSON(value.details),\n    };\n}\nexports.RosettaErrorToJSON = RosettaErrorToJSON;\n//# sourceMappingURL=RosettaError.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RosettaErrorDetailsToJSON = exports.RosettaErrorDetailsFromJSONTyped = exports.RosettaErrorDetailsFromJSON = void 0;\nconst runtime_1 = require(\"../runtime\");\nfunction RosettaErrorDetailsFromJSON(json) {\n    return RosettaErrorDetailsFromJSONTyped(json, false);\n}\nexports.RosettaErrorDetailsFromJSON = RosettaErrorDetailsFromJSON;\nfunction RosettaErrorDetailsFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'address': !runtime_1.exists(json, 'address') ? undefined : json['address'],\n        'error': !runtime_1.exists(json, 'error') ? undefined : json['error'],\n    };\n}\nexports.RosettaErrorDetailsFromJSONTyped = RosettaErrorDetailsFromJSONTyped;\nfunction RosettaErrorDetailsToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'address': value.address,\n        'error': value.error,\n    };\n}\nexports.RosettaErrorDetailsToJSON = RosettaErrorDetailsToJSON;\n//# sourceMappingURL=RosettaErrorDetails.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RosettaMaxFeeAmountToJSON = exports.RosettaMaxFeeAmountFromJSONTyped = exports.RosettaMaxFeeAmountFromJSON = void 0;\nconst runtime_1 = require(\"../runtime\");\nconst _1 = require(\"./\");\nfunction RosettaMaxFeeAmountFromJSON(json) {\n    return RosettaMaxFeeAmountFromJSONTyped(json, false);\n}\nexports.RosettaMaxFeeAmountFromJSON = RosettaMaxFeeAmountFromJSON;\nfunction RosettaMaxFeeAmountFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'value': json['value'],\n        'currency': _1.RosettaCurrencyFromJSON(json['currency']),\n        'metadata': !runtime_1.exists(json, 'metadata') ? undefined : json['metadata'],\n    };\n}\nexports.RosettaMaxFeeAmountFromJSONTyped = RosettaMaxFeeAmountFromJSONTyped;\nfunction RosettaMaxFeeAmountToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'value': value.value,\n        'currency': _1.RosettaCurrencyToJSON(value.currency),\n        'metadata': value.metadata,\n    };\n}\nexports.RosettaMaxFeeAmountToJSON = RosettaMaxFeeAmountToJSON;\n//# sourceMappingURL=RosettaMaxFeeAmount.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RosettaMempoolRequestToJSON = exports.RosettaMempoolRequestFromJSONTyped = exports.RosettaMempoolRequestFromJSON = void 0;\nconst runtime_1 = require(\"../runtime\");\nconst _1 = require(\"./\");\nfunction RosettaMempoolRequestFromJSON(json) {\n    return RosettaMempoolRequestFromJSONTyped(json, false);\n}\nexports.RosettaMempoolRequestFromJSON = RosettaMempoolRequestFromJSON;\nfunction RosettaMempoolRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'network_identifier': _1.NetworkIdentifierFromJSON(json['network_identifier']),\n        'metadata': !runtime_1.exists(json, 'metadata') ? undefined : json['metadata'],\n    };\n}\nexports.RosettaMempoolRequestFromJSONTyped = RosettaMempoolRequestFromJSONTyped;\nfunction RosettaMempoolRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'network_identifier': _1.NetworkIdentifierToJSON(value.network_identifier),\n        'metadata': value.metadata,\n    };\n}\nexports.RosettaMempoolRequestToJSON = RosettaMempoolRequestToJSON;\n//# sourceMappingURL=RosettaMempoolRequest.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RosettaMempoolResponseToJSON = exports.RosettaMempoolResponseFromJSONTyped = exports.RosettaMempoolResponseFromJSON = void 0;\nconst runtime_1 = require(\"../runtime\");\nconst _1 = require(\"./\");\nfunction RosettaMempoolResponseFromJSON(json) {\n    return RosettaMempoolResponseFromJSONTyped(json, false);\n}\nexports.RosettaMempoolResponseFromJSON = RosettaMempoolResponseFromJSON;\nfunction RosettaMempoolResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'transaction_identifiers': (json['transaction_identifiers'].map(_1.TransactionIdentifierFromJSON)),\n        'metadata': !runtime_1.exists(json, 'metadata') ? undefined : json['metadata'],\n    };\n}\nexports.RosettaMempoolResponseFromJSONTyped = RosettaMempoolResponseFromJSONTyped;\nfunction RosettaMempoolResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'transaction_identifiers': (value.transaction_identifiers.map(_1.TransactionIdentifierToJSON)),\n        'metadata': value.metadata,\n    };\n}\nexports.RosettaMempoolResponseToJSON = RosettaMempoolResponseToJSON;\n//# sourceMappingURL=RosettaMempoolResponse.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RosettaMempoolTransactionRequestToJSON = exports.RosettaMempoolTransactionRequestFromJSONTyped = exports.RosettaMempoolTransactionRequestFromJSON = void 0;\nconst _1 = require(\"./\");\nfunction RosettaMempoolTransactionRequestFromJSON(json) {\n    return RosettaMempoolTransactionRequestFromJSONTyped(json, false);\n}\nexports.RosettaMempoolTransactionRequestFromJSON = RosettaMempoolTransactionRequestFromJSON;\nfunction RosettaMempoolTransactionRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'network_identifier': _1.NetworkIdentifierFromJSON(json['network_identifier']),\n        'transaction_identifier': _1.TransactionIdentifierFromJSON(json['transaction_identifier']),\n    };\n}\nexports.RosettaMempoolTransactionRequestFromJSONTyped = RosettaMempoolTransactionRequestFromJSONTyped;\nfunction RosettaMempoolTransactionRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'network_identifier': _1.NetworkIdentifierToJSON(value.network_identifier),\n        'transaction_identifier': _1.TransactionIdentifierToJSON(value.transaction_identifier),\n    };\n}\nexports.RosettaMempoolTransactionRequestToJSON = RosettaMempoolTransactionRequestToJSON;\n//# sourceMappingURL=RosettaMempoolTransactionRequest.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RosettaMempoolTransactionResponseToJSON = exports.RosettaMempoolTransactionResponseFromJSONTyped = exports.RosettaMempoolTransactionResponseFromJSON = void 0;\nconst runtime_1 = require(\"../runtime\");\nconst _1 = require(\"./\");\nfunction RosettaMempoolTransactionResponseFromJSON(json) {\n    return RosettaMempoolTransactionResponseFromJSONTyped(json, false);\n}\nexports.RosettaMempoolTransactionResponseFromJSON = RosettaMempoolTransactionResponseFromJSON;\nfunction RosettaMempoolTransactionResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'transaction': _1.RosettaTransactionFromJSON(json['transaction']),\n        'metadata': !runtime_1.exists(json, 'metadata') ? undefined : json['metadata'],\n    };\n}\nexports.RosettaMempoolTransactionResponseFromJSONTyped = RosettaMempoolTransactionResponseFromJSONTyped;\nfunction RosettaMempoolTransactionResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'transaction': _1.RosettaTransactionToJSON(value.transaction),\n        'metadata': value.metadata,\n    };\n}\nexports.RosettaMempoolTransactionResponseToJSON = RosettaMempoolTransactionResponseToJSON;\n//# sourceMappingURL=RosettaMempoolTransactionResponse.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RosettaNetworkListResponseToJSON = exports.RosettaNetworkListResponseFromJSONTyped = exports.RosettaNetworkListResponseFromJSON = void 0;\nconst _1 = require(\"./\");\nfunction RosettaNetworkListResponseFromJSON(json) {\n    return RosettaNetworkListResponseFromJSONTyped(json, false);\n}\nexports.RosettaNetworkListResponseFromJSON = RosettaNetworkListResponseFromJSON;\nfunction RosettaNetworkListResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'network_identifiers': (json['network_identifiers'].map(_1.NetworkIdentifierFromJSON)),\n    };\n}\nexports.RosettaNetworkListResponseFromJSONTyped = RosettaNetworkListResponseFromJSONTyped;\nfunction RosettaNetworkListResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'network_identifiers': (value.network_identifiers.map(_1.NetworkIdentifierToJSON)),\n    };\n}\nexports.RosettaNetworkListResponseToJSON = RosettaNetworkListResponseToJSON;\n//# sourceMappingURL=RosettaNetworkListResponse.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RosettaNetworkListResponseSubNetworkIdentifierToJSON = exports.RosettaNetworkListResponseSubNetworkIdentifierFromJSONTyped = exports.RosettaNetworkListResponseSubNetworkIdentifierFromJSON = void 0;\nconst runtime_1 = require(\"../runtime\");\nconst _1 = require(\"./\");\nfunction RosettaNetworkListResponseSubNetworkIdentifierFromJSON(json) {\n    return RosettaNetworkListResponseSubNetworkIdentifierFromJSONTyped(json, false);\n}\nexports.RosettaNetworkListResponseSubNetworkIdentifierFromJSON = RosettaNetworkListResponseSubNetworkIdentifierFromJSON;\nfunction RosettaNetworkListResponseSubNetworkIdentifierFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'network': json['network'],\n        'metadata': !runtime_1.exists(json, 'metadata') ? undefined : _1.RosettaNetworkListResponseSubNetworkIdentifierMetadataFromJSON(json['metadata']),\n    };\n}\nexports.RosettaNetworkListResponseSubNetworkIdentifierFromJSONTyped = RosettaNetworkListResponseSubNetworkIdentifierFromJSONTyped;\nfunction RosettaNetworkListResponseSubNetworkIdentifierToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'network': value.network,\n        'metadata': _1.RosettaNetworkListResponseSubNetworkIdentifierMetadataToJSON(value.metadata),\n    };\n}\nexports.RosettaNetworkListResponseSubNetworkIdentifierToJSON = RosettaNetworkListResponseSubNetworkIdentifierToJSON;\n//# sourceMappingURL=RosettaNetworkListResponseSubNetworkIdentifier.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RosettaNetworkListResponseSubNetworkIdentifierMetadataToJSON = exports.RosettaNetworkListResponseSubNetworkIdentifierMetadataFromJSONTyped = exports.RosettaNetworkListResponseSubNetworkIdentifierMetadataFromJSON = void 0;\nfunction RosettaNetworkListResponseSubNetworkIdentifierMetadataFromJSON(json) {\n    return RosettaNetworkListResponseSubNetworkIdentifierMetadataFromJSONTyped(json, false);\n}\nexports.RosettaNetworkListResponseSubNetworkIdentifierMetadataFromJSON = RosettaNetworkListResponseSubNetworkIdentifierMetadataFromJSON;\nfunction RosettaNetworkListResponseSubNetworkIdentifierMetadataFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'producer': json['producer'],\n    };\n}\nexports.RosettaNetworkListResponseSubNetworkIdentifierMetadataFromJSONTyped = RosettaNetworkListResponseSubNetworkIdentifierMetadataFromJSONTyped;\nfunction RosettaNetworkListResponseSubNetworkIdentifierMetadataToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'producer': value.producer,\n    };\n}\nexports.RosettaNetworkListResponseSubNetworkIdentifierMetadataToJSON = RosettaNetworkListResponseSubNetworkIdentifierMetadataToJSON;\n//# sourceMappingURL=RosettaNetworkListResponseSubNetworkIdentifierMetadata.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RosettaNetworkOptionsResponseToJSON = exports.RosettaNetworkOptionsResponseFromJSONTyped = exports.RosettaNetworkOptionsResponseFromJSON = void 0;\nconst _1 = require(\"./\");\nfunction RosettaNetworkOptionsResponseFromJSON(json) {\n    return RosettaNetworkOptionsResponseFromJSONTyped(json, false);\n}\nexports.RosettaNetworkOptionsResponseFromJSON = RosettaNetworkOptionsResponseFromJSON;\nfunction RosettaNetworkOptionsResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'version': _1.RosettaNetworkOptionsResponseVersionFromJSON(json['version']),\n        'allow': _1.RosettaNetworkOptionsResponseAllowFromJSON(json['allow']),\n    };\n}\nexports.RosettaNetworkOptionsResponseFromJSONTyped = RosettaNetworkOptionsResponseFromJSONTyped;\nfunction RosettaNetworkOptionsResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'version': _1.RosettaNetworkOptionsResponseVersionToJSON(value.version),\n        'allow': _1.RosettaNetworkOptionsResponseAllowToJSON(value.allow),\n    };\n}\nexports.RosettaNetworkOptionsResponseToJSON = RosettaNetworkOptionsResponseToJSON;\n//# sourceMappingURL=RosettaNetworkOptionsResponse.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RosettaNetworkOptionsResponseAllowToJSON = exports.RosettaNetworkOptionsResponseAllowFromJSONTyped = exports.RosettaNetworkOptionsResponseAllowFromJSON = void 0;\nconst _1 = require(\"./\");\nfunction RosettaNetworkOptionsResponseAllowFromJSON(json) {\n    return RosettaNetworkOptionsResponseAllowFromJSONTyped(json, false);\n}\nexports.RosettaNetworkOptionsResponseAllowFromJSON = RosettaNetworkOptionsResponseAllowFromJSON;\nfunction RosettaNetworkOptionsResponseAllowFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'operation_statuses': (json['operation_statuses'].map(_1.RosettaOperationStatusFromJSON)),\n        'operation_types': json['operation_types'],\n        'errors': (json['errors'].map(_1.RosettaErrorFromJSON)),\n        'historical_balance_lookup': json['historical_balance_lookup'],\n    };\n}\nexports.RosettaNetworkOptionsResponseAllowFromJSONTyped = RosettaNetworkOptionsResponseAllowFromJSONTyped;\nfunction RosettaNetworkOptionsResponseAllowToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'operation_statuses': (value.operation_statuses.map(_1.RosettaOperationStatusToJSON)),\n        'operation_types': value.operation_types,\n        'errors': (value.errors.map(_1.RosettaErrorToJSON)),\n        'historical_balance_lookup': value.historical_balance_lookup,\n    };\n}\nexports.RosettaNetworkOptionsResponseAllowToJSON = RosettaNetworkOptionsResponseAllowToJSON;\n//# sourceMappingURL=RosettaNetworkOptionsResponseAllow.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RosettaNetworkOptionsResponseVersionToJSON = exports.RosettaNetworkOptionsResponseVersionFromJSONTyped = exports.RosettaNetworkOptionsResponseVersionFromJSON = void 0;\nconst runtime_1 = require(\"../runtime\");\nfunction RosettaNetworkOptionsResponseVersionFromJSON(json) {\n    return RosettaNetworkOptionsResponseVersionFromJSONTyped(json, false);\n}\nexports.RosettaNetworkOptionsResponseVersionFromJSON = RosettaNetworkOptionsResponseVersionFromJSON;\nfunction RosettaNetworkOptionsResponseVersionFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'rosetta_version': json['rosetta_version'],\n        'node_version': json['node_version'],\n        'middleware_version': !runtime_1.exists(json, 'middleware_version') ? undefined : json['middleware_version'],\n        'metadata': !runtime_1.exists(json, 'metadata') ? undefined : json['metadata'],\n    };\n}\nexports.RosettaNetworkOptionsResponseVersionFromJSONTyped = RosettaNetworkOptionsResponseVersionFromJSONTyped;\nfunction RosettaNetworkOptionsResponseVersionToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'rosetta_version': value.rosetta_version,\n        'node_version': value.node_version,\n        'middleware_version': value.middleware_version,\n        'metadata': value.metadata,\n    };\n}\nexports.RosettaNetworkOptionsResponseVersionToJSON = RosettaNetworkOptionsResponseVersionToJSON;\n//# sourceMappingURL=RosettaNetworkOptionsResponseVersion.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RosettaOperationToJSON = exports.RosettaOperationFromJSONTyped = exports.RosettaOperationFromJSON = void 0;\nconst runtime_1 = require(\"../runtime\");\nconst _1 = require(\"./\");\nfunction RosettaOperationFromJSON(json) {\n    return RosettaOperationFromJSONTyped(json, false);\n}\nexports.RosettaOperationFromJSON = RosettaOperationFromJSON;\nfunction RosettaOperationFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'operation_identifier': _1.RosettaOperationIdentifierFromJSON(json['operation_identifier']),\n        'related_operations': !runtime_1.exists(json, 'related_operations') ? undefined : (json['related_operations'].map(_1.RosettaRelatedOperationFromJSON)),\n        'type': json['type'],\n        'status': json['status'],\n        'account': !runtime_1.exists(json, 'account') ? undefined : _1.RosettaAccountFromJSON(json['account']),\n        'amount': !runtime_1.exists(json, 'amount') ? undefined : _1.RosettaAmountFromJSON(json['amount']),\n        'coin_change': !runtime_1.exists(json, 'coin_change') ? undefined : _1.RosettaCoinChangeFromJSON(json['coin_change']),\n        'metadata': !runtime_1.exists(json, 'metadata') ? undefined : _1.RosettaBlockMetadataFromJSON(json['metadata']),\n    };\n}\nexports.RosettaOperationFromJSONTyped = RosettaOperationFromJSONTyped;\nfunction RosettaOperationToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'operation_identifier': _1.RosettaOperationIdentifierToJSON(value.operation_identifier),\n        'related_operations': value.related_operations === undefined ? undefined : (value.related_operations.map(_1.RosettaRelatedOperationToJSON)),\n        'type': value.type,\n        'status': value.status,\n        'account': _1.RosettaAccountToJSON(value.account),\n        'amount': _1.RosettaAmountToJSON(value.amount),\n        'coin_change': _1.RosettaCoinChangeToJSON(value.coin_change),\n        'metadata': _1.RosettaBlockMetadataToJSON(value.metadata),\n    };\n}\nexports.RosettaOperationToJSON = RosettaOperationToJSON;\n//# sourceMappingURL=RosettaOperation.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RosettaOperationIdentifierToJSON = exports.RosettaOperationIdentifierFromJSONTyped = exports.RosettaOperationIdentifierFromJSON = void 0;\nconst runtime_1 = require(\"../runtime\");\nfunction RosettaOperationIdentifierFromJSON(json) {\n    return RosettaOperationIdentifierFromJSONTyped(json, false);\n}\nexports.RosettaOperationIdentifierFromJSON = RosettaOperationIdentifierFromJSON;\nfunction RosettaOperationIdentifierFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'index': json['index'],\n        'network_index': !runtime_1.exists(json, 'network_index') ? undefined : json['network_index'],\n    };\n}\nexports.RosettaOperationIdentifierFromJSONTyped = RosettaOperationIdentifierFromJSONTyped;\nfunction RosettaOperationIdentifierToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'index': value.index,\n        'network_index': value.network_index,\n    };\n}\nexports.RosettaOperationIdentifierToJSON = RosettaOperationIdentifierToJSON;\n//# sourceMappingURL=RosettaOperationIdentifier.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RosettaOperationStatusToJSON = exports.RosettaOperationStatusFromJSONTyped = exports.RosettaOperationStatusFromJSON = void 0;\nfunction RosettaOperationStatusFromJSON(json) {\n    return RosettaOperationStatusFromJSONTyped(json, false);\n}\nexports.RosettaOperationStatusFromJSON = RosettaOperationStatusFromJSON;\nfunction RosettaOperationStatusFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'status': json['status'],\n        'successful': json['successful'],\n    };\n}\nexports.RosettaOperationStatusFromJSONTyped = RosettaOperationStatusFromJSONTyped;\nfunction RosettaOperationStatusToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'status': value.status,\n        'successful': value.successful,\n    };\n}\nexports.RosettaOperationStatusToJSON = RosettaOperationStatusToJSON;\n//# sourceMappingURL=RosettaOperationStatus.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RosettaOptionsToJSON = exports.RosettaOptionsFromJSONTyped = exports.RosettaOptionsFromJSON = void 0;\nconst runtime_1 = require(\"../runtime\");\nfunction RosettaOptionsFromJSON(json) {\n    return RosettaOptionsFromJSONTyped(json, false);\n}\nexports.RosettaOptionsFromJSON = RosettaOptionsFromJSON;\nfunction RosettaOptionsFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'sender_address': !runtime_1.exists(json, 'sender_address') ? undefined : json['sender_address'],\n        'type': !runtime_1.exists(json, 'type') ? undefined : json['type'],\n        'status': !runtime_1.exists(json, 'status') ? undefined : json['status'],\n        'token_transfer_recipient_address': !runtime_1.exists(json, 'token_transfer_recipient_address') ? undefined : json['token_transfer_recipient_address'],\n        'amount': !runtime_1.exists(json, 'amount') ? undefined : json['amount'],\n        'symbol': !runtime_1.exists(json, 'symbol') ? undefined : json['symbol'],\n        'decimals': !runtime_1.exists(json, 'decimals') ? undefined : json['decimals'],\n        'gas_limit': !runtime_1.exists(json, 'gas_limit') ? undefined : json['gas_limit'],\n        'gas_price': !runtime_1.exists(json, 'gas_price') ? undefined : json['gas_price'],\n        'suggested_fee_multiplier': !runtime_1.exists(json, 'suggested_fee_multiplier') ? undefined : json['suggested_fee_multiplier'],\n        'max_fee': !runtime_1.exists(json, 'max_fee') ? undefined : json['max_fee'],\n        'fee': !runtime_1.exists(json, 'fee') ? undefined : json['fee'],\n    };\n}\nexports.RosettaOptionsFromJSONTyped = RosettaOptionsFromJSONTyped;\nfunction RosettaOptionsToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'sender_address': value.sender_address,\n        'type': value.type,\n        'status': value.status,\n        'token_transfer_recipient_address': value.token_transfer_recipient_address,\n        'amount': value.amount,\n        'symbol': value.symbol,\n        'decimals': value.decimals,\n        'gas_limit': value.gas_limit,\n        'gas_price': value.gas_price,\n        'suggested_fee_multiplier': value.suggested_fee_multiplier,\n        'max_fee': value.max_fee,\n        'fee': value.fee,\n    };\n}\nexports.RosettaOptionsToJSON = RosettaOptionsToJSON;\n//# sourceMappingURL=RosettaOptions.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RosettaOptionsRequestToJSON = exports.RosettaOptionsRequestFromJSONTyped = exports.RosettaOptionsRequestFromJSON = void 0;\nconst runtime_1 = require(\"../runtime\");\nconst _1 = require(\"./\");\nfunction RosettaOptionsRequestFromJSON(json) {\n    return RosettaOptionsRequestFromJSONTyped(json, false);\n}\nexports.RosettaOptionsRequestFromJSON = RosettaOptionsRequestFromJSON;\nfunction RosettaOptionsRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'network_identifier': _1.NetworkIdentifierFromJSON(json['network_identifier']),\n        'metadata': !runtime_1.exists(json, 'metadata') ? undefined : json['metadata'],\n    };\n}\nexports.RosettaOptionsRequestFromJSONTyped = RosettaOptionsRequestFromJSONTyped;\nfunction RosettaOptionsRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'network_identifier': _1.NetworkIdentifierToJSON(value.network_identifier),\n        'metadata': value.metadata,\n    };\n}\nexports.RosettaOptionsRequestToJSON = RosettaOptionsRequestToJSON;\n//# sourceMappingURL=RosettaOptionsRequest.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RosettaParentBlockIdentifierToJSON = exports.RosettaParentBlockIdentifierFromJSONTyped = exports.RosettaParentBlockIdentifierFromJSON = void 0;\nfunction RosettaParentBlockIdentifierFromJSON(json) {\n    return RosettaParentBlockIdentifierFromJSONTyped(json, false);\n}\nexports.RosettaParentBlockIdentifierFromJSON = RosettaParentBlockIdentifierFromJSON;\nfunction RosettaParentBlockIdentifierFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'index': json['index'],\n        'hash': json['hash'],\n    };\n}\nexports.RosettaParentBlockIdentifierFromJSONTyped = RosettaParentBlockIdentifierFromJSONTyped;\nfunction RosettaParentBlockIdentifierToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'index': value.index,\n        'hash': value.hash,\n    };\n}\nexports.RosettaParentBlockIdentifierToJSON = RosettaParentBlockIdentifierToJSON;\n//# sourceMappingURL=RosettaParentBlockIdentifier.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RosettaPublicKeyToJSON = exports.RosettaPublicKeyFromJSONTyped = exports.RosettaPublicKeyFromJSON = exports.RosettaPublicKeyCurveTypeEnum = void 0;\n/**\n* @export\n* @enum {string}\n*/\nvar RosettaPublicKeyCurveTypeEnum;\n(function (RosettaPublicKeyCurveTypeEnum) {\n    RosettaPublicKeyCurveTypeEnum[\"secp256k1\"] = \"secp256k1\";\n    RosettaPublicKeyCurveTypeEnum[\"edwards25519\"] = \"edwards25519\";\n})(RosettaPublicKeyCurveTypeEnum = exports.RosettaPublicKeyCurveTypeEnum || (exports.RosettaPublicKeyCurveTypeEnum = {}));\nfunction RosettaPublicKeyFromJSON(json) {\n    return RosettaPublicKeyFromJSONTyped(json, false);\n}\nexports.RosettaPublicKeyFromJSON = RosettaPublicKeyFromJSON;\nfunction RosettaPublicKeyFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'hex_bytes': json['hex_bytes'],\n        'curve_type': json['curve_type'],\n    };\n}\nexports.RosettaPublicKeyFromJSONTyped = RosettaPublicKeyFromJSONTyped;\nfunction RosettaPublicKeyToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'hex_bytes': value.hex_bytes,\n        'curve_type': value.curve_type,\n    };\n}\nexports.RosettaPublicKeyToJSON = RosettaPublicKeyToJSON;\n//# sourceMappingURL=RosettaPublicKey.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RosettaRelatedOperationToJSON = exports.RosettaRelatedOperationFromJSONTyped = exports.RosettaRelatedOperationFromJSON = void 0;\nconst runtime_1 = require(\"../runtime\");\nconst _1 = require(\"./\");\nfunction RosettaRelatedOperationFromJSON(json) {\n    return RosettaRelatedOperationFromJSONTyped(json, false);\n}\nexports.RosettaRelatedOperationFromJSON = RosettaRelatedOperationFromJSON;\nfunction RosettaRelatedOperationFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'index': !runtime_1.exists(json, 'index') ? undefined : json['index'],\n        'operation_identifier': _1.RosettaOperationIdentifierFromJSON(json['operation_identifier']),\n    };\n}\nexports.RosettaRelatedOperationFromJSONTyped = RosettaRelatedOperationFromJSONTyped;\nfunction RosettaRelatedOperationToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'index': value.index,\n        'operation_identifier': _1.RosettaOperationIdentifierToJSON(value.operation_identifier),\n    };\n}\nexports.RosettaRelatedOperationToJSON = RosettaRelatedOperationToJSON;\n//# sourceMappingURL=RosettaRelatedOperation.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RosettaSignatureToJSON = exports.RosettaSignatureFromJSONTyped = exports.RosettaSignatureFromJSON = exports.RosettaSignatureSignatureTypeEnum = void 0;\nconst _1 = require(\"./\");\n/**\n* @export\n* @enum {string}\n*/\nvar RosettaSignatureSignatureTypeEnum;\n(function (RosettaSignatureSignatureTypeEnum) {\n    RosettaSignatureSignatureTypeEnum[\"ecdsa\"] = \"ecdsa\";\n    RosettaSignatureSignatureTypeEnum[\"ecdsa_recovery\"] = \"ecdsa_recovery\";\n    RosettaSignatureSignatureTypeEnum[\"ed25519\"] = \"ed25519\";\n    RosettaSignatureSignatureTypeEnum[\"schnorr_1\"] = \"schnorr_1\";\n    RosettaSignatureSignatureTypeEnum[\"schnorr_poseidon\"] = \"schnorr_poseidon\";\n})(RosettaSignatureSignatureTypeEnum = exports.RosettaSignatureSignatureTypeEnum || (exports.RosettaSignatureSignatureTypeEnum = {}));\nfunction RosettaSignatureFromJSON(json) {\n    return RosettaSignatureFromJSONTyped(json, false);\n}\nexports.RosettaSignatureFromJSON = RosettaSignatureFromJSON;\nfunction RosettaSignatureFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'signing_payload': _1.SigningPayloadFromJSON(json['signing_payload']),\n        'public_key': _1.RosettaPublicKeyFromJSON(json['public_key']),\n        'signature_type': json['signature_type'],\n        'hex_bytes': json['hex_bytes'],\n    };\n}\nexports.RosettaSignatureFromJSONTyped = RosettaSignatureFromJSONTyped;\nfunction RosettaSignatureToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'signing_payload': _1.SigningPayloadToJSON(value.signing_payload),\n        'public_key': _1.RosettaPublicKeyToJSON(value.public_key),\n        'signature_type': value.signature_type,\n        'hex_bytes': value.hex_bytes,\n    };\n}\nexports.RosettaSignatureToJSON = RosettaSignatureToJSON;\n//# sourceMappingURL=RosettaSignature.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RosettaStatusRequestToJSON = exports.RosettaStatusRequestFromJSONTyped = exports.RosettaStatusRequestFromJSON = void 0;\nconst runtime_1 = require(\"../runtime\");\nconst _1 = require(\"./\");\nfunction RosettaStatusRequestFromJSON(json) {\n    return RosettaStatusRequestFromJSONTyped(json, false);\n}\nexports.RosettaStatusRequestFromJSON = RosettaStatusRequestFromJSON;\nfunction RosettaStatusRequestFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'network_identifier': _1.NetworkIdentifierFromJSON(json['network_identifier']),\n        'metadata': !runtime_1.exists(json, 'metadata') ? undefined : json['metadata'],\n    };\n}\nexports.RosettaStatusRequestFromJSONTyped = RosettaStatusRequestFromJSONTyped;\nfunction RosettaStatusRequestToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'network_identifier': _1.NetworkIdentifierToJSON(value.network_identifier),\n        'metadata': value.metadata,\n    };\n}\nexports.RosettaStatusRequestToJSON = RosettaStatusRequestToJSON;\n//# sourceMappingURL=RosettaStatusRequest.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RosettaSubAccountToJSON = exports.RosettaSubAccountFromJSONTyped = exports.RosettaSubAccountFromJSON = void 0;\nconst runtime_1 = require(\"../runtime\");\nfunction RosettaSubAccountFromJSON(json) {\n    return RosettaSubAccountFromJSONTyped(json, false);\n}\nexports.RosettaSubAccountFromJSON = RosettaSubAccountFromJSON;\nfunction RosettaSubAccountFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'address': json['address'],\n        'metadata': !runtime_1.exists(json, 'metadata') ? undefined : json['metadata'],\n    };\n}\nexports.RosettaSubAccountFromJSONTyped = RosettaSubAccountFromJSONTyped;\nfunction RosettaSubAccountToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'address': value.address,\n        'metadata': value.metadata,\n    };\n}\nexports.RosettaSubAccountToJSON = RosettaSubAccountToJSON;\n//# sourceMappingURL=RosettaSubAccount.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RosettaTransactionToJSON = exports.RosettaTransactionFromJSONTyped = exports.RosettaTransactionFromJSON = void 0;\nconst runtime_1 = require(\"../runtime\");\nconst _1 = require(\"./\");\nfunction RosettaTransactionFromJSON(json) {\n    return RosettaTransactionFromJSONTyped(json, false);\n}\nexports.RosettaTransactionFromJSON = RosettaTransactionFromJSON;\nfunction RosettaTransactionFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'transaction_identifier': _1.TransactionIdentifierFromJSON(json['transaction_identifier']),\n        'operations': (json['operations'].map(_1.RosettaOperationFromJSON)),\n        'metadata': !runtime_1.exists(json, 'metadata') ? undefined : _1.RosettaBlockMetadata1FromJSON(json['metadata']),\n    };\n}\nexports.RosettaTransactionFromJSONTyped = RosettaTransactionFromJSONTyped;\nfunction RosettaTransactionToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'transaction_identifier': _1.TransactionIdentifierToJSON(value.transaction_identifier),\n        'operations': (value.operations.map(_1.RosettaOperationToJSON)),\n        'metadata': _1.RosettaBlockMetadata1ToJSON(value.metadata),\n    };\n}\nexports.RosettaTransactionToJSON = RosettaTransactionToJSON;\n//# sourceMappingURL=RosettaTransaction.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RunFaucetResponseToJSON = exports.RunFaucetResponseFromJSONTyped = exports.RunFaucetResponseFromJSON = void 0;\nconst runtime_1 = require(\"../runtime\");\nfunction RunFaucetResponseFromJSON(json) {\n    return RunFaucetResponseFromJSONTyped(json, false);\n}\nexports.RunFaucetResponseFromJSON = RunFaucetResponseFromJSON;\nfunction RunFaucetResponseFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'success': json['success'],\n        'txId': !runtime_1.exists(json, 'txId') ? undefined : json['txId'],\n        'txRaw': !runtime_1.exists(json, 'txRaw') ? undefined : json['txRaw'],\n    };\n}\nexports.RunFaucetResponseFromJSONTyped = RunFaucetResponseFromJSONTyped;\nfunction RunFaucetResponseToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'success': value.success,\n        'txId': value.txId,\n        'txRaw': value.txRaw,\n    };\n}\nexports.RunFaucetResponseToJSON = RunFaucetResponseToJSON;\n//# sourceMappingURL=RunFaucetResponse.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SigningPayloadToJSON = exports.SigningPayloadFromJSONTyped = exports.SigningPayloadFromJSON = exports.SigningPayloadSignatureTypeEnum = void 0;\nconst runtime_1 = require(\"../runtime\");\nconst _1 = require(\"./\");\n/**\n* @export\n* @enum {string}\n*/\nvar SigningPayloadSignatureTypeEnum;\n(function (SigningPayloadSignatureTypeEnum) {\n    SigningPayloadSignatureTypeEnum[\"ecdsa\"] = \"ecdsa\";\n    SigningPayloadSignatureTypeEnum[\"ecdsa_recovery\"] = \"ecdsa_recovery\";\n    SigningPayloadSignatureTypeEnum[\"ed25519\"] = \"ed25519\";\n    SigningPayloadSignatureTypeEnum[\"schnorr_1\"] = \"schnorr_1\";\n    SigningPayloadSignatureTypeEnum[\"schnorr_poseidon\"] = \"schnorr_poseidon\";\n})(SigningPayloadSignatureTypeEnum = exports.SigningPayloadSignatureTypeEnum || (exports.SigningPayloadSignatureTypeEnum = {}));\nfunction SigningPayloadFromJSON(json) {\n    return SigningPayloadFromJSONTyped(json, false);\n}\nexports.SigningPayloadFromJSON = SigningPayloadFromJSON;\nfunction SigningPayloadFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'address': !runtime_1.exists(json, 'address') ? undefined : json['address'],\n        'account_identifier': !runtime_1.exists(json, 'account_identifier') ? undefined : _1.RosettaAccountFromJSON(json['account_identifier']),\n        'hex_bytes': json['hex_bytes'],\n        'signature_type': !runtime_1.exists(json, 'signature_type') ? undefined : json['signature_type'],\n    };\n}\nexports.SigningPayloadFromJSONTyped = SigningPayloadFromJSONTyped;\nfunction SigningPayloadToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'address': value.address,\n        'account_identifier': _1.RosettaAccountToJSON(value.account_identifier),\n        'hex_bytes': value.hex_bytes,\n        'signature_type': value.signature_type,\n    };\n}\nexports.SigningPayloadToJSON = SigningPayloadToJSON;\n//# sourceMappingURL=SigningPayload.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TransactionIdentifierToJSON = exports.TransactionIdentifierFromJSONTyped = exports.TransactionIdentifierFromJSON = void 0;\nfunction TransactionIdentifierFromJSON(json) {\n    return TransactionIdentifierFromJSONTyped(json, false);\n}\nexports.TransactionIdentifierFromJSON = TransactionIdentifierFromJSON;\nfunction TransactionIdentifierFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'hash': json['hash'],\n    };\n}\nexports.TransactionIdentifierFromJSONTyped = TransactionIdentifierFromJSONTyped;\nfunction TransactionIdentifierToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'hash': value.hash,\n    };\n}\nexports.TransactionIdentifierToJSON = TransactionIdentifierToJSON;\n//# sourceMappingURL=TransactionIdentifier.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TransactionResultsToJSON = exports.TransactionResultsFromJSONTyped = exports.TransactionResultsFromJSON = void 0;\nfunction TransactionResultsFromJSON(json) {\n    return TransactionResultsFromJSONTyped(json, false);\n}\nexports.TransactionResultsFromJSON = TransactionResultsFromJSON;\nfunction TransactionResultsFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        'limit': json['limit'],\n        'offset': json['offset'],\n        'total': json['total'],\n        'results': json['results'],\n    };\n}\nexports.TransactionResultsFromJSONTyped = TransactionResultsFromJSONTyped;\nfunction TransactionResultsToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        'limit': value.limit,\n        'offset': value.offset,\n        'total': value.total,\n        'results': value.results,\n    };\n}\nexports.TransactionResultsToJSON = TransactionResultsToJSON;\n//# sourceMappingURL=TransactionResults.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BlocksApi = void 0;\nconst runtime = require(\"../runtime\");\nconst models_1 = require(\"../models\");\n/**\n *\n */\nclass BlocksApi extends runtime.BaseAPI {\n    /**\n     * Get a specific block by hash\n     * Get block\n     */\n    async getBlockByHashRaw(requestParameters) {\n        if (requestParameters.hash === null || requestParameters.hash === undefined) {\n            throw new runtime.RequiredError('hash', 'Required parameter requestParameters.hash was null or undefined when calling getBlockByHash.');\n        }\n        const queryParameters = {};\n        const headerParameters = {};\n        const response = await this.request({\n            path: `/extended/v1/block/{hash}`.replace(`{${\"hash\"}}`, encodeURIComponent(String(requestParameters.hash))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n        return new runtime.JSONApiResponse(response, (jsonValue) => models_1.BlockFromJSON(jsonValue));\n    }\n    /**\n     * Get a specific block by hash\n     * Get block\n     */\n    async getBlockByHash(requestParameters) {\n        const response = await this.getBlockByHashRaw(requestParameters);\n        return await response.value();\n    }\n    /**\n     * Get all recently mined blocks\n     * Get recent blocks\n     */\n    async getBlockListRaw(requestParameters) {\n        const queryParameters = {};\n        if (requestParameters.limit !== undefined) {\n            queryParameters['limit'] = requestParameters.limit;\n        }\n        if (requestParameters.offset !== undefined) {\n            queryParameters['offset'] = requestParameters.offset;\n        }\n        const headerParameters = {};\n        const response = await this.request({\n            path: `/extended/v1/block`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n        return new runtime.JSONApiResponse(response, (jsonValue) => models_1.BlockListResponseFromJSON(jsonValue));\n    }\n    /**\n     * Get all recently mined blocks\n     * Get recent blocks\n     */\n    async getBlockList(requestParameters) {\n        const response = await this.getBlockListRaw(requestParameters);\n        return await response.value();\n    }\n}\nexports.BlocksApi = BlocksApi;\n//# sourceMappingURL=BlocksApi.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BurnchainApi = void 0;\nconst runtime = require(\"../runtime\");\nconst models_1 = require(\"../models\");\n/**\n *\n */\nclass BurnchainApi extends runtime.BaseAPI {\n    /**\n     * Get a list of recent burnchain (e.g. Bitcoin) reward recipients with the associated amounts and block info\n     * Get recent burnchain reward recipients\n     */\n    async getBurnchainRewardListRaw(requestParameters) {\n        const queryParameters = {};\n        if (requestParameters.limit !== undefined) {\n            queryParameters['limit'] = requestParameters.limit;\n        }\n        if (requestParameters.offset !== undefined) {\n            queryParameters['offset'] = requestParameters.offset;\n        }\n        const headerParameters = {};\n        const response = await this.request({\n            path: `/extended/v1/burnchain/rewards`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n        return new runtime.JSONApiResponse(response, (jsonValue) => models_1.BurnchainRewardListResponseFromJSON(jsonValue));\n    }\n    /**\n     * Get a list of recent burnchain (e.g. Bitcoin) reward recipients with the associated amounts and block info\n     * Get recent burnchain reward recipients\n     */\n    async getBurnchainRewardList(requestParameters) {\n        const response = await this.getBurnchainRewardListRaw(requestParameters);\n        return await response.value();\n    }\n    /**\n     * Get a list of recent burnchain (e.g. Bitcoin) rewards for the given recipient with the associated amounts and block info\n     * Get recent burnchain reward for the given recipient\n     */\n    async getBurnchainRewardListByAddressRaw(requestParameters) {\n        if (requestParameters.address === null || requestParameters.address === undefined) {\n            throw new runtime.RequiredError('address', 'Required parameter requestParameters.address was null or undefined when calling getBurnchainRewardListByAddress.');\n        }\n        const queryParameters = {};\n        if (requestParameters.limit !== undefined) {\n            queryParameters['limit'] = requestParameters.limit;\n        }\n        if (requestParameters.offset !== undefined) {\n            queryParameters['offset'] = requestParameters.offset;\n        }\n        const headerParameters = {};\n        const response = await this.request({\n            path: `/extended/v1/burnchain/rewards/{address}`.replace(`{${\"address\"}}`, encodeURIComponent(String(requestParameters.address))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n        return new runtime.JSONApiResponse(response, (jsonValue) => models_1.BurnchainRewardListResponseFromJSON(jsonValue));\n    }\n    /**\n     * Get a list of recent burnchain (e.g. Bitcoin) rewards for the given recipient with the associated amounts and block info\n     * Get recent burnchain reward for the given recipient\n     */\n    async getBurnchainRewardListByAddress(requestParameters) {\n        const response = await this.getBurnchainRewardListByAddressRaw(requestParameters);\n        return await response.value();\n    }\n    /**\n     * Get the total burnchain (e.g. Bitcoin) rewards for the given recipient\n     * Get total burnchain rewards for the given recipient\n     */\n    async getBurnchainRewardsTotalByAddressRaw(requestParameters) {\n        if (requestParameters.address === null || requestParameters.address === undefined) {\n            throw new runtime.RequiredError('address', 'Required parameter requestParameters.address was null or undefined when calling getBurnchainRewardsTotalByAddress.');\n        }\n        const queryParameters = {};\n        const headerParameters = {};\n        const response = await this.request({\n            path: `/extended/v1/burnchain/rewards/{address}/total`.replace(`{${\"address\"}}`, encodeURIComponent(String(requestParameters.address))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n        return new runtime.JSONApiResponse(response, (jsonValue) => models_1.BurnchainRewardsTotalFromJSON(jsonValue));\n    }\n    /**\n     * Get the total burnchain (e.g. Bitcoin) rewards for the given recipient\n     * Get total burnchain rewards for the given recipient\n     */\n    async getBurnchainRewardsTotalByAddress(requestParameters) {\n        const response = await this.getBurnchainRewardsTotalByAddressRaw(requestParameters);\n        return await response.value();\n    }\n}\nexports.BurnchainApi = BurnchainApi;\n//# sourceMappingURL=BurnchainApi.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FaucetsApi = void 0;\nconst runtime = require(\"../runtime\");\nconst models_1 = require(\"../models\");\n/**\n *\n */\nclass FaucetsApi extends runtime.BaseAPI {\n    /**\n     * Get BTC tokens for the testnet\n     * Get BTC tokens\n     */\n    async runFaucetBtcRaw(requestParameters) {\n        if (requestParameters.address === null || requestParameters.address === undefined) {\n            throw new runtime.RequiredError('address', 'Required parameter requestParameters.address was null or undefined when calling runFaucetBtc.');\n        }\n        const queryParameters = {};\n        if (requestParameters.address !== undefined) {\n            queryParameters['address'] = requestParameters.address;\n        }\n        const headerParameters = {};\n        const response = await this.request({\n            path: `/extended/v1/faucets/btc`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n        return new runtime.JSONApiResponse(response, (jsonValue) => models_1.RunFaucetResponseFromJSON(jsonValue));\n    }\n    /**\n     * Get BTC tokens for the testnet\n     * Get BTC tokens\n     */\n    async runFaucetBtc(requestParameters) {\n        const response = await this.runFaucetBtcRaw(requestParameters);\n        return await response.value();\n    }\n    /**\n     * Get STX tokens for the testnet\n     * Get STX tokens\n     */\n    async runFaucetStxRaw(requestParameters) {\n        if (requestParameters.address === null || requestParameters.address === undefined) {\n            throw new runtime.RequiredError('address', 'Required parameter requestParameters.address was null or undefined when calling runFaucetStx.');\n        }\n        const queryParameters = {};\n        if (requestParameters.address !== undefined) {\n            queryParameters['address'] = requestParameters.address;\n        }\n        if (requestParameters.stacking !== undefined) {\n            queryParameters['stacking'] = requestParameters.stacking;\n        }\n        const headerParameters = {};\n        const response = await this.request({\n            path: `/extended/v1/faucets/stx`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n        return new runtime.JSONApiResponse(response, (jsonValue) => models_1.RunFaucetResponseFromJSON(jsonValue));\n    }\n    /**\n     * Get STX tokens for the testnet\n     * Get STX tokens\n     */\n    async runFaucetStx(requestParameters) {\n        const response = await this.runFaucetStxRaw(requestParameters);\n        return await response.value();\n    }\n}\nexports.FaucetsApi = FaucetsApi;\n//# sourceMappingURL=FaucetsApi.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FeesApi = void 0;\nconst runtime = require(\"../runtime\");\n/**\n *\n */\nclass FeesApi extends runtime.BaseAPI {\n    /**\n     * Get an estimated fee rate for STX transfer transactions. This a a fee rate / byte, and is returned as a JSON integer\n     * Get estimated fee\n     */\n    async getFeeTransferRaw() {\n        const queryParameters = {};\n        const headerParameters = {};\n        const response = await this.request({\n            path: `/v2/fees/transfer`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n        return new runtime.JSONApiResponse(response);\n    }\n    /**\n     * Get an estimated fee rate for STX transfer transactions. This a a fee rate / byte, and is returned as a JSON integer\n     * Get estimated fee\n     */\n    async getFeeTransfer() {\n        const response = await this.getFeeTransferRaw();\n        return await response.value();\n    }\n}\nexports.FeesApi = FeesApi;\n//# sourceMappingURL=FeesApi.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetNetworkBlockTimeByNetworkNetworkEnum = exports.InfoApi = void 0;\nconst runtime = require(\"../runtime\");\nconst models_1 = require(\"../models\");\n/**\n *\n */\nclass InfoApi extends runtime.BaseAPI {\n    /**\n     * Get Core API information\n     * Get Core API info\n     */\n    async getCoreApiInfoRaw() {\n        const queryParameters = {};\n        const headerParameters = {};\n        const response = await this.request({\n            path: `/v2/info`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n        return new runtime.JSONApiResponse(response, (jsonValue) => models_1.CoreNodeInfoResponseFromJSON(jsonValue));\n    }\n    /**\n     * Get Core API information\n     * Get Core API info\n     */\n    async getCoreApiInfo() {\n        const response = await this.getCoreApiInfoRaw();\n        return await response.value();\n    }\n    /**\n     * Get a given network\\'s target block time\n     */\n    async getNetworkBlockTimeByNetworkRaw(requestParameters) {\n        if (requestParameters.network === null || requestParameters.network === undefined) {\n            throw new runtime.RequiredError('network', 'Required parameter requestParameters.network was null or undefined when calling getNetworkBlockTimeByNetwork.');\n        }\n        const queryParameters = {};\n        const headerParameters = {};\n        const response = await this.request({\n            path: `/extended/v1/info/network_block_time/{network}`.replace(`{${\"network\"}}`, encodeURIComponent(String(requestParameters.network))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n        return new runtime.JSONApiResponse(response, (jsonValue) => models_1.NetworkBlockTimeResponseFromJSON(jsonValue));\n    }\n    /**\n     * Get a given network\\'s target block time\n     */\n    async getNetworkBlockTimeByNetwork(requestParameters) {\n        const response = await this.getNetworkBlockTimeByNetworkRaw(requestParameters);\n        return await response.value();\n    }\n    /**\n     * Get the network target block time\n     */\n    async getNetworkBlockTimesRaw() {\n        const queryParameters = {};\n        const headerParameters = {};\n        const response = await this.request({\n            path: `/extended/v1/info/network_block_times`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n        return new runtime.JSONApiResponse(response, (jsonValue) => models_1.NetworkBlockTimesResponseFromJSON(jsonValue));\n    }\n    /**\n     * Get the network target block time\n     */\n    async getNetworkBlockTimes() {\n        const response = await this.getNetworkBlockTimesRaw();\n        return await response.value();\n    }\n    /**\n     * Get Proof of Transfer (PoX) information. Can be used for Stacking.\n     * Get PoX details\n     */\n    async getPoxInfoRaw() {\n        const queryParameters = {};\n        const headerParameters = {};\n        const response = await this.request({\n            path: `/v2/pox`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n        return new runtime.JSONApiResponse(response, (jsonValue) => models_1.CoreNodePoxResponseFromJSON(jsonValue));\n    }\n    /**\n     * Get Proof of Transfer (PoX) information. Can be used for Stacking.\n     * Get PoX details\n     */\n    async getPoxInfo() {\n        const response = await this.getPoxInfoRaw();\n        return await response.value();\n    }\n    /**\n     * Get Blockchain API status\n     * Get Blockchain API status\n     */\n    async getStatusRaw() {\n        const queryParameters = {};\n        const headerParameters = {};\n        const response = await this.request({\n            path: `/extended/v1/status`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n        return new runtime.VoidApiResponse(response);\n    }\n    /**\n     * Get Blockchain API status\n     * Get Blockchain API status\n     */\n    async getStatus() {\n        await this.getStatusRaw();\n    }\n}\nexports.InfoApi = InfoApi;\n/**\n    * @export\n    * @enum {string}\n    */\nvar GetNetworkBlockTimeByNetworkNetworkEnum;\n(function (GetNetworkBlockTimeByNetworkNetworkEnum) {\n    GetNetworkBlockTimeByNetworkNetworkEnum[\"testnet\"] = \"testnet\";\n    GetNetworkBlockTimeByNetworkNetworkEnum[\"mainnet\"] = \"mainnet\";\n})(GetNetworkBlockTimeByNetworkNetworkEnum = exports.GetNetworkBlockTimeByNetworkNetworkEnum || (exports.GetNetworkBlockTimeByNetworkNetworkEnum = {}));\n//# sourceMappingURL=InfoApi.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RosettaApi = void 0;\nconst runtime = require(\"../runtime\");\nconst models_1 = require(\"../models\");\n/**\n *\n */\nclass RosettaApi extends runtime.BaseAPI {\n    /**\n     * An AccountBalanceRequest is utilized to make a balance request on the /account/balance endpoint. If the block_identifier is populated, a historical balance query should be performed.\n     * Get an Account Balance\n     */\n    async rosettaAccountBalanceRaw(requestParameters) {\n        if (requestParameters.rosettaAccountBalanceRequest === null || requestParameters.rosettaAccountBalanceRequest === undefined) {\n            throw new runtime.RequiredError('rosettaAccountBalanceRequest', 'Required parameter requestParameters.rosettaAccountBalanceRequest was null or undefined when calling rosettaAccountBalance.');\n        }\n        const queryParameters = {};\n        const headerParameters = {};\n        headerParameters['Content-Type'] = 'application/json';\n        const response = await this.request({\n            path: `/rosetta/v1/account/balance`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: models_1.RosettaAccountBalanceRequestToJSON(requestParameters.rosettaAccountBalanceRequest),\n        });\n        return new runtime.JSONApiResponse(response, (jsonValue) => models_1.RosettaAccountBalanceResponseFromJSON(jsonValue));\n    }\n    /**\n     * An AccountBalanceRequest is utilized to make a balance request on the /account/balance endpoint. If the block_identifier is populated, a historical balance query should be performed.\n     * Get an Account Balance\n     */\n    async rosettaAccountBalance(requestParameters) {\n        const response = await this.rosettaAccountBalanceRaw(requestParameters);\n        return await response.value();\n    }\n    /**\n     * A BlockRequest is utilized to make a block request on the /block endpoint.\n     * Get a Block\n     */\n    async rosettaBlockRaw(requestParameters) {\n        if (requestParameters.rosettaBlockRequest === null || requestParameters.rosettaBlockRequest === undefined) {\n            throw new runtime.RequiredError('rosettaBlockRequest', 'Required parameter requestParameters.rosettaBlockRequest was null or undefined when calling rosettaBlock.');\n        }\n        const queryParameters = {};\n        const headerParameters = {};\n        headerParameters['Content-Type'] = 'application/json';\n        const response = await this.request({\n            path: `/rosetta/v1/block`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: models_1.RosettaBlockRequestToJSON(requestParameters.rosettaBlockRequest),\n        });\n        return new runtime.JSONApiResponse(response, (jsonValue) => models_1.RosettaBlockResponseFromJSON(jsonValue));\n    }\n    /**\n     * A BlockRequest is utilized to make a block request on the /block endpoint.\n     * Get a Block\n     */\n    async rosettaBlock(requestParameters) {\n        const response = await this.rosettaBlockRaw(requestParameters);\n        return await response.value();\n    }\n    /**\n     * A BlockTransactionRequest is used to fetch a Transaction included in a block that is not returned in a BlockResponse.\n     * Get a Block Transaction\n     */\n    async rosettaBlockTransactionRaw(requestParameters) {\n        if (requestParameters.rosettaBlockTransactionRequest === null || requestParameters.rosettaBlockTransactionRequest === undefined) {\n            throw new runtime.RequiredError('rosettaBlockTransactionRequest', 'Required parameter requestParameters.rosettaBlockTransactionRequest was null or undefined when calling rosettaBlockTransaction.');\n        }\n        const queryParameters = {};\n        const headerParameters = {};\n        headerParameters['Content-Type'] = 'application/json';\n        const response = await this.request({\n            path: `/rosetta/v1/block/transaction`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: models_1.RosettaBlockTransactionRequestToJSON(requestParameters.rosettaBlockTransactionRequest),\n        });\n        return new runtime.JSONApiResponse(response, (jsonValue) => models_1.RosettaBlockTransactionResponseFromJSON(jsonValue));\n    }\n    /**\n     * A BlockTransactionRequest is used to fetch a Transaction included in a block that is not returned in a BlockResponse.\n     * Get a Block Transaction\n     */\n    async rosettaBlockTransaction(requestParameters) {\n        const response = await this.rosettaBlockTransactionRaw(requestParameters);\n        return await response.value();\n    }\n    /**\n     * Take unsigned transaction and signature, combine both and return signed transaction\n     * Create Network Transaction from Signatures\n     */\n    async rosettaConstructionCombineRaw(requestParameters) {\n        if (requestParameters.rosettaConstructionCombineRequest === null || requestParameters.rosettaConstructionCombineRequest === undefined) {\n            throw new runtime.RequiredError('rosettaConstructionCombineRequest', 'Required parameter requestParameters.rosettaConstructionCombineRequest was null or undefined when calling rosettaConstructionCombine.');\n        }\n        const queryParameters = {};\n        const headerParameters = {};\n        headerParameters['Content-Type'] = 'application/json';\n        const response = await this.request({\n            path: `/rosetta/v1/construction/combine`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: models_1.RosettaConstructionCombineRequestToJSON(requestParameters.rosettaConstructionCombineRequest),\n        });\n        return new runtime.JSONApiResponse(response, (jsonValue) => models_1.RosettaConstructionCombineResponseFromJSON(jsonValue));\n    }\n    /**\n     * Take unsigned transaction and signature, combine both and return signed transaction\n     * Create Network Transaction from Signatures\n     */\n    async rosettaConstructionCombine(requestParameters) {\n        const response = await this.rosettaConstructionCombineRaw(requestParameters);\n        return await response.value();\n    }\n    /**\n     * TODO\n     * Derive an AccountIdentifier from a PublicKey\n     */\n    async rosettaConstructionDeriveRaw(requestParameters) {\n        if (requestParameters.rosettaConstructionDeriveRequest === null || requestParameters.rosettaConstructionDeriveRequest === undefined) {\n            throw new runtime.RequiredError('rosettaConstructionDeriveRequest', 'Required parameter requestParameters.rosettaConstructionDeriveRequest was null or undefined when calling rosettaConstructionDerive.');\n        }\n        const queryParameters = {};\n        const headerParameters = {};\n        headerParameters['Content-Type'] = 'application/json';\n        const response = await this.request({\n            path: `/rosetta/v1/construction/derive`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: models_1.RosettaConstructionDeriveRequestToJSON(requestParameters.rosettaConstructionDeriveRequest),\n        });\n        return new runtime.JSONApiResponse(response, (jsonValue) => models_1.RosettaConstructionDeriveResponseFromJSON(jsonValue));\n    }\n    /**\n     * TODO\n     * Derive an AccountIdentifier from a PublicKey\n     */\n    async rosettaConstructionDerive(requestParameters) {\n        const response = await this.rosettaConstructionDeriveRaw(requestParameters);\n        return await response.value();\n    }\n    /**\n     * TODO\n     * Get the Hash of a Signed Transaction\n     */\n    async rosettaConstructionHashRaw(requestParameters) {\n        if (requestParameters.rosettaConstructionHashRequest === null || requestParameters.rosettaConstructionHashRequest === undefined) {\n            throw new runtime.RequiredError('rosettaConstructionHashRequest', 'Required parameter requestParameters.rosettaConstructionHashRequest was null or undefined when calling rosettaConstructionHash.');\n        }\n        const queryParameters = {};\n        const headerParameters = {};\n        headerParameters['Content-Type'] = 'application/json';\n        const response = await this.request({\n            path: `/rosetta/v1/construction/hash`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: models_1.RosettaConstructionHashRequestToJSON(requestParameters.rosettaConstructionHashRequest),\n        });\n        return new runtime.JSONApiResponse(response, (jsonValue) => models_1.RosettaConstructionHashResponseFromJSON(jsonValue));\n    }\n    /**\n     * TODO\n     * Get the Hash of a Signed Transaction\n     */\n    async rosettaConstructionHash(requestParameters) {\n        const response = await this.rosettaConstructionHashRaw(requestParameters);\n        return await response.value();\n    }\n    /**\n     * TODO\n     * Get Metadata for Transaction Construction\n     */\n    async rosettaConstructionMetadataRaw(requestParameters) {\n        if (requestParameters.rosettaConstructionMetadataRequest === null || requestParameters.rosettaConstructionMetadataRequest === undefined) {\n            throw new runtime.RequiredError('rosettaConstructionMetadataRequest', 'Required parameter requestParameters.rosettaConstructionMetadataRequest was null or undefined when calling rosettaConstructionMetadata.');\n        }\n        const queryParameters = {};\n        const headerParameters = {};\n        headerParameters['Content-Type'] = 'application/json';\n        const response = await this.request({\n            path: `/rosetta/v1/construction/metadata`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: models_1.RosettaConstructionMetadataRequestToJSON(requestParameters.rosettaConstructionMetadataRequest),\n        });\n        return new runtime.JSONApiResponse(response, (jsonValue) => models_1.RosettaConstructionMetadataResponseFromJSON(jsonValue));\n    }\n    /**\n     * TODO\n     * Get Metadata for Transaction Construction\n     */\n    async rosettaConstructionMetadata(requestParameters) {\n        const response = await this.rosettaConstructionMetadataRaw(requestParameters);\n        return await response.value();\n    }\n    /**\n     * TODO\n     * Parse a Transaction\n     */\n    async rosettaConstructionParseRaw(requestParameters) {\n        if (requestParameters.rosettaConstructionParseRequest === null || requestParameters.rosettaConstructionParseRequest === undefined) {\n            throw new runtime.RequiredError('rosettaConstructionParseRequest', 'Required parameter requestParameters.rosettaConstructionParseRequest was null or undefined when calling rosettaConstructionParse.');\n        }\n        const queryParameters = {};\n        const headerParameters = {};\n        headerParameters['Content-Type'] = 'application/json';\n        const response = await this.request({\n            path: `/rosetta/v1/construction/parse`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: models_1.RosettaConstructionParseRequestToJSON(requestParameters.rosettaConstructionParseRequest),\n        });\n        return new runtime.JSONApiResponse(response, (jsonValue) => models_1.RosettaConstructionParseResponseFromJSON(jsonValue));\n    }\n    /**\n     * TODO\n     * Parse a Transaction\n     */\n    async rosettaConstructionParse(requestParameters) {\n        const response = await this.rosettaConstructionParseRaw(requestParameters);\n        return await response.value();\n    }\n    /**\n     * Generate and unsigned transaction from operations and metadata\n     * Generate an Unsigned Transaction and Signing Payloads\n     */\n    async rosettaConstructionPayloadsRaw(requestParameters) {\n        if (requestParameters.rosettaConstructionPayloadsRequest === null || requestParameters.rosettaConstructionPayloadsRequest === undefined) {\n            throw new runtime.RequiredError('rosettaConstructionPayloadsRequest', 'Required parameter requestParameters.rosettaConstructionPayloadsRequest was null or undefined when calling rosettaConstructionPayloads.');\n        }\n        const queryParameters = {};\n        const headerParameters = {};\n        headerParameters['Content-Type'] = 'application/json';\n        const response = await this.request({\n            path: `/rosetta/v1/construction/payloads`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: models_1.RosettaConstructionPayloadsRequestToJSON(requestParameters.rosettaConstructionPayloadsRequest),\n        });\n        return new runtime.JSONApiResponse(response, (jsonValue) => models_1.RosettaConstructionPayloadResponseFromJSON(jsonValue));\n    }\n    /**\n     * Generate and unsigned transaction from operations and metadata\n     * Generate an Unsigned Transaction and Signing Payloads\n     */\n    async rosettaConstructionPayloads(requestParameters) {\n        const response = await this.rosettaConstructionPayloadsRaw(requestParameters);\n        return await response.value();\n    }\n    /**\n     * TODO\n     * Create a Request to Fetch Metadata\n     */\n    async rosettaConstructionPreprocessRaw(requestParameters) {\n        if (requestParameters.rosettaConstructionPreprocessRequest === null || requestParameters.rosettaConstructionPreprocessRequest === undefined) {\n            throw new runtime.RequiredError('rosettaConstructionPreprocessRequest', 'Required parameter requestParameters.rosettaConstructionPreprocessRequest was null or undefined when calling rosettaConstructionPreprocess.');\n        }\n        const queryParameters = {};\n        const headerParameters = {};\n        headerParameters['Content-Type'] = 'application/json';\n        const response = await this.request({\n            path: `/rosetta/v1/construction/preprocess`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: models_1.RosettaConstructionPreprocessRequestToJSON(requestParameters.rosettaConstructionPreprocessRequest),\n        });\n        return new runtime.JSONApiResponse(response, (jsonValue) => models_1.RosettaConstructionPreprocessResponseFromJSON(jsonValue));\n    }\n    /**\n     * TODO\n     * Create a Request to Fetch Metadata\n     */\n    async rosettaConstructionPreprocess(requestParameters) {\n        const response = await this.rosettaConstructionPreprocessRaw(requestParameters);\n        return await response.value();\n    }\n    /**\n     * Submit a pre-signed transaction to the node.\n     * Submit a Signed Transaction\n     */\n    async rosettaConstructionSubmitRaw(requestParameters) {\n        if (requestParameters.rosettaConstructionSubmitRequest === null || requestParameters.rosettaConstructionSubmitRequest === undefined) {\n            throw new runtime.RequiredError('rosettaConstructionSubmitRequest', 'Required parameter requestParameters.rosettaConstructionSubmitRequest was null or undefined when calling rosettaConstructionSubmit.');\n        }\n        const queryParameters = {};\n        const headerParameters = {};\n        headerParameters['Content-Type'] = 'application/json';\n        const response = await this.request({\n            path: `/rosetta/v1/construction/submit`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: models_1.RosettaConstructionSubmitRequestToJSON(requestParameters.rosettaConstructionSubmitRequest),\n        });\n        return new runtime.JSONApiResponse(response, (jsonValue) => models_1.RosettaConstructionSubmitResponseFromJSON(jsonValue));\n    }\n    /**\n     * Submit a pre-signed transaction to the node.\n     * Submit a Signed Transaction\n     */\n    async rosettaConstructionSubmit(requestParameters) {\n        const response = await this.rosettaConstructionSubmitRaw(requestParameters);\n        return await response.value();\n    }\n    /**\n     * Get all Transaction Identifiers in the mempool.\n     * Get All Mempool Transactions\n     */\n    async rosettaMempoolRaw(requestParameters) {\n        if (requestParameters.rosettaMempoolRequest === null || requestParameters.rosettaMempoolRequest === undefined) {\n            throw new runtime.RequiredError('rosettaMempoolRequest', 'Required parameter requestParameters.rosettaMempoolRequest was null or undefined when calling rosettaMempool.');\n        }\n        const queryParameters = {};\n        const headerParameters = {};\n        headerParameters['Content-Type'] = 'application/json';\n        const response = await this.request({\n            path: `/rosetta/v1/mempool`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: models_1.RosettaMempoolRequestToJSON(requestParameters.rosettaMempoolRequest),\n        });\n        return new runtime.JSONApiResponse(response, (jsonValue) => models_1.RosettaMempoolResponseFromJSON(jsonValue));\n    }\n    /**\n     * Get all Transaction Identifiers in the mempool.\n     * Get All Mempool Transactions\n     */\n    async rosettaMempool(requestParameters) {\n        const response = await this.rosettaMempoolRaw(requestParameters);\n        return await response.value();\n    }\n    /**\n     * A MempoolTransactionRequest is utilized to retrieve a transaction from the mempool.\n     * Get a Mempool Transaction\n     */\n    async rosettaMempoolTransactionRaw(requestParameters) {\n        if (requestParameters.rosettaMempoolTransactionRequest === null || requestParameters.rosettaMempoolTransactionRequest === undefined) {\n            throw new runtime.RequiredError('rosettaMempoolTransactionRequest', 'Required parameter requestParameters.rosettaMempoolTransactionRequest was null or undefined when calling rosettaMempoolTransaction.');\n        }\n        const queryParameters = {};\n        const headerParameters = {};\n        headerParameters['Content-Type'] = 'application/json';\n        const response = await this.request({\n            path: `/rosetta/v1/mempool/transaction`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: models_1.RosettaMempoolTransactionRequestToJSON(requestParameters.rosettaMempoolTransactionRequest),\n        });\n        return new runtime.JSONApiResponse(response, (jsonValue) => models_1.RosettaMempoolTransactionResponseFromJSON(jsonValue));\n    }\n    /**\n     * A MempoolTransactionRequest is utilized to retrieve a transaction from the mempool.\n     * Get a Mempool Transaction\n     */\n    async rosettaMempoolTransaction(requestParameters) {\n        const response = await this.rosettaMempoolTransactionRaw(requestParameters);\n        return await response.value();\n    }\n    /**\n     * This endpoint returns a list of NetworkIdentifiers that the Rosetta server supports.\n     * Get List of Available Networks\n     */\n    async rosettaNetworkListRaw() {\n        const queryParameters = {};\n        const headerParameters = {};\n        const response = await this.request({\n            path: `/rosetta/v1/network/list`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n        return new runtime.JSONApiResponse(response, (jsonValue) => models_1.RosettaNetworkListResponseFromJSON(jsonValue));\n    }\n    /**\n     * This endpoint returns a list of NetworkIdentifiers that the Rosetta server supports.\n     * Get List of Available Networks\n     */\n    async rosettaNetworkList() {\n        const response = await this.rosettaNetworkListRaw();\n        return await response.value();\n    }\n    /**\n     * This endpoint returns the version information and allowed network-specific types for a NetworkIdentifier. Any NetworkIdentifier returned by /network/list should be accessible here. Because options are retrievable in the context of a NetworkIdentifier, it is possible to define unique options for each network.\n     * Get Network Options\n     */\n    async rosettaNetworkOptionsRaw(requestParameters) {\n        if (requestParameters.rosettaOptionsRequest === null || requestParameters.rosettaOptionsRequest === undefined) {\n            throw new runtime.RequiredError('rosettaOptionsRequest', 'Required parameter requestParameters.rosettaOptionsRequest was null or undefined when calling rosettaNetworkOptions.');\n        }\n        const queryParameters = {};\n        const headerParameters = {};\n        headerParameters['Content-Type'] = 'application/json';\n        const response = await this.request({\n            path: `/rosetta/v1/network/options`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: models_1.RosettaOptionsRequestToJSON(requestParameters.rosettaOptionsRequest),\n        });\n        return new runtime.JSONApiResponse(response, (jsonValue) => models_1.RosettaNetworkOptionsResponseFromJSON(jsonValue));\n    }\n    /**\n     * This endpoint returns the version information and allowed network-specific types for a NetworkIdentifier. Any NetworkIdentifier returned by /network/list should be accessible here. Because options are retrievable in the context of a NetworkIdentifier, it is possible to define unique options for each network.\n     * Get Network Options\n     */\n    async rosettaNetworkOptions(requestParameters) {\n        const response = await this.rosettaNetworkOptionsRaw(requestParameters);\n        return await response.value();\n    }\n    /**\n     * This endpoint returns the current status of the network requested. Any NetworkIdentifier returned by /network/list should be accessible here.\n     * Get Network Status\n     */\n    async rosettaNetworkStatusRaw(requestParameters) {\n        if (requestParameters.rosettaStatusRequest === null || requestParameters.rosettaStatusRequest === undefined) {\n            throw new runtime.RequiredError('rosettaStatusRequest', 'Required parameter requestParameters.rosettaStatusRequest was null or undefined when calling rosettaNetworkStatus.');\n        }\n        const queryParameters = {};\n        const headerParameters = {};\n        headerParameters['Content-Type'] = 'application/json';\n        const response = await this.request({\n            path: `/rosetta/v1/network/status`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: models_1.RosettaStatusRequestToJSON(requestParameters.rosettaStatusRequest),\n        });\n        return new runtime.JSONApiResponse(response);\n    }\n    /**\n     * This endpoint returns the current status of the network requested. Any NetworkIdentifier returned by /network/list should be accessible here.\n     * Get Network Status\n     */\n    async rosettaNetworkStatus(requestParameters) {\n        const response = await this.rosettaNetworkStatusRaw(requestParameters);\n        return await response.value();\n    }\n}\nexports.RosettaApi = RosettaApi;\n//# sourceMappingURL=RosettaApi.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SearchApi = void 0;\nconst runtime = require(\"../runtime\");\n/**\n *\n */\nclass SearchApi extends runtime.BaseAPI {\n    /**\n     * Search blocks, transactions, contracts, or accounts by hash/ID\n     * Search\n     */\n    async searchByIdRaw(requestParameters) {\n        if (requestParameters.id === null || requestParameters.id === undefined) {\n            throw new runtime.RequiredError('id', 'Required parameter requestParameters.id was null or undefined when calling searchById.');\n        }\n        const queryParameters = {};\n        const headerParameters = {};\n        const response = await this.request({\n            path: `/extended/v1/search/{id}`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters.id))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n        return new runtime.JSONApiResponse(response);\n    }\n    /**\n     * Search blocks, transactions, contracts, or accounts by hash/ID\n     * Search\n     */\n    async searchById(requestParameters) {\n        const response = await this.searchByIdRaw(requestParameters);\n        return await response.value();\n    }\n}\nexports.SearchApi = SearchApi;\n//# sourceMappingURL=SearchApi.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SmartContractsApi = void 0;\nconst runtime = require(\"../runtime\");\nconst models_1 = require(\"../models\");\n/**\n *\n */\nclass SmartContractsApi extends runtime.BaseAPI {\n    /**\n     * Call a read-only public function on a given smart contract.  The smart contract and function are specified using the URL path. The arguments and the simulated tx-sender are supplied via the POST body in the following JSON format:\n     * Call read-only function\n     */\n    async callReadOnlyFunctionRaw(requestParameters) {\n        if (requestParameters.contractAddress === null || requestParameters.contractAddress === undefined) {\n            throw new runtime.RequiredError('contractAddress', 'Required parameter requestParameters.contractAddress was null or undefined when calling callReadOnlyFunction.');\n        }\n        if (requestParameters.contractName === null || requestParameters.contractName === undefined) {\n            throw new runtime.RequiredError('contractName', 'Required parameter requestParameters.contractName was null or undefined when calling callReadOnlyFunction.');\n        }\n        if (requestParameters.functionName === null || requestParameters.functionName === undefined) {\n            throw new runtime.RequiredError('functionName', 'Required parameter requestParameters.functionName was null or undefined when calling callReadOnlyFunction.');\n        }\n        if (requestParameters.readOnlyFunctionArgs === null || requestParameters.readOnlyFunctionArgs === undefined) {\n            throw new runtime.RequiredError('readOnlyFunctionArgs', 'Required parameter requestParameters.readOnlyFunctionArgs was null or undefined when calling callReadOnlyFunction.');\n        }\n        const queryParameters = {};\n        if (requestParameters.tip !== undefined) {\n            queryParameters['tip'] = requestParameters.tip;\n        }\n        const headerParameters = {};\n        headerParameters['Content-Type'] = 'application/json';\n        const response = await this.request({\n            path: `/v2/contracts/call-read/{contract_address}/{contract_name}/{function_name}`.replace(`{${\"contract_address\"}}`, encodeURIComponent(String(requestParameters.contractAddress))).replace(`{${\"contract_name\"}}`, encodeURIComponent(String(requestParameters.contractName))).replace(`{${\"function_name\"}}`, encodeURIComponent(String(requestParameters.functionName))),\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: models_1.ReadOnlyFunctionArgsToJSON(requestParameters.readOnlyFunctionArgs),\n        });\n        return new runtime.JSONApiResponse(response, (jsonValue) => models_1.ReadOnlyFunctionSuccessResponseFromJSON(jsonValue));\n    }\n    /**\n     * Call a read-only public function on a given smart contract.  The smart contract and function are specified using the URL path. The arguments and the simulated tx-sender are supplied via the POST body in the following JSON format:\n     * Call read-only function\n     */\n    async callReadOnlyFunction(requestParameters) {\n        const response = await this.callReadOnlyFunctionRaw(requestParameters);\n        return await response.value();\n    }\n    /**\n     * Get contract info using the contract ID\n     * Get contract info\n     */\n    async getContractByIdRaw(requestParameters) {\n        if (requestParameters.contractId === null || requestParameters.contractId === undefined) {\n            throw new runtime.RequiredError('contractId', 'Required parameter requestParameters.contractId was null or undefined when calling getContractById.');\n        }\n        const queryParameters = {};\n        const headerParameters = {};\n        const response = await this.request({\n            path: `/extended/v1/contract/{contract_id}`.replace(`{${\"contract_id\"}}`, encodeURIComponent(String(requestParameters.contractId))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n        return new runtime.JSONApiResponse(response);\n    }\n    /**\n     * Get contract info using the contract ID\n     * Get contract info\n     */\n    async getContractById(requestParameters) {\n        const response = await this.getContractByIdRaw(requestParameters);\n        return await response.value();\n    }\n    /**\n     * Attempt to fetch data from a contract data map. The contract is identified with [Stacks Address] and [Contract Name] in the URL path. The map is identified with [Map Name].  The key to lookup in the map is supplied via the POST body. This should be supplied as the hex string serialization of the key (which should be a Clarity value). Note, this is a JSON string atom.  In the response, `data` is the hex serialization of the map response. Note that map responses are Clarity option types, for non-existent values, this is a serialized none, and for all other responses, it is a serialized (some ...) object.\n     * Get specific data-map inside a contract\n     */\n    async getContractDataMapEntryRaw(requestParameters) {\n        if (requestParameters.contractAddress === null || requestParameters.contractAddress === undefined) {\n            throw new runtime.RequiredError('contractAddress', 'Required parameter requestParameters.contractAddress was null or undefined when calling getContractDataMapEntry.');\n        }\n        if (requestParameters.contractName === null || requestParameters.contractName === undefined) {\n            throw new runtime.RequiredError('contractName', 'Required parameter requestParameters.contractName was null or undefined when calling getContractDataMapEntry.');\n        }\n        if (requestParameters.mapName === null || requestParameters.mapName === undefined) {\n            throw new runtime.RequiredError('mapName', 'Required parameter requestParameters.mapName was null or undefined when calling getContractDataMapEntry.');\n        }\n        if (requestParameters.key === null || requestParameters.key === undefined) {\n            throw new runtime.RequiredError('key', 'Required parameter requestParameters.key was null or undefined when calling getContractDataMapEntry.');\n        }\n        const queryParameters = {};\n        if (requestParameters.proof !== undefined) {\n            queryParameters['proof'] = requestParameters.proof;\n        }\n        if (requestParameters.tip !== undefined) {\n            queryParameters['tip'] = requestParameters.tip;\n        }\n        const headerParameters = {};\n        headerParameters['Content-Type'] = 'application/json';\n        const response = await this.request({\n            path: `/v2/map_entry/{contract_address}/{contract_name}/{map_name}`.replace(`{${\"contract_address\"}}`, encodeURIComponent(String(requestParameters.contractAddress))).replace(`{${\"contract_name\"}}`, encodeURIComponent(String(requestParameters.contractName))).replace(`{${\"map_name\"}}`, encodeURIComponent(String(requestParameters.mapName))),\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: requestParameters.key,\n        });\n        return new runtime.JSONApiResponse(response, (jsonValue) => models_1.MapEntryResponseFromJSON(jsonValue));\n    }\n    /**\n     * Attempt to fetch data from a contract data map. The contract is identified with [Stacks Address] and [Contract Name] in the URL path. The map is identified with [Map Name].  The key to lookup in the map is supplied via the POST body. This should be supplied as the hex string serialization of the key (which should be a Clarity value). Note, this is a JSON string atom.  In the response, `data` is the hex serialization of the map response. Note that map responses are Clarity option types, for non-existent values, this is a serialized none, and for all other responses, it is a serialized (some ...) object.\n     * Get specific data-map inside a contract\n     */\n    async getContractDataMapEntry(requestParameters) {\n        const response = await this.getContractDataMapEntryRaw(requestParameters);\n        return await response.value();\n    }\n    /**\n     * Get contract events using a contract ID\n     * Get contract events\n     */\n    async getContractEventsByIdRaw(requestParameters) {\n        if (requestParameters.contractId === null || requestParameters.contractId === undefined) {\n            throw new runtime.RequiredError('contractId', 'Required parameter requestParameters.contractId was null or undefined when calling getContractEventsById.');\n        }\n        const queryParameters = {};\n        if (requestParameters.limit !== undefined) {\n            queryParameters['limit'] = requestParameters.limit;\n        }\n        if (requestParameters.offset !== undefined) {\n            queryParameters['offset'] = requestParameters.offset;\n        }\n        const headerParameters = {};\n        const response = await this.request({\n            path: `/extended/v1/contract/{contract_id}/events`.replace(`{${\"contract_id\"}}`, encodeURIComponent(String(requestParameters.contractId))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n        return new runtime.JSONApiResponse(response);\n    }\n    /**\n     * Get contract events using a contract ID\n     * Get contract events\n     */\n    async getContractEventsById(requestParameters) {\n        const response = await this.getContractEventsByIdRaw(requestParameters);\n        return await response.value();\n    }\n    /**\n     * Get contract interface using a `contract_address` and `contract name`\n     * Get contract interface\n     */\n    async getContractInterfaceRaw(requestParameters) {\n        if (requestParameters.contractAddress === null || requestParameters.contractAddress === undefined) {\n            throw new runtime.RequiredError('contractAddress', 'Required parameter requestParameters.contractAddress was null or undefined when calling getContractInterface.');\n        }\n        if (requestParameters.contractName === null || requestParameters.contractName === undefined) {\n            throw new runtime.RequiredError('contractName', 'Required parameter requestParameters.contractName was null or undefined when calling getContractInterface.');\n        }\n        const queryParameters = {};\n        if (requestParameters.tip !== undefined) {\n            queryParameters['tip'] = requestParameters.tip;\n        }\n        const headerParameters = {};\n        const response = await this.request({\n            path: `/v2/contracts/interface/{contract_address}/{contract_name}`.replace(`{${\"contract_address\"}}`, encodeURIComponent(String(requestParameters.contractAddress))).replace(`{${\"contract_name\"}}`, encodeURIComponent(String(requestParameters.contractName))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n        return new runtime.JSONApiResponse(response, (jsonValue) => models_1.ContractInterfaceResponseFromJSON(jsonValue));\n    }\n    /**\n     * Get contract interface using a `contract_address` and `contract name`\n     * Get contract interface\n     */\n    async getContractInterface(requestParameters) {\n        const response = await this.getContractInterfaceRaw(requestParameters);\n        return await response.value();\n    }\n    /**\n     * Returns the Clarity source code of a given contract, along with the block height it was published in, and the MARF proof for the data\n     * Get contract source\n     */\n    async getContractSourceRaw(requestParameters) {\n        if (requestParameters.contractAddress === null || requestParameters.contractAddress === undefined) {\n            throw new runtime.RequiredError('contractAddress', 'Required parameter requestParameters.contractAddress was null or undefined when calling getContractSource.');\n        }\n        if (requestParameters.contractName === null || requestParameters.contractName === undefined) {\n            throw new runtime.RequiredError('contractName', 'Required parameter requestParameters.contractName was null or undefined when calling getContractSource.');\n        }\n        const queryParameters = {};\n        if (requestParameters.proof !== undefined) {\n            queryParameters['proof'] = requestParameters.proof;\n        }\n        if (requestParameters.tip !== undefined) {\n            queryParameters['tip'] = requestParameters.tip;\n        }\n        const headerParameters = {};\n        const response = await this.request({\n            path: `/v2/contracts/source/{contract_address}/{contract_name}`.replace(`{${\"contract_address\"}}`, encodeURIComponent(String(requestParameters.contractAddress))).replace(`{${\"contract_name\"}}`, encodeURIComponent(String(requestParameters.contractName))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n        return new runtime.JSONApiResponse(response, (jsonValue) => models_1.ContractSourceResponseFromJSON(jsonValue));\n    }\n    /**\n     * Returns the Clarity source code of a given contract, along with the block height it was published in, and the MARF proof for the data\n     * Get contract source\n     */\n    async getContractSource(requestParameters) {\n        const response = await this.getContractSourceRaw(requestParameters);\n        return await response.value();\n    }\n}\nexports.SmartContractsApi = SmartContractsApi;\n//# sourceMappingURL=SmartContractsApi.js.map","\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Stacks 2.0 Blockchain API\n * This is the documentation for the Stacks 2.0 Blockchain API.  It is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetTransactionListTypeEnum = exports.TransactionsApi = void 0;\nconst runtime = require(\"../runtime\");\nconst models_1 = require(\"../models\");\n/**\n *\n */\nclass TransactionsApi extends runtime.BaseAPI {\n    /**\n     * Get all recently-broadcast mempool transactions\n     * Get mempool transactions\n     */\n    async getMempoolTransactionListRaw(requestParameters) {\n        const queryParameters = {};\n        if (requestParameters.senderAddress !== undefined) {\n            queryParameters['sender_address'] = requestParameters.senderAddress;\n        }\n        if (requestParameters.recipientAddress !== undefined) {\n            queryParameters['recipient_address'] = requestParameters.recipientAddress;\n        }\n        if (requestParameters.address !== undefined) {\n            queryParameters['address'] = requestParameters.address;\n        }\n        if (requestParameters.limit !== undefined) {\n            queryParameters['limit'] = requestParameters.limit;\n        }\n        if (requestParameters.offset !== undefined) {\n            queryParameters['offset'] = requestParameters.offset;\n        }\n        const headerParameters = {};\n        const response = await this.request({\n            path: `/extended/v1/tx/mempool`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n        return new runtime.JSONApiResponse(response, (jsonValue) => models_1.MempoolTransactionListResponseFromJSON(jsonValue));\n    }\n    /**\n     * Get all recently-broadcast mempool transactions\n     * Get mempool transactions\n     */\n    async getMempoolTransactionList(requestParameters) {\n        const response = await this.getMempoolTransactionListRaw(requestParameters);\n        return await response.value();\n    }\n    /**\n     * Get a specific transaction by ID  `import type { Transaction } from \\'@blockstack/stacks-blockchain-api-types\\';`\n     * Get transaction\n     */\n    async getTransactionByIdRaw(requestParameters) {\n        if (requestParameters.txId === null || requestParameters.txId === undefined) {\n            throw new runtime.RequiredError('txId', 'Required parameter requestParameters.txId was null or undefined when calling getTransactionById.');\n        }\n        const queryParameters = {};\n        if (requestParameters.eventOffset !== undefined) {\n            queryParameters['event_offset'] = requestParameters.eventOffset;\n        }\n        if (requestParameters.eventLimit !== undefined) {\n            queryParameters['event_limit'] = requestParameters.eventLimit;\n        }\n        const headerParameters = {};\n        const response = await this.request({\n            path: `/extended/v1/tx/{tx_id}`.replace(`{${\"tx_id\"}}`, encodeURIComponent(String(requestParameters.txId))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n        return new runtime.JSONApiResponse(response);\n    }\n    /**\n     * Get a specific transaction by ID  `import type { Transaction } from \\'@blockstack/stacks-blockchain-api-types\\';`\n     * Get transaction\n     */\n    async getTransactionById(requestParameters) {\n        const response = await this.getTransactionByIdRaw(requestParameters);\n        return await response.value();\n    }\n    /**\n     * Get all recently mined transactions  If using TypeScript, import typings for this response from our types package:  `import type { TransactionResults } from \\'@blockstack/stacks-blockchain-api-types\\';`\n     * Get recent transactions\n     */\n    async getTransactionListRaw(requestParameters) {\n        const queryParameters = {};\n        if (requestParameters.limit !== undefined) {\n            queryParameters['limit'] = requestParameters.limit;\n        }\n        if (requestParameters.offset !== undefined) {\n            queryParameters['offset'] = requestParameters.offset;\n        }\n        if (requestParameters.type) {\n            queryParameters['type'] = requestParameters.type;\n        }\n        const headerParameters = {};\n        const response = await this.request({\n            path: `/extended/v1/tx`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n        return new runtime.JSONApiResponse(response, (jsonValue) => models_1.TransactionResultsFromJSON(jsonValue));\n    }\n    /**\n     * Get all recently mined transactions  If using TypeScript, import typings for this response from our types package:  `import type { TransactionResults } from \\'@blockstack/stacks-blockchain-api-types\\';`\n     * Get recent transactions\n     */\n    async getTransactionList(requestParameters) {\n        const response = await this.getTransactionListRaw(requestParameters);\n        return await response.value();\n    }\n    /**\n     * Broadcast raw transactions on the network. You can use the [@stacks/transactions](https://github.com/blockstack/stacks.js) project to generate a raw transaction payload.\n     * Broadcast raw transaction\n     */\n    async postCoreNodeTransactionsRaw(requestParameters) {\n        const queryParameters = {};\n        const headerParameters = {};\n        headerParameters['Content-Type'] = 'application/octet-stream';\n        const response = await this.request({\n            path: `/v2/transactions`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: requestParameters.body,\n        });\n        return new runtime.TextApiResponse(response);\n    }\n    /**\n     * Broadcast raw transactions on the network. You can use the [@stacks/transactions](https://github.com/blockstack/stacks.js) project to generate a raw transaction payload.\n     * Broadcast raw transaction\n     */\n    async postCoreNodeTransactions(requestParameters) {\n        const response = await this.postCoreNodeTransactionsRaw(requestParameters);\n        return await response.value();\n    }\n}\nexports.TransactionsApi = TransactionsApi;\n/**\n    * @export\n    * @enum {string}\n    */\nvar GetTransactionListTypeEnum;\n(function (GetTransactionListTypeEnum) {\n    GetTransactionListTypeEnum[\"coinbase\"] = \"coinbase\";\n    GetTransactionListTypeEnum[\"token_transfer\"] = \"token_transfer\";\n    GetTransactionListTypeEnum[\"smart_contract\"] = \"smart_contract\";\n    GetTransactionListTypeEnum[\"contract_call\"] = \"contract_call\";\n    GetTransactionListTypeEnum[\"poison_microblock\"] = \"poison_microblock\";\n})(GetTransactionListTypeEnum = exports.GetTransactionListTypeEnum || (exports.GetTransactionListTypeEnum = {}));\n//# sourceMappingURL=TransactionsApi.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.connectWebSocketClient = exports.StacksApiWebSocketClient = void 0;\nconst JsonRpcLite = require(\"jsonrpc-lite\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst runtime_1 = require(\"../generated/runtime\");\nclass StacksApiWebSocketClient {\n    constructor(webSocket) {\n        this.idCursor = 0;\n        this.pendingRequests = new Map();\n        this.eventEmitter = new eventemitter3_1.EventEmitter();\n        this.webSocket = webSocket;\n        webSocket.addEventListener('message', event => {\n            const parsed = JsonRpcLite.parse(event.data);\n            const rpcObjects = Array.isArray(parsed) ? parsed : [parsed];\n            rpcObjects.forEach(obj => {\n                if (obj.type === \"notification\" /* notification */) {\n                    this.handleNotification(obj.payload);\n                }\n                else if (obj.type === \"success\" /* success */) {\n                    const req = this.pendingRequests.get(obj.payload.id);\n                    if (req) {\n                        this.pendingRequests.delete(obj.payload.id);\n                        req.resolve(obj.payload.result);\n                    }\n                }\n                else if (obj.type === \"error\" /* error */) {\n                    const req = this.pendingRequests.get(obj.payload.id);\n                    if (req) {\n                        this.pendingRequests.delete(obj.payload.id);\n                        req.reject(obj.payload.error);\n                    }\n                }\n            });\n        });\n    }\n    static async connect(url = runtime_1.BASE_PATH) {\n        // `ws://${addr}/extended/v1/ws`;\n        let urlObj;\n        try {\n            urlObj = new URL(url);\n        }\n        catch (_error) {\n            urlObj = new URL(`ws://${url}`);\n        }\n        if (urlObj.protocol === 'https:') {\n            urlObj.protocol = 'wss:';\n        }\n        else if (urlObj.protocol === 'http:') {\n            urlObj.protocol = 'ws:';\n        }\n        if (urlObj.pathname === '/') {\n            urlObj.pathname = '/extended/v1/ws';\n        }\n        const webSocket = await new Promise((resolve, reject) => {\n            const webSocket = new (createWebSocket())(urlObj.toString());\n            webSocket.onopen = () => resolve(webSocket);\n            webSocket.onerror = error => reject(error);\n        });\n        return new StacksApiWebSocketClient(webSocket);\n    }\n    handleNotification(data) {\n        const method = data.method;\n        switch (method) {\n            case 'tx_update':\n                this.eventEmitter.emit('txUpdate', data.params);\n                break;\n            case 'address_tx_update':\n                this.eventEmitter.emit('addressTxUpdate', data.params);\n                break;\n            case 'address_balance_update':\n                this.eventEmitter.emit('addressBalanceUpdate', data.params);\n                break;\n        }\n    }\n    rpcCall(method, params) {\n        const rpcReq = JsonRpcLite.request(++this.idCursor, method, params);\n        return new Promise((resolve, reject) => {\n            this.pendingRequests.set(rpcReq.id, { resolve, reject });\n            this.webSocket.send(rpcReq.serialize());\n        });\n    }\n    async subscribeTxUpdates(txId, update) {\n        const params = { event: 'tx_update', tx_id: txId };\n        const subscribed = await this.rpcCall('subscribe', params);\n        const listener = (event) => {\n            if (event.tx_id === subscribed.tx_id) {\n                update(event);\n            }\n        };\n        this.eventEmitter.addListener('txUpdate', listener);\n        return {\n            unsubscribe: () => {\n                this.eventEmitter.removeListener('txUpdate', listener);\n                return this.rpcCall('unsubscribe', params);\n            },\n        };\n    }\n    async subscribeAddressTransactions(address, update) {\n        const params = { event: 'address_tx_update', address };\n        const subscribed = await this.rpcCall('subscribe', params);\n        const listener = (event) => {\n            if (event.address === subscribed.address) {\n                update(event);\n            }\n        };\n        this.eventEmitter.addListener('addressTxUpdate', listener);\n        return {\n            unsubscribe: () => {\n                this.eventEmitter.removeListener('addressTxUpdate', listener);\n                return this.rpcCall('unsubscribe', params);\n            },\n        };\n    }\n    async subscribeAddressBalanceUpdates(address, update) {\n        const params = {\n            event: 'address_balance_update',\n            address,\n        };\n        const subscribed = await this.rpcCall('subscribe', params);\n        const listener = (event) => {\n            if (event.address === subscribed.address) {\n                update(event);\n            }\n        };\n        this.eventEmitter.addListener('addressBalanceUpdate', listener);\n        return {\n            unsubscribe: () => {\n                this.eventEmitter.removeListener('addressBalanceUpdate', listener);\n                return this.rpcCall('unsubscribe', params);\n            },\n        };\n    }\n}\nexports.StacksApiWebSocketClient = StacksApiWebSocketClient;\nasync function connectWebSocketClient(url = runtime_1.BASE_PATH) {\n    return StacksApiWebSocketClient.connect(url);\n}\nexports.connectWebSocketClient = connectWebSocketClient;\n/**\n * Simple isomorphic WebSocket class lookup.\n * Uses global WebSocket (browsers) if available, otherwise, uses the Node.js `ws` lib.\n */\nfunction createWebSocket() {\n    if (typeof WebSocket !== 'undefined') {\n        return WebSocket;\n    }\n    else if (typeof global !== 'undefined' && global.WebSocket) {\n        return global.WebSocket;\n    }\n    else if (typeof window !== 'undefined' && window.WebSocket) {\n        return window.WebSocket;\n    }\n    else if (typeof self !== 'undefined' && self.WebSocket) {\n        return self.WebSocket;\n    }\n    else {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return require('ws');\n    }\n}\n//# sourceMappingURL=index.js.map","import {\n  BooleanCV,\n  OptionalCV,\n  BufferCV,\n  IntCV,\n  UIntCV,\n  StandardPrincipalCV,\n  ContractPrincipalCV,\n  ResponseErrorCV,\n  ResponseOkCV,\n  ListCV,\n  TupleCV,\n  StringAsciiCV,\n  StringUtf8CV,\n} from '.';\n\nimport { principalToString } from './types/principalCV';\nimport { CLARITY_INT_SIZE } from '../constants';\n\n/**\n * Type IDs corresponding to each of the Clarity value types as described here:\n * {@link https://github.com/blockstack/blockstack-core/blob/sip/sip-005/sip/sip-005-blocks-and-transactions.md#clarity-value-representation}\n */\nexport enum ClarityType {\n  Int = 0x00,\n  UInt = 0x01,\n  Buffer = 0x02,\n  BoolTrue = 0x03,\n  BoolFalse = 0x04,\n  PrincipalStandard = 0x05,\n  PrincipalContract = 0x06,\n  ResponseOk = 0x07,\n  ResponseErr = 0x08,\n  OptionalNone = 0x09,\n  OptionalSome = 0x0a,\n  List = 0x0b,\n  Tuple = 0x0c,\n  StringASCII = 0x0d,\n  StringUTF8 = 0x0e,\n}\n\nexport type ClarityValue =\n  | BooleanCV\n  | OptionalCV\n  | BufferCV\n  | IntCV\n  | UIntCV\n  | StandardPrincipalCV\n  | ContractPrincipalCV\n  | ResponseErrorCV\n  | ResponseOkCV\n  | ListCV\n  | TupleCV\n  | StringAsciiCV\n  | StringUtf8CV;\n\nexport function cvToString(val: ClarityValue, encoding: 'tryAscii' | 'hex' = 'hex'): string {\n  switch (val.type) {\n    case ClarityType.BoolTrue:\n      return 'true';\n    case ClarityType.BoolFalse:\n      return 'false';\n    case ClarityType.Int:\n      return val.value.fromTwos(CLARITY_INT_SIZE).toString();\n    case ClarityType.UInt:\n      return `u${val.value.toString()}`;\n    case ClarityType.Buffer:\n      if (encoding === 'tryAscii') {\n        const str = val.buffer.toString('ascii');\n        if (/[ -~]/.test(str)) {\n          return JSON.stringify(str);\n        }\n      }\n      return `0x${val.buffer.toString('hex')}`;\n    case ClarityType.OptionalNone:\n      return 'none';\n    case ClarityType.OptionalSome:\n      return `(some ${cvToString(val.value, encoding)})`;\n    case ClarityType.ResponseErr:\n      return `(err ${cvToString(val.value, encoding)})`;\n    case ClarityType.ResponseOk:\n      return `(ok ${cvToString(val.value, encoding)})`;\n    case ClarityType.PrincipalStandard:\n    case ClarityType.PrincipalContract:\n      return principalToString(val);\n    case ClarityType.List:\n      return `(list ${val.list.map(v => cvToString(v, encoding)).join(' ')})`;\n    case ClarityType.Tuple:\n      return `(tuple ${Object.keys(val.data)\n        .map(key => `(${key} ${cvToString(val.data[key], encoding)})`)\n        .join(' ')})`;\n    case ClarityType.StringASCII:\n      return `\"${val.data}\"`;\n    case ClarityType.StringUTF8:\n      return `u\"${val.data}\"`;\n  }\n}\n\nfunction cvToValue(val: ClarityValue): any {\n  switch (val.type) {\n    case ClarityType.BoolTrue:\n      return true;\n    case ClarityType.BoolFalse:\n      return false;\n    case ClarityType.Int:\n      return val.value.fromTwos(CLARITY_INT_SIZE).toNumber();\n    case ClarityType.UInt:\n      return val.value.toNumber();\n    case ClarityType.Buffer:\n      return `0x${val.buffer.toString('hex')}`;\n    case ClarityType.OptionalNone:\n      return null;\n    case ClarityType.OptionalSome:\n      return cvToJSON(val.value);\n    case ClarityType.ResponseErr:\n      return cvToJSON(val.value);\n    case ClarityType.ResponseOk:\n      return cvToJSON(val.value);\n    case ClarityType.PrincipalStandard:\n    case ClarityType.PrincipalContract:\n      return principalToString(val);\n    case ClarityType.List:\n      return val.list.map(v => cvToJSON(v));\n    case ClarityType.Tuple:\n      const result: { [key: string]: any } = {};\n      Object.keys(val.data).forEach(key => {\n        result[key] = cvToJSON(val.data[key]);\n      });\n      return result;\n    case ClarityType.StringASCII:\n      return val.data;\n    case ClarityType.StringUTF8:\n      return val.data;\n  }\n}\n\nexport function cvToJSON(val: ClarityValue): any {\n  switch (val.type) {\n    case ClarityType.ResponseErr:\n      return { type: getCVTypeString(val), value: cvToValue(val), success: false };\n    case ClarityType.ResponseOk:\n      return { type: getCVTypeString(val), value: cvToValue(val), success: true };\n    default:\n      return { type: getCVTypeString(val), value: cvToValue(val) };\n  }\n}\n\nexport function getCVTypeString(val: ClarityValue): string {\n  switch (val.type) {\n    case ClarityType.BoolTrue:\n    case ClarityType.BoolFalse:\n      return 'bool';\n    case ClarityType.Int:\n      return 'int';\n    case ClarityType.UInt:\n      return 'uint';\n    case ClarityType.Buffer:\n      return `(buff ${val.buffer.length})`;\n    case ClarityType.OptionalNone:\n      return '(optional none)';\n    case ClarityType.OptionalSome:\n      return `(optional ${getCVTypeString(val.value)})`;\n    case ClarityType.ResponseErr:\n      return `(response UnknownType ${getCVTypeString(val.value)})`;\n    case ClarityType.ResponseOk:\n      return `(response ${getCVTypeString(val.value)} UnknownType)`;\n    case ClarityType.PrincipalStandard:\n    case ClarityType.PrincipalContract:\n      return 'principal';\n    case ClarityType.List:\n      return `(list ${val.list.length} ${getCVTypeString(val.list[0])})`;\n    case ClarityType.Tuple:\n      return `(tuple ${Object.keys(val.data)\n        .map(key => `(${key} ${getCVTypeString(val.data[key])})`)\n        .join(' ')})`;\n    case ClarityType.StringASCII:\n      return `(string-ascii ${Buffer.from(val.data, 'ascii').length})`;\n    case ClarityType.StringUTF8:\n      return `(string-utf8 ${Buffer.from(val.data, 'utf8').length})`;\n  }\n}\n","// **Github:** https://github.com/teambition/jsonrpc-lite\n//\n// http://www.jsonrpc.org/specification\n// **License:** MIT\n'use strict';\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nconst isInteger = typeof Number.isSafeInteger === 'function'\n    ? Number.isSafeInteger // ECMAScript 2015\n    : function (num) {\n        return typeof num === 'number' && isFinite(num) && num === Math.floor(num) && Math.abs(num) <= 9007199254740991;\n    };\nexport class JsonRpc {\n    constructor() {\n        this.jsonrpc = '2.0';\n    }\n    serialize() {\n        return JSON.stringify(this);\n    }\n}\nJsonRpc.VERSION = '2.0';\nexport class RequestObject extends JsonRpc {\n    constructor(id, method, params) {\n        super();\n        this.id = id;\n        this.method = method;\n        if (params !== undefined) {\n            this.params = params;\n        }\n    }\n}\nexport class NotificationObject extends JsonRpc {\n    constructor(method, params) {\n        super();\n        this.method = method;\n        if (params !== undefined) {\n            this.params = params;\n        }\n    }\n}\nexport class SuccessObject extends JsonRpc {\n    constructor(id, result) {\n        super();\n        this.id = id;\n        this.result = result;\n    }\n}\nexport class ErrorObject extends JsonRpc {\n    // tslint:disable-next-line:no-shadowed-variable\n    constructor(id, error) {\n        super();\n        this.id = id;\n        this.error = error;\n        this.id = id;\n        this.error = error;\n    }\n}\nexport class JsonRpcParsed {\n    constructor(payload, type) {\n        this.payload = payload;\n        this.type = type;\n        this.payload = payload;\n        this.type = type;\n    }\n}\n/**\n * JsonRpcError Class\n *\n * @param  {String} message\n * @param  {Integer} code\n * @return {String} name: optional\n * @api public\n */\nexport class JsonRpcError {\n    constructor(message, code, data) {\n        this.message = message;\n        this.code = isInteger(code) ? code : 0;\n        if (data != null) {\n            this.data = data;\n        }\n    }\n}\nJsonRpcError.invalidRequest = function (data) {\n    return new JsonRpcError('Invalid request', -32600, data);\n};\nJsonRpcError.methodNotFound = function (data) {\n    return new JsonRpcError('Method not found', -32601, data);\n};\nJsonRpcError.invalidParams = function (data) {\n    return new JsonRpcError('Invalid params', -32602, data);\n};\nJsonRpcError.internalError = function (data) {\n    return new JsonRpcError('Internal error', -32603, data);\n};\nJsonRpcError.parseError = function (data) {\n    return new JsonRpcError('Parse error', -32700, data);\n};\n/**\n * Creates a JSON-RPC 2.0 request object\n *\n * @param  {String|Integer} id\n * @param  {String} method\n * @param  {Object|Array} [params]: optional\n * @return {Object} JsonRpc object\n * @api public\n */\nexport function request(id, method, params) {\n    const object = new RequestObject(id, method, params);\n    validateMessage(object, true);\n    return object;\n}\n/**\n * Creates a JSON-RPC 2.0 notification object\n *\n * @param  {String} method\n * @param  {Object|Array} [params]: optional\n * @return {Object} JsonRpc object\n * @api public\n */\nexport function notification(method, params) {\n    const object = new NotificationObject(method, params);\n    validateMessage(object, true);\n    return object;\n}\n/**\n * Creates a JSON-RPC 2.0 success response object\n *\n * @param  {String|Integer} id\n * @param  {Mixed} result\n * @return {Object} JsonRpc object\n * @api public\n */\nexport function success(id, result) {\n    const object = new SuccessObject(id, result);\n    validateMessage(object, true);\n    return object;\n}\n/**\n * Creates a JSON-RPC 2.0 error response object\n *\n * @param  {String|Integer} id\n * @param  {Object} JsonRpcError error\n * @return {Object} JsonRpc object\n * @api public\n */\nexport function error(id, err) {\n    const object = new ErrorObject(id, err);\n    validateMessage(object, true);\n    return object;\n}\nexport function parse(message) {\n    if (!isString(message)) {\n        return new JsonRpcParsed(JsonRpcError.invalidRequest(message), \"invalid\" /* invalid */);\n    }\n    let jsonrpcObj;\n    try {\n        jsonrpcObj = JSON.parse(message);\n    }\n    catch (err) {\n        return new JsonRpcParsed(JsonRpcError.parseError(message), \"invalid\" /* invalid */);\n    }\n    return parseJsonRpcObject(jsonrpcObj);\n}\n/**\n * Takes a JSON-RPC 2.0 payload (Object) or batch (Object[]) and tries to parse it.\n * If successful, determine what objects are inside (response, notification,\n * success, error, or invalid), and return their types and properly formatted objects.\n *\n * @param  {Object|Array} jsonrpcObj\n * @return {Object|Array} a single object or an array of `JsonRpcParsed` objects with `type` and `payload`:\n *\n *  {\n *    type: <Enum, 'request'|'notification'|'success'|'error'|'invalid'>\n *    payload: <JsonRpc|JsonRpcError>\n *  }\n *\n * @api public\n */\nexport function parseJsonRpcObject(jsonrpcObj) {\n    if (!Array.isArray(jsonrpcObj)) {\n        return parseObject(jsonrpcObj);\n    }\n    if (jsonrpcObj.length === 0) {\n        return new JsonRpcParsed(JsonRpcError.invalidRequest(jsonrpcObj), \"invalid\" /* invalid */);\n    }\n    const parsedObjectArray = [];\n    for (let i = 0, len = jsonrpcObj.length; i < len; i++) {\n        parsedObjectArray[i] = parseObject(jsonrpcObj[i]);\n    }\n    return parsedObjectArray;\n}\n/**\n * Alias for `parse` method.\n * Takes a JSON-RPC 2.0 payload (String) and tries to parse it into a JSON.\n * @api public\n */\nexport const parseJsonRpcString = parse;\n/**\n * Takes a JSON-RPC 2.0 payload (Object) and tries to parse it into a JSON.\n * If successful, determine what object is it (response, notification,\n * success, error, or invalid), and return it's type and properly formatted object.\n *\n * @param  {Object} obj\n * @return {Object} an `JsonRpcParsed` object with `type` and `payload`:\n *\n *  {\n *    type: <Enum, 'request'|'notification'|'success'|'error'|'invalid'>\n *    payload: <JsonRpc|JsonRpcError>\n *  }\n *\n * @api public\n */\nexport function parseObject(obj) {\n    let err = null;\n    let payload = null;\n    let payloadType = \"invalid\" /* invalid */;\n    if (obj == null || obj.jsonrpc !== JsonRpc.VERSION) {\n        err = JsonRpcError.invalidRequest(obj);\n        payloadType = \"invalid\" /* invalid */;\n    }\n    else if (!hasOwnProperty.call(obj, 'id')) {\n        const tmp = obj;\n        payload = new NotificationObject(tmp.method, tmp.params);\n        err = validateMessage(payload);\n        payloadType = \"notification\" /* notification */;\n    }\n    else if (hasOwnProperty.call(obj, 'method')) {\n        const tmp = obj;\n        payload = new RequestObject(tmp.id, tmp.method, tmp.params);\n        err = validateMessage(payload);\n        payloadType = \"request\" /* request */;\n    }\n    else if (hasOwnProperty.call(obj, 'result')) {\n        const tmp = obj;\n        payload = new SuccessObject(tmp.id, tmp.result);\n        err = validateMessage(payload);\n        payloadType = \"success\" /* success */;\n    }\n    else if (hasOwnProperty.call(obj, 'error')) {\n        const tmp = obj;\n        payloadType = \"error\" /* error */;\n        if (tmp.error == null) {\n            err = JsonRpcError.internalError(tmp);\n        }\n        else {\n            const errorObj = new JsonRpcError(tmp.error.message, tmp.error.code, tmp.error.data);\n            if (errorObj.message !== tmp.error.message || errorObj.code !== tmp.error.code) {\n                err = JsonRpcError.internalError(tmp);\n            }\n            else {\n                payload = new ErrorObject(tmp.id, errorObj);\n                err = validateMessage(payload);\n            }\n        }\n    }\n    if (err == null && payload != null) {\n        return new JsonRpcParsed(payload, payloadType);\n    }\n    return new JsonRpcParsed(err != null ? err : JsonRpcError.invalidRequest(obj), \"invalid\" /* invalid */);\n}\n// if error, return error, else return null\nfunction validateMessage(obj, throwIt) {\n    let err = null;\n    if (obj instanceof RequestObject) {\n        err = checkId(obj.id);\n        if (err == null) {\n            err = checkMethod(obj.method);\n        }\n        if (err == null) {\n            err = checkParams(obj.params);\n        }\n    }\n    else if (obj instanceof NotificationObject) {\n        err = checkMethod(obj.method);\n        if (err == null) {\n            err = checkParams(obj.params);\n        }\n    }\n    else if (obj instanceof SuccessObject) {\n        err = checkId(obj.id);\n        if (err == null) {\n            err = checkResult(obj.result);\n        }\n    }\n    else if (obj instanceof ErrorObject) {\n        err = checkId(obj.id, true);\n        if (err == null) {\n            err = checkError(obj.error);\n        }\n    }\n    if (throwIt && err != null) {\n        throw err;\n    }\n    return err;\n}\nfunction checkId(id, maybeNull) {\n    if (maybeNull && id === null) {\n        return null;\n    }\n    return isString(id) || isInteger(id)\n        ? null\n        : JsonRpcError.internalError('\"id\" must be provided, a string or an integer.');\n}\nfunction checkMethod(method) {\n    return isString(method) ? null : JsonRpcError.invalidRequest(method);\n}\nfunction checkResult(result) {\n    return result === undefined\n        ? JsonRpcError.internalError('Result must exist for success Response objects')\n        : null;\n}\nfunction checkParams(params) {\n    if (params === undefined) {\n        return null;\n    }\n    if (Array.isArray(params) || isObject(params)) {\n        // ensure params can be stringify\n        try {\n            JSON.stringify(params);\n            return null;\n        }\n        catch (err) {\n            return JsonRpcError.parseError(params);\n        }\n    }\n    return JsonRpcError.invalidParams(params);\n}\nfunction checkError(err) {\n    if (!(err instanceof JsonRpcError)) {\n        return JsonRpcError.internalError('Error must be an instance of JsonRpcError');\n    }\n    if (!isInteger(err.code)) {\n        return JsonRpcError.internalError('Invalid error code. It must be an integer.');\n    }\n    if (!isString(err.message)) {\n        return JsonRpcError.internalError('Message must exist or must be a string.');\n    }\n    return null;\n}\nfunction isString(obj) {\n    return obj !== '' && typeof obj === 'string';\n}\nfunction isObject(obj) {\n    return obj != null && typeof obj === 'object' && !Array.isArray(obj);\n}\nconst jsonrpc = {\n    JsonRpc,\n    JsonRpcError,\n    request,\n    notification,\n    success,\n    error,\n    parse,\n    parseObject,\n    parseJsonRpcObject,\n    parseJsonRpcString,\n};\nexport default jsonrpc;\nexport { jsonrpc };\n//# sourceMappingURL=jsonrpc.js.map","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","'use strict';\n\nmodule.exports = function () {\n  throw new Error(\n    'ws does not work in the browser. Browser clients must use the native ' +\n      'WebSocket object'\n  );\n};\n","import {\n  DEFAULT_CHAIN_ID,\n  TransactionVersion,\n  PayloadType,\n  AnchorMode,\n  PostConditionMode,\n  AuthType,\n  StacksMessageType,\n  ChainID,\n} from './constants';\n\nimport {\n  Authorization,\n  SpendingCondition,\n  nextSignature,\n  isSingleSig,\n  SingleSigSpendingCondition,\n  createTransactionAuthField,\n  createMessageSignature,\n} from './authorization';\n\nimport { BufferArray, txidFromData, cloneDeep } from './utils';\n\nimport { Payload, serializePayload, deserializePayload } from './payload';\n\nimport { LengthPrefixedList, serializeLPList, deserializeLPList, createLPList } from './types';\n\nimport { StacksPrivateKey, StacksPublicKey } from './keys';\n\nimport { BufferReader } from './bufferReader';\n\nimport BigNum from 'bn.js';\nimport { SerializationError, SigningError } from './errors';\n\nexport class StacksTransaction {\n  version: TransactionVersion;\n  chainId: ChainID;\n  auth: Authorization;\n  anchorMode: AnchorMode;\n  payload: Payload;\n  postConditionMode: PostConditionMode;\n  postConditions: LengthPrefixedList;\n\n  constructor(\n    version: TransactionVersion,\n    auth: Authorization,\n    payload: Payload,\n    postConditions?: LengthPrefixedList,\n    postConditionMode?: PostConditionMode,\n    anchorMode?: AnchorMode,\n    chainId?: ChainID\n  ) {\n    this.version = version;\n    this.auth = auth;\n    this.payload = payload;\n    this.chainId = chainId ?? DEFAULT_CHAIN_ID;\n    this.postConditionMode = postConditionMode ?? PostConditionMode.Deny;\n    this.postConditions = postConditions ?? createLPList([]);\n\n    if (anchorMode) {\n      this.anchorMode = anchorMode;\n    } else {\n      switch (payload.payloadType) {\n        case PayloadType.Coinbase:\n        case PayloadType.PoisonMicroblock: {\n          this.anchorMode = AnchorMode.OnChainOnly;\n          break;\n        }\n        case PayloadType.ContractCall:\n        case PayloadType.SmartContract:\n        case PayloadType.TokenTransfer: {\n          this.anchorMode = AnchorMode.Any;\n          break;\n        }\n      }\n    }\n  }\n\n  signBegin() {\n    const tx = cloneDeep(this);\n    tx.auth = tx.auth.intoInitialSighashAuth();\n    return tx.txid();\n  }\n\n  verifyBegin() {\n    const tx = cloneDeep(this);\n    tx.auth = tx.auth.intoInitialSighashAuth();\n    return tx.txid();\n  }\n\n  createTxWithSignature(signature: string | Buffer): StacksTransaction {\n    const parsedSig = typeof signature === 'string' ? signature : signature.toString('hex');\n    const tx = cloneDeep(this);\n    if (!tx.auth.spendingCondition) {\n      throw new Error('Cannot set signature on transaction without spending condition');\n    }\n    (tx.auth.spendingCondition as SingleSigSpendingCondition).signature = createMessageSignature(\n      parsedSig\n    );\n    return tx;\n  }\n\n  verifyOrigin(): string {\n    return this.auth.verifyOrigin(this.verifyBegin());\n  }\n\n  signNextOrigin(sigHash: string, privateKey: StacksPrivateKey): string {\n    if (this.auth.spendingCondition === undefined) {\n      throw new Error('\"auth.spendingCondition\" is undefined');\n    }\n    if (this.auth.authType === undefined) {\n      throw new Error('\"auth.authType\" is undefined');\n    }\n    return this.signAndAppend(this.auth.spendingCondition, sigHash, AuthType.Standard, privateKey);\n  }\n\n  signNextSponsor(sigHash: string, privateKey: StacksPrivateKey): string {\n    if (this.auth.sponsorSpendingCondition === undefined) {\n      throw new Error('\"auth.spendingCondition\" is undefined');\n    }\n    if (this.auth.authType === undefined) {\n      throw new Error('\"auth.authType\" is undefined');\n    }\n    return this.signAndAppend(\n      this.auth.sponsorSpendingCondition,\n      sigHash,\n      AuthType.Sponsored,\n      privateKey\n    );\n  }\n\n  appendPubkey(publicKey: StacksPublicKey) {\n    const cond = this.auth.spendingCondition;\n    if (cond && !isSingleSig(cond)) {\n      cond.fields.push(createTransactionAuthField(publicKey));\n    } else {\n      throw new Error(`Can't append public key to a singlesig condition`);\n    }\n  }\n\n  signAndAppend(\n    condition: SpendingCondition,\n    curSigHash: string,\n    authType: AuthType,\n    privateKey: StacksPrivateKey\n  ): string {\n    const { nextSig, nextSigHash } = nextSignature(\n      curSigHash,\n      authType,\n      condition.fee,\n      condition.nonce,\n      privateKey\n    );\n    if (isSingleSig(condition)) {\n      condition.signature = nextSig;\n    } else {\n      condition.fields.push(createTransactionAuthField(nextSig));\n    }\n\n    return nextSigHash;\n  }\n\n  txid(): string {\n    const serialized = this.serialize();\n    return txidFromData(serialized);\n  }\n\n  setSponsor(sponsorSpendingCondition: SpendingCondition) {\n    if (this.auth.authType != AuthType.Sponsored) {\n      throw new SigningError('Cannot sponsor sign a non-sponsored transaction');\n    }\n\n    this.auth.setSponsor(sponsorSpendingCondition);\n  }\n\n  /**\n   * Set the total fee to be paid for this transaction\n   *\n   * @param {BigNum} fee - the fee amount in microstacks\n   */\n  setFee(amount: BigNum) {\n    this.auth.setFee(amount);\n  }\n\n  /**\n   * Set the transaction nonce\n   *\n   * @param {BigNum} nonce - the nonce value\n   */\n  setNonce(nonce: BigNum) {\n    this.auth.setNonce(nonce);\n  }\n\n  /**\n   * Set the transaction sponsor nonce\n   *\n   * @param {BigNum} nonce - the sponsor nonce value\n   */\n  setSponsorNonce(nonce: BigNum) {\n    this.auth.setSponsorNonce(nonce);\n  }\n\n  serialize(): Buffer {\n    if (this.version === undefined) {\n      throw new SerializationError('\"version\" is undefined');\n    }\n    if (this.chainId === undefined) {\n      throw new SerializationError('\"chainId\" is undefined');\n    }\n    if (this.auth === undefined) {\n      throw new SerializationError('\"auth\" is undefined');\n    }\n    if (this.anchorMode === undefined) {\n      throw new SerializationError('\"anchorMode\" is undefined');\n    }\n    if (this.payload === undefined) {\n      throw new SerializationError('\"payload\" is undefined');\n    }\n\n    const bufferArray: BufferArray = new BufferArray();\n\n    bufferArray.appendByte(this.version);\n    const chainIdBuffer = Buffer.alloc(4);\n    chainIdBuffer.writeUInt32BE(this.chainId, 0);\n    bufferArray.push(chainIdBuffer);\n    bufferArray.push(this.auth.serialize());\n    bufferArray.appendByte(this.anchorMode);\n    bufferArray.appendByte(this.postConditionMode);\n    bufferArray.push(serializeLPList(this.postConditions));\n    bufferArray.push(serializePayload(this.payload));\n\n    return bufferArray.concatBuffer();\n  }\n}\n\nexport function deserializeTransaction(bufferReader: BufferReader) {\n  const version = bufferReader.readUInt8Enum(TransactionVersion, n => {\n    throw new Error(`Could not parse ${n} as TransactionVersion`);\n  });\n  const chainId = bufferReader.readUInt32BE();\n  const auth = Authorization.deserialize(bufferReader);\n  const anchorMode = bufferReader.readUInt8Enum(AnchorMode, n => {\n    throw new Error(`Could not parse ${n} as AnchorMode`);\n  });\n  const postConditionMode = bufferReader.readUInt8Enum(PostConditionMode, n => {\n    throw new Error(`Could not parse ${n} as PostConditionMode`);\n  });\n  const postConditions = deserializeLPList(bufferReader, StacksMessageType.PostCondition);\n  const payload = deserializePayload(bufferReader);\n\n  return new StacksTransaction(\n    version,\n    auth,\n    payload,\n    postConditions,\n    postConditionMode,\n    anchorMode,\n    chainId\n  );\n}\n","import { StacksTransaction } from './transaction';\n\nimport { StacksPrivateKey, StacksPublicKey } from './keys';\nimport { isSingleSig } from './authorization';\nimport { cloneDeep } from './utils';\nimport { SpendingCondition } from './authorization';\nimport { AuthType } from './constants';\nimport { SigningError } from './errors';\n\nexport class TransactionSigner {\n  transaction: StacksTransaction;\n  sigHash: string;\n  originDone: boolean;\n  checkOversign: boolean;\n  checkOverlap: boolean;\n\n  constructor(transaction: StacksTransaction) {\n    this.transaction = transaction;\n    this.sigHash = transaction.signBegin();\n    this.originDone = false;\n    this.checkOversign = true;\n    this.checkOverlap = true;\n  }\n\n  static createSponsorSigner(transaction: StacksTransaction, spendingCondition: SpendingCondition) {\n    if (transaction.auth.authType != AuthType.Sponsored) {\n      throw new SigningError('Cannot add sponsor to non-sponsored transaction');\n    }\n\n    const tx: StacksTransaction = cloneDeep(transaction);\n    tx.setSponsor(spendingCondition);\n    const originSigHash = tx.verifyOrigin();\n    const signer = new this(tx);\n    signer.originDone = true;\n    signer.sigHash = originSigHash;\n    signer.checkOversign = true;\n    signer.checkOverlap = true;\n    return signer;\n  }\n\n  signOrigin(privateKey: StacksPrivateKey) {\n    if (this.checkOverlap && this.originDone) {\n      throw new SigningError('Cannot sign origin after sponsor key');\n    }\n\n    if (this.transaction.auth === undefined) {\n      throw new SigningError('\"transaction.auth\" is undefined');\n    }\n    if (this.transaction.auth.spendingCondition === undefined) {\n      throw new SigningError('\"transaction.auth.spendingCondition\" is undefined');\n    }\n\n    if (!isSingleSig(this.transaction.auth.spendingCondition)) {\n      const spendingCondition = this.transaction.auth.spendingCondition;\n      if (\n        this.checkOversign &&\n        spendingCondition.fields.length >= spendingCondition.signaturesRequired\n      ) {\n        throw new Error('Origin would have too many signatures');\n      }\n    }\n\n    const nextSighash = this.transaction.signNextOrigin(this.sigHash, privateKey);\n    this.sigHash = nextSighash;\n  }\n\n  appendOrigin(publicKey: StacksPublicKey) {\n    if (this.checkOverlap && this.originDone) {\n      throw Error('Cannot append public key to origin after sponsor key');\n    }\n\n    if (this.transaction.auth === undefined) {\n      throw new Error('\"transaction.auth\" is undefined');\n    }\n    if (this.transaction.auth.spendingCondition === undefined) {\n      throw new Error('\"transaction.auth.spendingCondition\" is undefined');\n    }\n\n    this.transaction.appendPubkey(publicKey);\n  }\n\n  signSponsor(privateKey: StacksPrivateKey) {\n    if (this.transaction.auth === undefined) {\n      throw new SigningError('\"transaction.auth\" is undefined');\n    }\n    if (this.transaction.auth.sponsorSpendingCondition === undefined) {\n      throw new SigningError('\"transaction.auth.spendingCondition\" is undefined');\n    }\n\n    const nextSighash = this.transaction.signNextSponsor(this.sigHash, privateKey);\n    this.sigHash = nextSighash;\n    this.originDone = true;\n  }\n\n  getTxInComplete(): StacksTransaction {\n    return cloneDeep(this.transaction);\n  }\n\n  resume(transaction: StacksTransaction) {\n    this.transaction = cloneDeep(transaction);\n    this.sigHash = transaction.signBegin();\n  }\n}\n","import { cloneDeep } from './utils';\nimport {\n  ClarityValue,\n  uintCV,\n  intCV,\n  contractPrincipalCV,\n  standardPrincipalCV,\n  noneCV,\n  bufferCV,\n  falseCV,\n  trueCV,\n  ClarityType,\n  getCVTypeString,\n  bufferCVFromString,\n} from './clarity';\nimport { ContractCallPayload } from './payload';\nimport { NotImplementedError } from './errors';\nimport { stringAsciiCV, stringUtf8CV } from './clarity/types/stringCV';\n\n// From https://github.com/blockstack/stacks-blockchain-sidecar/blob/master/src/event-stream/contract-abi.ts\n\nexport type ClarityAbiTypeBuffer = { buffer: { length: number } };\nexport type ClarityAbiTypeStringAscii = { 'string-ascii': { length: number } };\nexport type ClarityAbiTypeStringUtf8 = { 'string-utf8': { length: number } };\nexport type ClarityAbiTypeResponse = { response: { ok: ClarityAbiType; error: ClarityAbiType } };\nexport type ClarityAbiTypeOptional = { optional: ClarityAbiType };\nexport type ClarityAbiTypeTuple = { tuple: { name: string; type: ClarityAbiType }[] };\nexport type ClarityAbiTypeList = { list: { type: ClarityAbiType; length: number } };\n\nexport type ClarityAbiTypeUInt128 = 'uint128';\nexport type ClarityAbiTypeInt128 = 'int128';\nexport type ClarityAbiTypeBool = 'bool';\nexport type ClarityAbiTypePrincipal = 'principal';\nexport type ClarityAbiTypeTraitReference = 'trait_reference';\nexport type ClarityAbiTypeNone = 'none';\n\nexport type ClarityAbiTypePrimitive =\n  | ClarityAbiTypeUInt128\n  | ClarityAbiTypeInt128\n  | ClarityAbiTypeBool\n  | ClarityAbiTypePrincipal\n  | ClarityAbiTypeTraitReference\n  | ClarityAbiTypeNone;\n\nexport type ClarityAbiType =\n  | ClarityAbiTypePrimitive\n  | ClarityAbiTypeBuffer\n  | ClarityAbiTypeResponse\n  | ClarityAbiTypeOptional\n  | ClarityAbiTypeTuple\n  | ClarityAbiTypeList\n  | ClarityAbiTypeStringAscii\n  | ClarityAbiTypeStringUtf8\n  | ClarityAbiTypeTraitReference;\n\nexport enum ClarityAbiTypeId {\n  ClarityAbiTypeUInt128 = 1,\n  ClarityAbiTypeInt128 = 2,\n  ClarityAbiTypeBool = 3,\n  ClarityAbiTypePrincipal = 4,\n  ClarityAbiTypeNone = 5,\n  ClarityAbiTypeBuffer = 6,\n  ClarityAbiTypeResponse = 7,\n  ClarityAbiTypeOptional = 8,\n  ClarityAbiTypeTuple = 9,\n  ClarityAbiTypeList = 10,\n  ClarityAbiTypeStringAscii = 11,\n  ClarityAbiTypeStringUtf8 = 12,\n  ClarityAbiTypeTraitReference = 13,\n}\n\nexport const isClarityAbiPrimitive = (val: ClarityAbiType): val is ClarityAbiTypePrimitive =>\n  typeof val === 'string';\nexport const isClarityAbiBuffer = (val: ClarityAbiType): val is ClarityAbiTypeBuffer =>\n  (val as ClarityAbiTypeBuffer).buffer !== undefined;\nexport const isClarityAbiStringAscii = (val: ClarityAbiType): val is ClarityAbiTypeStringAscii =>\n  (val as ClarityAbiTypeStringAscii)['string-ascii'] !== undefined;\nexport const isClarityAbiStringUtf8 = (val: ClarityAbiType): val is ClarityAbiTypeStringUtf8 =>\n  (val as ClarityAbiTypeStringUtf8)['string-utf8'] !== undefined;\nexport const isClarityAbiResponse = (val: ClarityAbiType): val is ClarityAbiTypeResponse =>\n  (val as ClarityAbiTypeResponse).response !== undefined;\nexport const isClarityAbiOptional = (val: ClarityAbiType): val is ClarityAbiTypeOptional =>\n  (val as ClarityAbiTypeOptional).optional !== undefined;\nexport const isClarityAbiTuple = (val: ClarityAbiType): val is ClarityAbiTypeTuple =>\n  (val as ClarityAbiTypeTuple).tuple !== undefined;\nexport const isClarityAbiList = (val: ClarityAbiType): val is ClarityAbiTypeList =>\n  (val as ClarityAbiTypeList).list !== undefined;\n\nexport type ClarityAbiTypeUnion =\n  | { id: ClarityAbiTypeId.ClarityAbiTypeUInt128; type: ClarityAbiTypeUInt128 }\n  | { id: ClarityAbiTypeId.ClarityAbiTypeInt128; type: ClarityAbiTypeInt128 }\n  | { id: ClarityAbiTypeId.ClarityAbiTypeBool; type: ClarityAbiTypeBool }\n  | { id: ClarityAbiTypeId.ClarityAbiTypePrincipal; type: ClarityAbiTypePrincipal }\n  | { id: ClarityAbiTypeId.ClarityAbiTypeTraitReference; type: ClarityAbiTypeTraitReference }\n  | { id: ClarityAbiTypeId.ClarityAbiTypeNone; type: ClarityAbiTypeNone }\n  | { id: ClarityAbiTypeId.ClarityAbiTypeBuffer; type: ClarityAbiTypeBuffer }\n  | { id: ClarityAbiTypeId.ClarityAbiTypeResponse; type: ClarityAbiTypeResponse }\n  | { id: ClarityAbiTypeId.ClarityAbiTypeOptional; type: ClarityAbiTypeOptional }\n  | { id: ClarityAbiTypeId.ClarityAbiTypeTuple; type: ClarityAbiTypeTuple }\n  | { id: ClarityAbiTypeId.ClarityAbiTypeList; type: ClarityAbiTypeList }\n  | { id: ClarityAbiTypeId.ClarityAbiTypeStringAscii; type: ClarityAbiTypeStringAscii }\n  | { id: ClarityAbiTypeId.ClarityAbiTypeStringUtf8; type: ClarityAbiTypeStringUtf8 };\n\nexport function getTypeUnion(val: ClarityAbiType): ClarityAbiTypeUnion {\n  if (isClarityAbiPrimitive(val)) {\n    if (val === 'uint128') {\n      return { id: ClarityAbiTypeId.ClarityAbiTypeUInt128, type: val };\n    } else if (val === 'int128') {\n      return { id: ClarityAbiTypeId.ClarityAbiTypeInt128, type: val };\n    } else if (val === 'bool') {\n      return { id: ClarityAbiTypeId.ClarityAbiTypeBool, type: val };\n    } else if (val === 'principal') {\n      return { id: ClarityAbiTypeId.ClarityAbiTypePrincipal, type: val };\n    } else if (val === 'trait_reference') {\n      return { id: ClarityAbiTypeId.ClarityAbiTypeTraitReference, type: val };\n    } else if (val === 'none') {\n      return { id: ClarityAbiTypeId.ClarityAbiTypeNone, type: val };\n    } else {\n      throw new Error(`Unexpected Clarity ABI type primitive: ${JSON.stringify(val)}`);\n    }\n  } else if (isClarityAbiBuffer(val)) {\n    return { id: ClarityAbiTypeId.ClarityAbiTypeBuffer, type: val };\n  } else if (isClarityAbiResponse(val)) {\n    return { id: ClarityAbiTypeId.ClarityAbiTypeResponse, type: val };\n  } else if (isClarityAbiOptional(val)) {\n    return { id: ClarityAbiTypeId.ClarityAbiTypeOptional, type: val };\n  } else if (isClarityAbiTuple(val)) {\n    return { id: ClarityAbiTypeId.ClarityAbiTypeTuple, type: val };\n  } else if (isClarityAbiList(val)) {\n    return { id: ClarityAbiTypeId.ClarityAbiTypeList, type: val };\n  } else if (isClarityAbiStringAscii(val)) {\n    return { id: ClarityAbiTypeId.ClarityAbiTypeStringAscii, type: val };\n  } else if (isClarityAbiStringUtf8(val)) {\n    return { id: ClarityAbiTypeId.ClarityAbiTypeStringUtf8, type: val };\n  } else {\n    throw new Error(`Unexpected Clarity ABI type: ${JSON.stringify(val)}`);\n  }\n}\n\nfunction encodeClarityValue(type: ClarityAbiType, val: string): ClarityValue;\nfunction encodeClarityValue(type: ClarityAbiTypeUnion, val: string): ClarityValue;\nfunction encodeClarityValue(\n  input: ClarityAbiTypeUnion | ClarityAbiType,\n  val: string\n): ClarityValue {\n  let union: ClarityAbiTypeUnion;\n  if ((input as ClarityAbiTypeUnion).id !== undefined) {\n    union = input as ClarityAbiTypeUnion;\n  } else {\n    union = getTypeUnion(input as ClarityAbiType);\n  }\n  switch (union.id) {\n    case ClarityAbiTypeId.ClarityAbiTypeUInt128:\n      return uintCV(val);\n    case ClarityAbiTypeId.ClarityAbiTypeInt128:\n      return intCV(val);\n    case ClarityAbiTypeId.ClarityAbiTypeBool:\n      if (val === 'false' || val === '0') return falseCV();\n      else if (val === 'true' || val === '1') return trueCV();\n      else throw new Error(`Unexpected Clarity bool value: ${JSON.stringify(val)}`);\n    case ClarityAbiTypeId.ClarityAbiTypePrincipal:\n      if (val.includes('.')) {\n        const [addr, name] = val.split('.');\n        return contractPrincipalCV(addr, name);\n      } else {\n        return standardPrincipalCV(val);\n      }\n    case ClarityAbiTypeId.ClarityAbiTypeTraitReference:\n      const [addr, name] = val.split('.');\n      return contractPrincipalCV(addr, name);\n    case ClarityAbiTypeId.ClarityAbiTypeNone:\n      return noneCV();\n    case ClarityAbiTypeId.ClarityAbiTypeBuffer:\n      return bufferCV(Buffer.from(val, 'utf8'));\n    case ClarityAbiTypeId.ClarityAbiTypeStringAscii:\n      return stringAsciiCV(val);\n    case ClarityAbiTypeId.ClarityAbiTypeStringUtf8:\n      return stringUtf8CV(val);\n    case ClarityAbiTypeId.ClarityAbiTypeResponse:\n      throw new NotImplementedError(`Unsupported encoding for Clarity type: ${union.id}`);\n    case ClarityAbiTypeId.ClarityAbiTypeOptional:\n      throw new NotImplementedError(`Unsupported encoding for Clarity type: ${union.id}`);\n    case ClarityAbiTypeId.ClarityAbiTypeTuple:\n      throw new NotImplementedError(`Unsupported encoding for Clarity type: ${union.id}`);\n    case ClarityAbiTypeId.ClarityAbiTypeList:\n      throw new NotImplementedError(`Unsupported encoding for Clarity type: ${union.id}`);\n    default:\n      throw new Error(`Unexpected Clarity type ID: ${JSON.stringify(union)}`);\n  }\n}\nexport { encodeClarityValue };\n\nexport function getTypeString(val: ClarityAbiType): string {\n  if (isClarityAbiPrimitive(val)) {\n    if (val === 'int128') {\n      return 'int';\n    } else if (val === 'uint128') {\n      return 'uint';\n    }\n    return val;\n  } else if (isClarityAbiBuffer(val)) {\n    return `(buff ${val.buffer.length})`;\n  } else if (isClarityAbiStringAscii(val)) {\n    return `(string-ascii ${val['string-ascii'].length})`;\n  } else if (isClarityAbiStringUtf8(val)) {\n    return `(string-utf8 ${val['string-utf8'].length})`;\n  } else if (isClarityAbiResponse(val)) {\n    return `(response ${getTypeString(val.response.ok)} ${getTypeString(val.response.error)})`;\n  } else if (isClarityAbiOptional(val)) {\n    return `(optional ${getTypeString(val.optional)})`;\n  } else if (isClarityAbiTuple(val)) {\n    return `(tuple ${val.tuple.map(t => `(${t.name} ${getTypeString(t.type)})`).join(' ')})`;\n  } else if (isClarityAbiList(val)) {\n    return `(list ${val.list.length} ${getTypeString(val.list.type)})`;\n  } else {\n    throw new Error(`Type string unsupported for Clarity type: ${JSON.stringify(val)}`);\n  }\n}\n\nexport interface ClarityAbiFunction {\n  name: string;\n  access: 'private' | 'public' | 'read_only';\n  args: {\n    name: string;\n    type: ClarityAbiType;\n  }[];\n  outputs: {\n    type: ClarityAbiType;\n  };\n}\n\nexport function abiFunctionToString(func: ClarityAbiFunction): string {\n  const access = func.access === 'read_only' ? 'read-only' : func.access;\n  return `(define-${access} (${func.name} ${func.args\n    .map(arg => `(${arg.name} ${getTypeString(arg.type)})`)\n    .join(' ')}))`;\n}\n\nexport interface ClarityAbiVariable {\n  name: string;\n  access: 'variable' | 'constant';\n  type: ClarityAbiType;\n}\n\nexport interface ClarityAbiMap {\n  name: string;\n  key: {\n    name: string;\n    type: ClarityAbiType;\n  }[];\n  value: {\n    name: string;\n    type: ClarityAbiType;\n  }[];\n}\n\nexport interface ClarityAbiTypeFungibleToken {\n  name: string;\n}\n\nexport interface ClarityAbiTypeNonFungibleToken {\n  name: string;\n  type: ClarityAbiType;\n}\n\nexport interface ClarityAbi {\n  functions: ClarityAbiFunction[];\n  variables: ClarityAbiVariable[];\n  maps: ClarityAbiMap[];\n  fungible_tokens: ClarityAbiTypeFungibleToken[];\n  non_fungible_tokens: ClarityAbiTypeNonFungibleToken[];\n}\n\nfunction matchType(cv: ClarityValue, abiType: ClarityAbiType): boolean {\n  const union = getTypeUnion(abiType);\n\n  switch (cv.type) {\n    case ClarityType.BoolTrue:\n    case ClarityType.BoolFalse:\n      return union.id === ClarityAbiTypeId.ClarityAbiTypeBool;\n    case ClarityType.Int:\n      return union.id === ClarityAbiTypeId.ClarityAbiTypeInt128;\n    case ClarityType.UInt:\n      return union.id === ClarityAbiTypeId.ClarityAbiTypeUInt128;\n    case ClarityType.Buffer:\n      return (\n        union.id === ClarityAbiTypeId.ClarityAbiTypeBuffer &&\n        union.type.buffer.length >= cv.buffer.length\n      );\n    case ClarityType.StringASCII:\n      return (\n        union.id === ClarityAbiTypeId.ClarityAbiTypeStringAscii &&\n        union.type['string-ascii'].length >= cv.data.length\n      );\n    case ClarityType.StringUTF8:\n      return (\n        union.id === ClarityAbiTypeId.ClarityAbiTypeStringUtf8 &&\n        union.type['string-utf8'].length >= cv.data.length\n      );\n    case ClarityType.OptionalNone:\n      return (\n        union.id === ClarityAbiTypeId.ClarityAbiTypeNone ||\n        union.id === ClarityAbiTypeId.ClarityAbiTypeOptional\n      );\n    case ClarityType.OptionalSome:\n      return (\n        union.id === ClarityAbiTypeId.ClarityAbiTypeOptional &&\n        matchType(cv.value, union.type.optional)\n      );\n    case ClarityType.ResponseErr:\n      return (\n        union.id === ClarityAbiTypeId.ClarityAbiTypeResponse &&\n        matchType(cv.value, union.type.response.error)\n      );\n    case ClarityType.ResponseOk:\n      return (\n        union.id === ClarityAbiTypeId.ClarityAbiTypeResponse &&\n        matchType(cv.value, union.type.response.ok)\n      );\n    case ClarityType.PrincipalContract:\n      return (\n        union.id === ClarityAbiTypeId.ClarityAbiTypePrincipal ||\n        union.id === ClarityAbiTypeId.ClarityAbiTypeTraitReference\n      );\n    case ClarityType.PrincipalStandard:\n      return union.id === ClarityAbiTypeId.ClarityAbiTypePrincipal;\n    case ClarityType.List:\n      return (\n        union.id == ClarityAbiTypeId.ClarityAbiTypeList &&\n        union.type.list.length === cv.list.length &&\n        cv.list.every(val => matchType(val, union.type.list.type))\n      );\n    case ClarityType.Tuple:\n      if (union.id == ClarityAbiTypeId.ClarityAbiTypeTuple) {\n        const tuple = cloneDeep(cv.data);\n        for (let i = 0; i < union.type.tuple.length; i++) {\n          const abiTupleEntry = union.type.tuple[i];\n          const key = abiTupleEntry.name;\n          const val = tuple[key];\n\n          // if key exists in cv tuple, check if its type matches the abi\n          // return false if key doesn't exist\n          if (val) {\n            if (!matchType(val, abiTupleEntry.type)) {\n              return false;\n            }\n            delete tuple[key];\n          } else {\n            return false;\n          }\n        }\n        return true;\n      } else {\n        return false;\n      }\n    default:\n      return false;\n  }\n}\n\n/**\n * Validates a contract-call payload with a contract ABI\n *\n * @param {ContractCallPayload} payload - a contract-call payload\n * @param {ClarityAbi} abi - a contract ABI\n *\n * @returns {boolean} true if the payloads functionArgs type check against those in the ABI\n */\nexport function validateContractCall(payload: ContractCallPayload, abi: ClarityAbi): boolean {\n  const filtered = abi.functions.filter(fn => fn.name === payload.functionName.content);\n  if (filtered.length === 1) {\n    const abiFunc = filtered[0];\n    const abiArgs = abiFunc.args;\n\n    if (payload.functionArgs.length !== abiArgs.length) {\n      throw new Error(\n        `Clarity function expects ${abiArgs.length} argument(s) but received ${payload.functionArgs.length}`\n      );\n    }\n\n    for (let i = 0; i < payload.functionArgs.length; i++) {\n      const payloadArg = payload.functionArgs[i];\n      const abiArg = abiArgs[i];\n\n      if (!matchType(payloadArg, abiArg.type)) {\n        const argNum = i + 1;\n        throw new Error(\n          `Clarity function \\`${\n            payload.functionName.content\n          }\\` expects argument ${argNum} to be of type ${getTypeString(\n            abiArg.type\n          )}, not ${getCVTypeString(payloadArg)}`\n        );\n      }\n    }\n\n    return true;\n  } else if (filtered.length === 0) {\n    throw new Error(`ABI doesn't contain a function with the name ${payload.functionName.content}`);\n  } else {\n    throw new Error(\n      `Malformed ABI. Contains multiple functions with the name ${payload.functionName.content}`\n    );\n  }\n}\n\n/**\n * Convert string input to Clarity value based on contract ABI data. Only handles Clarity\n * primitives and buffers. Responses, optionals, tuples and lists are not supported.\n *\n * @param {string} input - string to be parsed into Clarity value\n * @param {ClarityAbiType} type - the contract function argument object\n *\n * @returns {ClarityValue} returns a Clarity value\n */\nexport function parseToCV(input: string, type: ClarityAbiType): ClarityValue {\n  const typeString = getTypeString(type);\n  if (isClarityAbiPrimitive(type)) {\n    if (type === 'uint128') {\n      return uintCV(input);\n    } else if (type === 'int128') {\n      return intCV(input);\n    } else if (type === 'bool') {\n      if (input.toLowerCase() === 'true') {\n        return trueCV();\n      } else if (input.toLowerCase() === 'false') {\n        return falseCV();\n      } else {\n        throw new Error(`Invalid bool value: ${input}`);\n      }\n    } else if (type === 'principal') {\n      if (input.includes('.')) {\n        const [address, contractName] = input.split('.');\n        return contractPrincipalCV(address, contractName);\n      } else {\n        return standardPrincipalCV(input);\n      }\n    } else {\n      throw new Error(`Contract function contains unsupported Clarity ABI type: ${typeString}`);\n    }\n  } else if (isClarityAbiBuffer(type)) {\n    const inputLength = Buffer.from(input).byteLength;\n    if (inputLength > type.buffer.length) {\n      throw new Error(`Input exceeds specified buffer length limit of ${type.buffer.length}`);\n    }\n    return bufferCVFromString(input);\n  } else if (isClarityAbiResponse(type)) {\n    throw new Error(`Contract function contains unsupported Clarity ABI type: ${typeString}`);\n  } else if (isClarityAbiOptional(type)) {\n    throw new Error(`Contract function contains unsupported Clarity ABI type: ${typeString}`);\n  } else if (isClarityAbiTuple(type)) {\n    throw new Error(`Contract function contains unsupported Clarity ABI type: ${typeString}`);\n  } else if (isClarityAbiList(type)) {\n    throw new Error(`Contract function contains unsupported Clarity ABI type: ${typeString}`);\n  } else {\n    throw new Error(`Contract function contains unsupported Clarity ABI type: ${typeString}`);\n  }\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","import { StacksTransaction } from './transaction';\n\nimport { StacksNetwork, StacksMainnet, StacksTestnet } from '@stacks/network';\n\nimport {\n  createTokenTransferPayload,\n  createSmartContractPayload,\n  createContractCallPayload,\n} from './payload';\n\nimport {\n  StandardAuthorization,\n  SponsoredAuthorization,\n  createSingleSigSpendingCondition,\n  createMultiSigSpendingCondition,\n} from './authorization';\n\nimport {\n  publicKeyToString,\n  createStacksPrivateKey,\n  getPublicKey,\n  publicKeyToAddress,\n  pubKeyfromPrivKey,\n  publicKeyFromBuffer,\n} from './keys';\n\nimport { TransactionSigner } from './signer';\n\nimport {\n  PostCondition,\n  STXPostCondition,\n  FungiblePostCondition,\n  NonFungiblePostCondition,\n  createSTXPostCondition,\n  createFungiblePostCondition,\n  createNonFungiblePostCondition,\n} from './postcondition';\n\nimport {\n  AddressHashMode,\n  AddressVersion,\n  FungibleConditionCode,\n  NonFungibleConditionCode,\n  PostConditionMode,\n  PayloadType,\n  AnchorMode,\n  TransactionVersion,\n  TxRejectedReason,\n  SingleSigHashMode,\n} from './constants';\n\nimport { AssetInfo, createLPList, createStandardPrincipal, createContractPrincipal } from './types';\n\nimport { cvToHex, parseReadOnlyResponse, omit } from './utils';\n\nimport { fetchPrivate } from '@stacks/common';\n\nimport BigNum from 'bn.js';\nimport { ClarityValue, PrincipalCV } from './clarity';\nimport { validateContractCall, ClarityAbi } from './contract-abi';\nimport { c32address } from 'c32check';\n\n/**\n * Lookup the nonce for an address from a core node\n *\n * @param {string} address - the c32check address to look up\n * @param {StacksNetwork} network - the Stacks network to look up address on\n *\n * @return a promise that resolves to an integer\n */\nexport async function getNonce(address: string, network?: StacksNetwork): Promise<BigNum> {\n  const defaultNetwork = new StacksMainnet();\n  const url = network\n    ? network.getAccountApiUrl(address)\n    : defaultNetwork.getAccountApiUrl(address);\n\n  const response = await fetchPrivate(url);\n  if (!response.ok) {\n    let msg = '';\n    try {\n      msg = await response.text();\n    } catch (error) {}\n    throw new Error(\n      `Error fetching nonce. Response ${response.status}: ${response.statusText}. Attempted to fetch ${url} and failed with the message: \"${msg}\"`\n    );\n  }\n  const result = (await response.json()) as { nonce: string };\n  return new BigNum(result.nonce);\n}\n\n/**\n * Estimate the total transaction fee in microstacks for a token transfer\n *\n * @param {StacksTransaction} transaction - the token transfer transaction to estimate fees for\n * @param {StacksNetwork} network - the Stacks network to estimate transaction for\n *\n * @return a promise that resolves to number of microstacks per byte\n */\nexport async function estimateTransfer(\n  transaction: StacksTransaction,\n  network?: StacksNetwork\n): Promise<BigNum> {\n  if (transaction.payload.payloadType !== PayloadType.TokenTransfer) {\n    throw new Error(\n      `Transaction fee estimation only possible with ${\n        PayloadType[PayloadType.TokenTransfer]\n      } transactions. Invoked with: ${PayloadType[transaction.payload.payloadType]}`\n    );\n  }\n\n  const requestHeaders = {\n    Accept: 'application/text',\n  };\n\n  const fetchOptions = {\n    method: 'GET',\n    headers: requestHeaders,\n  };\n\n  const defaultNetwork = new StacksMainnet();\n  const url = network\n    ? network.getTransferFeeEstimateApiUrl()\n    : defaultNetwork.getTransferFeeEstimateApiUrl();\n\n  const response = await fetchPrivate(url, fetchOptions);\n  if (!response.ok) {\n    let msg = '';\n    try {\n      msg = await response.text();\n    } catch (error) {}\n    throw new Error(\n      `Error estimating transaction fee. Response ${response.status}: ${response.statusText}. Attempted to fetch ${url} and failed with the message: \"${msg}\"`\n    );\n  }\n  const feeRateResult = await response.text();\n  const txBytes = new BigNum(transaction.serialize().byteLength);\n  const feeRate = new BigNum(feeRateResult);\n  return feeRate.mul(txBytes);\n}\n\nexport type TxBroadcastResultOk = string;\nexport type TxBroadcastResultRejected = {\n  error: string;\n  reason: TxRejectedReason;\n  reason_data: any;\n  txid: string;\n};\nexport type TxBroadcastResult = TxBroadcastResultOk | TxBroadcastResultRejected;\n\n/**\n * Broadcast the signed transaction to a core node\n *\n * @param {StacksTransaction} transaction - the token transfer transaction to broadcast\n * @param {StacksNetwork} network - the Stacks network to broadcast transaction to\n *\n * @returns {Promise} that resolves to a response if the operation succeeds\n */\nexport async function broadcastTransaction(\n  transaction: StacksTransaction,\n  network: StacksNetwork\n): Promise<TxBroadcastResult> {\n  const rawTx = transaction.serialize();\n  const url = network.getBroadcastApiUrl();\n\n  return broadcastRawTransaction(rawTx, url);\n}\n\n/**\n * Broadcast the signed transaction to a core node\n *\n * @param {Buffer} rawTx - the raw serialized transaction buffer to broadcast\n * @param {string} url - the broadcast endpoint URL\n *\n * @returns {Promise} that resolves to a response if the operation succeeds\n */\nexport async function broadcastRawTransaction(\n  rawTx: Buffer,\n  url: string\n): Promise<TxBroadcastResult> {\n  const requestHeaders = {\n    'Content-Type': 'application/octet-stream',\n  };\n\n  const options = {\n    method: 'POST',\n    headers: requestHeaders,\n    body: rawTx,\n  };\n\n  const response = await fetchPrivate(url, options);\n  if (!response.ok) {\n    try {\n      return (await response.json()) as TxBroadcastResult;\n    } catch (e) {\n      throw Error(`Failed to broadcast transaction: ${(e as Error).message}`);\n    }\n  }\n\n  const text = await response.text();\n  try {\n    return JSON.parse(text) as TxBroadcastResult;\n  } catch (e) {\n    return text;\n  }\n}\n\n/**\n * Fetch a contract's ABI\n *\n * @param {string} address - the contracts address\n * @param {string} contractName - the contracts name\n * @param {StacksNetwork} network - the Stacks network to broadcast transaction to\n *\n * @returns {Promise} that resolves to a ClarityAbi if the operation succeeds\n */\nexport async function getAbi(\n  address: string,\n  contractName: string,\n  network: StacksNetwork\n): Promise<ClarityAbi> {\n  const options = {\n    method: 'GET',\n  };\n\n  const url = network.getAbiApiUrl(address, contractName);\n\n  const response = await fetchPrivate(url, options);\n  if (!response.ok) {\n    let msg = '';\n    try {\n      msg = await response.text();\n    } catch (error) {}\n    throw new Error(\n      `Error fetching contract ABI for contract \"${contractName}\" at address ${address}. Response ${response.status}: ${response.statusText}. Attempted to fetch ${url} and failed with the message: \"${msg}\"`\n    );\n  }\n\n  return JSON.parse(await response.text()) as ClarityAbi;\n}\n\nexport interface MultiSigOptions {\n  numSignatures: number;\n  publicKeys: string[];\n  signerKeys?: string[];\n}\n\n/**\n * STX token transfer transaction options\n *\n * @param  {String|PrincipalCV} recipientAddress - the c32check address of the recipient or a\n *                                                  principal clarity value\n * @param  {BigNum} amount - number of tokens to transfer in microstacks\n * @param  {BigNum} fee - transaction fee in microstacks\n * @param  {BigNum} nonce - a nonce must be increased monotonically with each new transaction\n * @param  {StacksNetwork} network - the Stacks blockchain network this transaction is destined for\n * @param  {anchorMode} anchorMode - identify how the the transaction should be mined\n * @param  {String} memo - an arbitrary string to include with the transaction, must be less than\n *                          34 bytes\n * @param  {PostConditionMode} postConditionMode - whether post conditions must fully cover all\n *                                                 transferred assets\n * @param  {PostCondition[]} postConditions - an array of post conditions to add to the\n *                                                  transaction\n * @param  {Boolean} sponsored - true if another account is sponsoring the transaction fees\n */\nexport interface TokenTransferOptions {\n  recipient: string | PrincipalCV;\n  amount: BigNum;\n  fee?: BigNum;\n  nonce?: BigNum;\n  network?: StacksNetwork;\n  anchorMode?: AnchorMode;\n  memo?: string;\n  postConditionMode?: PostConditionMode;\n  postConditions?: PostCondition[];\n  sponsored?: boolean;\n}\n\nexport interface UnsignedTokenTransferOptions extends TokenTransferOptions {\n  publicKey: string;\n}\n\nexport interface SignedTokenTransferOptions extends TokenTransferOptions {\n  senderKey: string;\n}\n\nexport interface UnsignedMultiSigTokenTransferOptions extends TokenTransferOptions {\n  numSignatures: number;\n  publicKeys: string[];\n}\n\nexport interface SignedMultiSigTokenTransferOptions extends TokenTransferOptions {\n  numSignatures: number;\n  publicKeys: string[];\n  signerKeys: string[];\n}\n\n/**\n * Generates an unsigned Stacks token transfer transaction\n *\n * Returns a Stacks token transfer transaction.\n *\n * @param  {UnsignedTokenTransferOptions | UnsignedMultiSigTokenTransferOptions} txOptions - an options object for the token transfer\n *\n * @return {Promis<StacksTransaction>}\n */\nexport async function makeUnsignedSTXTokenTransfer(\n  txOptions: UnsignedTokenTransferOptions | UnsignedMultiSigTokenTransferOptions\n): Promise<StacksTransaction> {\n  const defaultOptions = {\n    fee: new BigNum(0),\n    nonce: new BigNum(0),\n    network: new StacksMainnet(),\n    anchorMode: AnchorMode.Any,\n    postConditionMode: PostConditionMode.Deny,\n    memo: '',\n    sponsored: false,\n  };\n\n  const options = Object.assign(defaultOptions, txOptions);\n\n  const payload = createTokenTransferPayload(options.recipient, options.amount, options.memo);\n\n  let authorization = null;\n  let spendingCondition = null;\n\n  if ('publicKey' in options) {\n    // single-sig\n    spendingCondition = createSingleSigSpendingCondition(\n      AddressHashMode.SerializeP2PKH,\n      options.publicKey,\n      options.nonce,\n      options.fee\n    );\n  } else {\n    // multi-sig\n    spendingCondition = createMultiSigSpendingCondition(\n      AddressHashMode.SerializeP2SH,\n      options.numSignatures,\n      options.publicKeys,\n      options.nonce,\n      options.fee\n    );\n  }\n\n  if (options.sponsored) {\n    authorization = new SponsoredAuthorization(spendingCondition);\n  } else {\n    authorization = new StandardAuthorization(spendingCondition);\n  }\n\n  const postConditions: PostCondition[] = [];\n  if (options.postConditions && options.postConditions.length > 0) {\n    options.postConditions.forEach(postCondition => {\n      postConditions.push(postCondition);\n    });\n  }\n\n  const lpPostConditions = createLPList(postConditions);\n  const transaction = new StacksTransaction(\n    options.network.version,\n    authorization,\n    payload,\n    lpPostConditions,\n    options.postConditionMode,\n    defaultOptions.anchorMode,\n    options.network.chainId\n  );\n\n  if (!txOptions.fee) {\n    const txFee = await estimateTransfer(transaction, options.network);\n    transaction.setFee(txFee);\n  }\n\n  if (!txOptions.nonce) {\n    const addressVersion =\n      options.network.version === TransactionVersion.Mainnet\n        ? AddressVersion.MainnetSingleSig\n        : AddressVersion.TestnetSingleSig;\n    const senderAddress = c32address(addressVersion, transaction.auth.spendingCondition!.signer);\n    const txNonce = await getNonce(senderAddress, options.network);\n    transaction.setNonce(txNonce);\n  }\n\n  return transaction;\n}\n\n/**\n * Generates a signed Stacks token transfer transaction\n *\n * Returns a signed Stacks token transfer transaction.\n *\n * @param  {SignedTokenTransferOptions | SignedMultiSigTokenTransferOptions} txOptions - an options object for the token transfer\n *\n * @return {StacksTransaction}\n */\nexport async function makeSTXTokenTransfer(\n  txOptions: SignedTokenTransferOptions | SignedMultiSigTokenTransferOptions\n): Promise<StacksTransaction> {\n  if ('senderKey' in txOptions) {\n    const publicKey = publicKeyToString(getPublicKey(createStacksPrivateKey(txOptions.senderKey)));\n    const options = omit(txOptions, 'senderKey');\n    const transaction = await makeUnsignedSTXTokenTransfer({ publicKey, ...options });\n\n    const privKey = createStacksPrivateKey(txOptions.senderKey);\n    const signer = new TransactionSigner(transaction);\n    signer.signOrigin(privKey);\n\n    return transaction;\n  } else {\n    const options = omit(txOptions, 'signerKeys');\n    const transaction = await makeUnsignedSTXTokenTransfer(options);\n\n    const signer = new TransactionSigner(transaction);\n    let pubKeys = txOptions.publicKeys;\n    for (const key of txOptions.signerKeys) {\n      const pubKey = pubKeyfromPrivKey(key);\n      pubKeys = pubKeys.filter(pk => pk !== pubKey.data.toString('hex'));\n      signer.signOrigin(createStacksPrivateKey(key));\n    }\n\n    for (const key of pubKeys) {\n      signer.appendOrigin(publicKeyFromBuffer(Buffer.from(key, 'hex')));\n    }\n\n    return transaction;\n  }\n}\n\n/**\n * Contract deploy transaction options\n *\n * @param  {String} contractName - the contract name\n * @param  {String} codeBody - the code body string\n * @param  {String} senderKey - hex string sender private key used to sign transaction\n * @param  {BigNum} fee - transaction fee in microstacks\n * @param  {BigNum} nonce - a nonce must be increased monotonically with each new transaction\n * @param  {StacksNetwork} network - the Stacks blockchain network this transaction is destined for\n * @param  {anchorMode} anchorMode - identify how the the transaction should be mined\n * @param  {PostConditionMode} postConditionMode - whether post conditions must fully cover all\n *                                                 transferred assets\n * @param  {PostCondition[]} postConditions - an array of post conditions to add to the\n *                                                  transaction\n * @param  {Boolean} sponsored - true if another account is sponsoring the transaction fees\n */\nexport interface ContractDeployOptions {\n  contractName: string;\n  codeBody: string;\n  senderKey: string;\n  fee?: BigNum;\n  nonce?: BigNum;\n  network?: StacksNetwork;\n  anchorMode?: AnchorMode;\n  postConditionMode?: PostConditionMode;\n  postConditions?: PostCondition[];\n  sponsored?: boolean;\n}\n\n/**\n * Estimate the total transaction fee in microstacks for a contract deploy\n *\n * @param {StacksTransaction} transaction - the token transfer transaction to estimate fees for\n * @param {StacksNetwork} network - the Stacks network to estimate transaction for\n *\n * @return a promise that resolves to number of microstacks per byte\n */\nexport async function estimateContractDeploy(\n  transaction: StacksTransaction,\n  network?: StacksNetwork\n): Promise<BigNum> {\n  if (transaction.payload.payloadType !== PayloadType.SmartContract) {\n    throw new Error(\n      `Contract deploy fee estimation only possible with ${\n        PayloadType[PayloadType.SmartContract]\n      } transactions. Invoked with: ${PayloadType[transaction.payload.payloadType]}`\n    );\n  }\n\n  const requestHeaders = {\n    Accept: 'application/text',\n  };\n\n  const fetchOptions = {\n    method: 'GET',\n    headers: requestHeaders,\n  };\n\n  // Place holder estimate until contract deploy fee estimation is fully implemented on Stacks\n  // blockchain core\n  const defaultNetwork = new StacksMainnet();\n  const url = network\n    ? network.getTransferFeeEstimateApiUrl()\n    : defaultNetwork.getTransferFeeEstimateApiUrl();\n\n  const response = await fetchPrivate(url, fetchOptions);\n  if (!response.ok) {\n    let msg = '';\n    try {\n      msg = await response.text();\n    } catch (error) {}\n    throw new Error(\n      `Error estimating contract deploy fee. Response ${response.status}: ${response.statusText}. Attempted to fetch ${url} and failed with the message: \"${msg}\"`\n    );\n  }\n  const feeRateResult = await response.text();\n  const txBytes = new BigNum(transaction.serialize().byteLength);\n  const feeRate = new BigNum(feeRateResult);\n  return feeRate.mul(txBytes);\n}\n\n/**\n * Generates a Clarity smart contract deploy transaction\n *\n * @param  {ContractDeployOptions} txOptions - an options object for the contract deploy\n *\n * Returns a signed Stacks smart contract deploy transaction.\n *\n * @return {StacksTransaction}\n */\nexport async function makeContractDeploy(\n  txOptions: ContractDeployOptions\n): Promise<StacksTransaction> {\n  const defaultOptions = {\n    fee: new BigNum(0),\n    nonce: new BigNum(0),\n    network: new StacksMainnet(),\n    anchorMode: AnchorMode.Any,\n    postConditionMode: PostConditionMode.Deny,\n    sponsored: false,\n  };\n\n  const options = Object.assign(defaultOptions, txOptions);\n\n  const payload = createSmartContractPayload(options.contractName, options.codeBody);\n\n  const addressHashMode = AddressHashMode.SerializeP2PKH;\n  const privKey = createStacksPrivateKey(options.senderKey);\n  const pubKey = getPublicKey(privKey);\n\n  let authorization = null;\n\n  const spendingCondition = createSingleSigSpendingCondition(\n    addressHashMode,\n    publicKeyToString(pubKey),\n    options.nonce,\n    options.fee\n  );\n\n  if (options.sponsored) {\n    authorization = new SponsoredAuthorization(spendingCondition);\n  } else {\n    authorization = new StandardAuthorization(spendingCondition);\n  }\n\n  const postConditions: PostCondition[] = [];\n  if (options.postConditions && options.postConditions.length > 0) {\n    options.postConditions.forEach(postCondition => {\n      postConditions.push(postCondition);\n    });\n  }\n\n  const lpPostConditions = createLPList(postConditions);\n  const transaction = new StacksTransaction(\n    options.network.version,\n    authorization,\n    payload,\n    lpPostConditions,\n    options.postConditionMode,\n    options.anchorMode,\n    options.network.chainId\n  );\n\n  if (!txOptions.fee) {\n    const txFee = await estimateContractDeploy(transaction, options.network);\n    transaction.setFee(txFee);\n  }\n\n  if (!txOptions.nonce) {\n    const addressVersion =\n      options.network.version === TransactionVersion.Mainnet\n        ? AddressVersion.MainnetSingleSig\n        : AddressVersion.TestnetSingleSig;\n    const senderAddress = publicKeyToAddress(addressVersion, pubKey);\n    const txNonce = await getNonce(senderAddress, options.network);\n    transaction.setNonce(txNonce);\n  }\n\n  if (options.senderKey) {\n    const signer = new TransactionSigner(transaction);\n    signer.signOrigin(privKey);\n  }\n\n  return transaction;\n}\n\n/**\n * Contract function call transaction options\n * @param  {String} contractAddress - the c32check address of the contract\n * @param  {String} contractName - the contract name\n * @param  {String} functionName - name of the function to be called\n * @param  {[ClarityValue]} functionArgs - an array of Clarity values as arguments to the function call\n * @param  {String} senderKey - hex string sender private key used to sign transaction\n * @param  {BigNum} fee - transaction fee in microstacks\n * @param  {BigNum} nonce - a nonce must be increased monotonically with each new transaction\n * @param  {StacksNetwork} network - the Stacks blockchain network this transaction is destined for\n * @param  {anchorMode} anchorMode - identify how the the transaction should be mined\n * @param  {PostConditionMode} postConditionMode - whether post conditions must fully cover all\n *                                                 transferred assets\n * @param  {PostCondition[]} postConditions - an array of post conditions to add to the\n *                                                  transaction\n * @param  {Boolean} sponsored - true if another account is sponsoring the transaction fees\n */\nexport interface ContractCallOptions {\n  contractAddress: string;\n  contractName: string;\n  functionName: string;\n  functionArgs: ClarityValue[];\n  fee?: BigNum;\n  feeEstimateApiUrl?: string;\n  nonce?: BigNum;\n  network?: StacksNetwork;\n  anchorMode?: AnchorMode;\n  postConditionMode?: PostConditionMode;\n  postConditions?: PostCondition[];\n  validateWithAbi?: boolean | ClarityAbi;\n  sponsored?: boolean;\n}\n\nexport interface UnsignedContractCallOptions extends ContractCallOptions {\n  publicKey: string;\n}\n\nexport interface SignedContractCallOptions extends ContractCallOptions {\n  senderKey: string;\n}\n\nexport interface UnsignedMultiSigContractCallOptions extends ContractCallOptions {\n  numSignatures: number;\n  publicKeys: string[];\n}\n\nexport interface SignedMultiSigContractCallOptions extends ContractCallOptions {\n  numSignatures: number;\n  publicKeys: string[];\n  signerKeys: string[];\n}\n\n/**\n * Estimate the total transaction fee in microstacks for a contract function call\n *\n * @param {StacksTransaction} transaction - the token transfer transaction to estimate fees for\n * @param {StacksNetwork} network - the Stacks network to estimate transaction for\n *\n * @return a promise that resolves to number of microstacks per byte\n */\nexport async function estimateContractFunctionCall(\n  transaction: StacksTransaction,\n  network?: StacksNetwork\n): Promise<BigNum> {\n  if (transaction.payload.payloadType !== PayloadType.ContractCall) {\n    throw new Error(\n      `Contract call fee estimation only possible with ${\n        PayloadType[PayloadType.ContractCall]\n      } transactions. Invoked with: ${PayloadType[transaction.payload.payloadType]}`\n    );\n  }\n\n  const requestHeaders = {\n    Accept: 'application/text',\n  };\n\n  const fetchOptions = {\n    method: 'GET',\n    headers: requestHeaders,\n  };\n\n  // Place holder estimate until contract call fee estimation is fully implemented on Stacks\n  // blockchain core\n  const defaultNetwork = new StacksMainnet();\n  const url = network\n    ? network.getTransferFeeEstimateApiUrl()\n    : defaultNetwork.getTransferFeeEstimateApiUrl();\n\n  const response = await fetchPrivate(url, fetchOptions);\n  if (!response.ok) {\n    let msg = '';\n    try {\n      msg = await response.text();\n    } catch (error) {}\n    throw new Error(\n      `Error estimating contract call fee. Response ${response.status}: ${response.statusText}. Attempted to fetch ${url} and failed with the message: \"${msg}\"`\n    );\n  }\n  const feeRateResult = await response.text();\n  const txBytes = new BigNum(transaction.serialize().byteLength);\n  const feeRate = new BigNum(feeRateResult);\n  return feeRate.mul(txBytes);\n}\n\n/**\n * Generates an unsigned Clarity smart contract function call transaction\n *\n * @param {UnsignedContractCallOptions | UnsignedMultiSigContractCallOptions} txOptions - an options object for the contract call\n *\n * @returns {Promise<StacksTransaction>}\n */\nexport async function makeUnsignedContractCall(\n  txOptions: UnsignedContractCallOptions | UnsignedMultiSigContractCallOptions\n): Promise<StacksTransaction> {\n  const defaultOptions = {\n    fee: new BigNum(0),\n    nonce: new BigNum(0),\n    network: new StacksMainnet(),\n    anchorMode: AnchorMode.Any,\n    postConditionMode: PostConditionMode.Deny,\n    sponsored: false,\n  };\n\n  const options = Object.assign(defaultOptions, txOptions);\n\n  const payload = createContractCallPayload(\n    options.contractAddress,\n    options.contractName,\n    options.functionName,\n    options.functionArgs\n  );\n\n  if (options?.validateWithAbi) {\n    let abi: ClarityAbi;\n    if (typeof options.validateWithAbi === 'boolean') {\n      if (options?.network) {\n        abi = await getAbi(options.contractAddress, options.contractName, options.network);\n      } else {\n        throw new Error('Network option must be provided in order to validate with ABI');\n      }\n    } else {\n      abi = options.validateWithAbi;\n    }\n\n    validateContractCall(payload, abi);\n  }\n\n  let spendingCondition = null;\n  let authorization = null;\n\n  if ('publicKey' in options) {\n    // single-sig\n    spendingCondition = createSingleSigSpendingCondition(\n      AddressHashMode.SerializeP2PKH,\n      options.publicKey,\n      options.nonce,\n      options.fee\n    );\n  } else {\n    // multi-sig\n    spendingCondition = createMultiSigSpendingCondition(\n      AddressHashMode.SerializeP2SH,\n      options.numSignatures,\n      options.publicKeys,\n      options.nonce,\n      options.fee\n    );\n  }\n\n  if (options.sponsored) {\n    authorization = new SponsoredAuthorization(spendingCondition);\n  } else {\n    authorization = new StandardAuthorization(spendingCondition);\n  }\n\n  const postConditions: PostCondition[] = [];\n  if (options.postConditions && options.postConditions.length > 0) {\n    options.postConditions.forEach(postCondition => {\n      postConditions.push(postCondition);\n    });\n  }\n\n  const lpPostConditions = createLPList(postConditions);\n  const transaction = new StacksTransaction(\n    options.network.version,\n    authorization,\n    payload,\n    lpPostConditions,\n    options.postConditionMode,\n    options.anchorMode,\n    options.network.chainId\n  );\n\n  if (!txOptions.fee) {\n    const txFee = await estimateContractFunctionCall(transaction, options.network);\n    transaction.setFee(txFee);\n  }\n\n  if (!txOptions.nonce) {\n    const addressVersion =\n      options.network.version === TransactionVersion.Mainnet\n        ? AddressVersion.MainnetSingleSig\n        : AddressVersion.TestnetSingleSig;\n    const senderAddress = c32address(addressVersion, transaction.auth.spendingCondition!.signer);\n    const txNonce = await getNonce(senderAddress, options.network);\n    transaction.setNonce(txNonce);\n  }\n\n  return transaction;\n}\n\n/**\n * Generates a Clarity smart contract function call transaction\n *\n * @param  {SignedContractCallOptions | SignedMultiSigContractCallOptions} txOptions - an options object for the contract function call\n *\n * Returns a signed Stacks smart contract function call transaction.\n *\n * @return {StacksTransaction}\n */\nexport async function makeContractCall(\n  txOptions: SignedContractCallOptions | SignedMultiSigContractCallOptions\n): Promise<StacksTransaction> {\n  if ('senderKey' in txOptions) {\n    const publicKey = publicKeyToString(getPublicKey(createStacksPrivateKey(txOptions.senderKey)));\n    const options = omit(txOptions, 'senderKey');\n    const transaction = await makeUnsignedContractCall({ publicKey, ...options });\n\n    const privKey = createStacksPrivateKey(txOptions.senderKey);\n    const signer = new TransactionSigner(transaction);\n    signer.signOrigin(privKey);\n\n    return transaction;\n  } else {\n    const options = omit(txOptions, 'signerKeys');\n    const transaction = await makeUnsignedContractCall(options);\n\n    const signer = new TransactionSigner(transaction);\n    let pubKeys = txOptions.publicKeys;\n    for (const key of txOptions.signerKeys) {\n      const pubKey = pubKeyfromPrivKey(key);\n      pubKeys = pubKeys.filter(pk => pk !== pubKey.data.toString('hex'));\n      signer.signOrigin(createStacksPrivateKey(key));\n    }\n\n    for (const key of pubKeys) {\n      signer.appendOrigin(publicKeyFromBuffer(Buffer.from(key, 'hex')));\n    }\n\n    return transaction;\n  }\n}\n\n/**\n * Generates a STX post condition with a standard principal\n *\n * Returns a STX post condition object\n *\n * @param  {String} address - the c32check address\n * @param  {FungibleConditionCode} conditionCode - the condition code\n * @param  {BigNum} amount - the amount of STX tokens\n *\n * @return {STXPostCondition}\n */\nexport function makeStandardSTXPostCondition(\n  address: string,\n  conditionCode: FungibleConditionCode,\n  amount: BigNum\n): STXPostCondition {\n  return createSTXPostCondition(createStandardPrincipal(address), conditionCode, amount);\n}\n\n/**\n * Generates a STX post condition with a contract principal\n *\n * Returns a STX post condition object\n *\n * @param  {String} address - the c32check address of the contract\n * @param  {String} contractName - the name of the contract\n * @param  {FungibleConditionCode} conditionCode - the condition code\n * @param  {BigNum} amount - the amount of STX tokens\n *\n * @return {STXPostCondition}\n */\nexport function makeContractSTXPostCondition(\n  address: string,\n  contractName: string,\n  conditionCode: FungibleConditionCode,\n  amount: BigNum\n): STXPostCondition {\n  return createSTXPostCondition(\n    createContractPrincipal(address, contractName),\n    conditionCode,\n    amount\n  );\n}\n\n/**\n * Generates a fungible token post condition with a standard principal\n *\n * Returns a fungible token post condition object\n *\n * @param  {String} address - the c32check address\n * @param  {FungibleConditionCode} conditionCode - the condition code\n * @param  {BigNum} amount - the amount of fungible tokens\n * @param  {AssetInfo} assetInfo - asset info describing the fungible token\n *\n * @return {FungiblePostCondition}\n */\nexport function makeStandardFungiblePostCondition(\n  address: string,\n  conditionCode: FungibleConditionCode,\n  amount: BigNum,\n  assetInfo: string | AssetInfo\n): FungiblePostCondition {\n  return createFungiblePostCondition(\n    createStandardPrincipal(address),\n    conditionCode,\n    amount,\n    assetInfo\n  );\n}\n\n/**\n * Generates a fungible token post condition with a contract principal\n *\n * Returns a fungible token post condition object\n *\n * @param  {String} address - the c32check address\n * @param  {String} contractName - the name of the contract\n * @param  {FungibleConditionCode} conditionCode - the condition code\n * @param  {BigNum} amount - the amount of fungible tokens\n * @param  {AssetInfo} assetInfo - asset info describing the fungible token\n *\n * @return {FungiblePostCondition}\n */\nexport function makeContractFungiblePostCondition(\n  address: string,\n  contractName: string,\n  conditionCode: FungibleConditionCode,\n  amount: BigNum,\n  assetInfo: string | AssetInfo\n): FungiblePostCondition {\n  return createFungiblePostCondition(\n    createContractPrincipal(address, contractName),\n    conditionCode,\n    amount,\n    assetInfo\n  );\n}\n\n/**\n * Generates a non-fungible token post condition with a standard principal\n *\n * Returns a non-fungible token post condition object\n *\n * @param  {String} address - the c32check address\n * @param  {FungibleConditionCode} conditionCode - the condition code\n * @param  {AssetInfo} assetInfo - asset info describing the non-fungible token\n * @param  {ClarityValue} assetName - asset name describing the non-fungible token\n *\n * @return {NonFungiblePostCondition}\n */\nexport function makeStandardNonFungiblePostCondition(\n  address: string,\n  conditionCode: NonFungibleConditionCode,\n  assetInfo: string | AssetInfo,\n  assetName: ClarityValue\n): NonFungiblePostCondition {\n  return createNonFungiblePostCondition(\n    createStandardPrincipal(address),\n    conditionCode,\n    assetInfo,\n    assetName\n  );\n}\n\n/**\n * Generates a non-fungible token post condition with a contract principal\n *\n * Returns a non-fungible token post condition object\n *\n * @param  {String} address - the c32check address\n * @param  {String} contractName - the name of the contract\n * @param  {FungibleConditionCode} conditionCode - the condition code\n * @param  {AssetInfo} assetInfo - asset info describing the non-fungible token\n * @param  {ClarityValue} assetName - asset name describing the non-fungible token\n *\n * @return {NonFungiblePostCondition}\n */\nexport function makeContractNonFungiblePostCondition(\n  address: string,\n  contractName: string,\n  conditionCode: NonFungibleConditionCode,\n  assetInfo: string | AssetInfo,\n  assetName: ClarityValue\n): NonFungiblePostCondition {\n  return createNonFungiblePostCondition(\n    createContractPrincipal(address, contractName),\n    conditionCode,\n    assetInfo,\n    assetName\n  );\n}\n\n/**\n * Read only function options\n *\n * @param  {String} contractAddress - the c32check address of the contract\n * @param  {String} contractName - the contract name\n * @param  {String} functionName - name of the function to be called\n * @param  {[ClarityValue]} functionArgs - an array of Clarity values as arguments to the function call\n * @param  {StacksNetwork} network - the Stacks blockchain network this transaction is destined for\n * @param  {String} senderAddress - the c32check address of the sender\n */\n\nexport interface ReadOnlyFunctionOptions {\n  contractName: string;\n  contractAddress: string;\n  functionName: string;\n  functionArgs: ClarityValue[];\n  network?: StacksNetwork;\n  senderAddress: string;\n}\n\n/**\n * Calls a read only function from a contract interface\n *\n * @param  {ReadOnlyFunctionOptions} readOnlyFunctionOptions - the options object\n *\n * Returns an object with a status bool (okay) and a result string that is a serialized clarity value in hex format.\n *\n * @return {ClarityValue}\n */\nexport async function callReadOnlyFunction(\n  readOnlyFunctionOptions: ReadOnlyFunctionOptions\n): Promise<ClarityValue> {\n  const defaultOptions = {\n    network: new StacksMainnet(),\n  };\n\n  const options = Object.assign(defaultOptions, readOnlyFunctionOptions);\n\n  const {\n    contractName,\n    contractAddress,\n    functionName,\n    functionArgs,\n    network,\n    senderAddress,\n  } = options;\n\n  const url = network.getReadOnlyFunctionCallApiUrl(contractAddress, contractName, functionName);\n\n  const args = functionArgs.map(arg => cvToHex(arg));\n\n  const body = JSON.stringify({\n    sender: senderAddress,\n    arguments: args,\n  });\n\n  const response = await fetchPrivate(url, {\n    method: 'POST',\n    body,\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n\n  if (!response.ok) {\n    let msg = '';\n    try {\n      msg = await response.text();\n    } catch (error) {}\n    throw new Error(\n      `Error calling read-only function. Response ${response.status}: ${response.statusText}. Attempted to fetch ${url} and failed with the message: \"${msg}\"`\n    );\n  }\n\n  return response.json().then(responseJson => parseReadOnlyResponse(responseJson));\n}\n\n/**\n * Sponsored transaction options\n *\n * @param  {StacksTransaction} transaction - the origin-signed transaction to sponsor\n * @param  {String} sponsorPrivateKey - the sponsor's private key\n * @param  {BigNum} fee - the transaction fee amount to sponsor\n * @param  {BigNum} sponsorNonce - the nonce of the sponsor account\n * @param  {AddressHashMode} sponsorAddressHashmode - the sponsor address hashmode\n * @param  {StacksNetwork} network - the Stacks blockchain network this transaction is destined for\n */\nexport interface SponsorOptions {\n  transaction: StacksTransaction;\n  sponsorPrivateKey: string;\n  fee?: BigNum;\n  sponsorNonce?: BigNum;\n  sponsorAddressHashmode?: AddressHashMode;\n  network?: StacksNetwork;\n}\n\n/**\n * Constructs and signs a sponsored transaction as the sponsor\n *\n * @param  {SponsorOptions} sponsorOptions - the sponsor options object\n *\n * Returns a signed sponsored transaction.\n *\n * @return {ClarityValue}\n */\nexport async function sponsorTransaction(\n  sponsorOptions: SponsorOptions\n): Promise<StacksTransaction> {\n  const defaultOptions = {\n    fee: new BigNum(0),\n    sponsorNonce: new BigNum(0),\n    sponsorAddressHashmode: AddressHashMode.SerializeP2PKH as SingleSigHashMode,\n  };\n\n  const options = Object.assign(defaultOptions, sponsorOptions);\n  const network =\n    sponsorOptions.network ??\n    (options.transaction.version === TransactionVersion.Mainnet\n      ? new StacksMainnet()\n      : new StacksTestnet());\n  const sponsorPubKey = pubKeyfromPrivKey(options.sponsorPrivateKey);\n\n  if (!sponsorOptions.fee) {\n    let txFee = new BigNum(0);\n    switch (options.transaction.payload.payloadType) {\n      case PayloadType.TokenTransfer:\n        txFee = await estimateTransfer(options.transaction, network);\n        break;\n      case PayloadType.SmartContract:\n        txFee = await estimateContractDeploy(options.transaction, network);\n        break;\n      case PayloadType.ContractCall:\n        txFee = await estimateContractFunctionCall(options.transaction, network);\n        break;\n      default:\n        throw new Error(\n          `Spnsored transactions not supported for transaction type ${\n            PayloadType[options.transaction.payload.payloadType]\n          }`\n        );\n    }\n    options.transaction.setFee(txFee);\n    options.fee = txFee;\n  }\n\n  if (!sponsorOptions.sponsorNonce) {\n    const addressVersion =\n      network.version === TransactionVersion.Mainnet\n        ? AddressVersion.MainnetSingleSig\n        : AddressVersion.TestnetSingleSig;\n\n    const senderAddress = publicKeyToAddress(addressVersion, sponsorPubKey);\n    const sponsorNonce = await getNonce(senderAddress, network);\n    options.sponsorNonce = sponsorNonce;\n  }\n\n  const sponsorSpendingCondition = createSingleSigSpendingCondition(\n    options.sponsorAddressHashmode,\n    publicKeyToString(sponsorPubKey),\n    options.sponsorNonce,\n    options.fee\n  );\n\n  options.transaction.setSponsor(sponsorSpendingCondition);\n\n  const privKey = createStacksPrivateKey(options.sponsorPrivateKey);\n  const signer = TransactionSigner.createSponsorSigner(\n    options.transaction,\n    sponsorSpendingCondition\n  );\n  signer.signSponsor(privKey);\n\n  return options.transaction;\n}\n"],"sourceRoot":""}