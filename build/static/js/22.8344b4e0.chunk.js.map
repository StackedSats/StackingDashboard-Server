{"version":3,"sources":["pages/stack-analytics/Account.js","../../src/Tabs.tsx","../node_modules/react-uid/dist/es2015/uid.js","../node_modules/react-uid/dist/es2015/context.js","../node_modules/react-uid/dist/es2015/hooks.js","components/right.js","components/Typography/PageTitle.js"],"names":["Left","className","Blank","useState","date","setDate","history","useHistory","dispatch","useDispatch","useEffect","a","addr","getPerson","axios","get","_profile","stxAddress","data","console","log","results","fetch","left","right","map","value","index","onClick","e","tx","tx_id","type","UPDATETX","payload","push","Date","burn_block_time","toLocaleDateString","block_height","sender_address","generateUID","counter","WeakMap","uid","item","has","set","createSource","prefix","source","React","useUIDState","context","quartz","getPrefix","getId","gen","Direction","TabContext","createContext","id","activeTab","numTabs","setActiveTab","direction","HORIZONTAL","TabGroup","initialActiveTab","children","useMemo","Tab","activeClassName","inactiveClassName","trigger","props","useContext","tabRef","useRef","calculatedClassName","interactionProps","interactions","ref","role","tabIndex","TabPanel","as","Component","style","visibility","TabList","tabListRef","handleKeyUp","useCallback","actions","End","Home","action","isActive","Right","prices","useSelector","state","liquidStxSupplyResult","stxusd","btcusd","toLocaleString","useGrouping","PageTitle","show"],"mappings":"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","file":"static/js/22.8344b4e0.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport PageTitle from \"../../components/Typography/PageTitle\";\nimport {\n  Card,\n  CardBody,\n  Select,\n  Table,\n  TableHeader,\n  TableCell,\n  TableBody,\n  TableRow,\n  TableContainer,\n} from \"@windmill/react-ui\";\nimport { TabGroup } from \"@statikly/funk\";\nimport axios from \"axios\";\nimport { getPerson } from \"../../scripts/auth\";\nimport { useHistory } from \"react-router-dom\";\nimport { UPDATETX } from \"../../redux/reducers\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Right } from \"../../components/right\";\n\nconst Left = () => {\n  return (\n    <>\n      <h1 className=\"mb-3 text-2xl\">Account</h1>\n      <div>ST000000000000000000002AMW42H.pox</div>\n    </>\n  );\n};\n\n// const Right = () => {\n//   return (\n//     <>\n//       <div className=\"flex justify-between\">\n//         <div className=\"pr-6 mr-6 text-gray-300 border-r border-gray-400\">\n//           <p className=\"mb-1\">Total STX in circulation</p>\n//           <div className=\"text-xl font-medium text-success-400\">\n//             4,647,916,016 XTZ\n//           </div>\n//           <div>$0.016</div>\n//         </div>\n//         <div>\n//           <p className=\"mb-1\">Circulation with</p>\n//           <div className=\"text-xl text-white\">\n//             <b>34000</b> Wallet\n//           </div>\n//         </div>\n//       </div>\n//     </>\n//   );\n// };\n\nfunction Blank() {\n  const [date, setDate] = useState([]);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const redirect = (tx) => {\n    console.log(tx);\n    dispatch({ type: UPDATETX, payload: tx });\n    history.push(\"/app/stack-analytics/transaction\");\n  };\n  useEffect(() => {\n    const fetch = async () => {\n      const addr = getPerson();\n      const data = await axios.get(\n        `https://stacks-node-api.testnet.stacks.co/extended/v1/address/${addr._profile.stxAddress}/transactions`\n      );\n      console.log(data);\n      setDate(data.data.results);\n    };\n    fetch();\n  }, []);\n\n  return (\n    <>\n      <PageTitle left={<Left />} right={<Right />}></PageTitle>\n\n      <div className=\"p-4 space-y-6\">\n        <div className=\"grid grid-cols-1 mb-8 xl:gap-6 xl:grid-cols-2\">\n          <Card className=\"mb-8 shadow-md\">\n            <CardBody className=\"text-white\">\n              <h3 className=\"mb-10 text-2xl font-medium\">Summary of STX</h3>\n              <TableContainer className=\"mb-8\">\n                <Table>\n                  <TableHeader>\n                    <tr>\n                      <TableCell>Date</TableCell>\n                      <TableCell>Block</TableCell>\n                      <TableCell>Sender</TableCell>\n                      <TableCell>Volume</TableCell>\n                    </tr>\n                  </TableHeader>\n                  <TableBody className=\"text-lg divide-gray-500\">\n                    {date.map((value, index) => {\n                      return (\n                        <TableRow\n                          className=\"text-white\"\n                          onClick={(e) => redirect(value.tx_id)}\n                        >\n                          <TableCell>\n                            {new Date(\n                              value.burn_block_time\n                            ).toLocaleDateString()}\n                          </TableCell>\n                          <TableCell>{value.block_height}</TableCell>\n                          <TableCell>{value.sender_address}</TableCell>\n                          <TableCell>\n                            <div className=\"text-white \"> STX</div>\n                            <div className=\"\">\n                              <span className=\"text-warning-500\">3.25</span> BTC\n                              |{\" \"}\n                              <span className=\"text-success-600\">245,635</span>{\" \"}\n                              USD\n                            </div>\n                          </TableCell>\n                        </TableRow>\n                      );\n                    })}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </CardBody>\n          </Card>\n          {/* <Card className=\"mb-8 shadow-md\">\n            <CardBody className=\"text-white\">\n              <TabGroup numTabs={3} direction={TabGroup.direction.HORIZONTAL}>\n                <div className=\"flex items-center justify-between text-white\">\n                  <div className=\"flex items-center\">\n                    <TabGroup.TabList>\n                      <TabGroup.Tab\n                        index={0}\n                        className=\"px-4 py-2 mr-3 text-xl transition-colors duration-150\"\n                        activeClassName=\"text-primary-500 text-white\"\n                        inactiveClassName=\"text-gray-400 text-gray-300\"\n                      >\n                        Largest Wallet\n                      </TabGroup.Tab>\n                      <TabGroup.Tab\n                        index={1}\n                        className=\"px-4 py-2 mr-3 text-xl transition-colors duration-150\"\n                        activeClassName=\"text-primary-500 text-white\"\n                        inactiveClassName=\"text-gray-400 text-gray-300\"\n                      >\n                        Exchange Wallet\n                      </TabGroup.Tab>\n                    </TabGroup.TabList>\n                  </div>\n                  <div>\n                    <Select className=\"py-1 pl-2 mt-1 bg-transparent border-gray-300 leading-1\">\n                      <option>Sort By</option>\n                    </Select>\n                  </div>\n                </div>\n                <TabGroup.TabPanel\n                  index={0}\n                  className=\"py-6 text-gray-200 transition-all transform\"\n                  activeClassName=\"opacity-100 duration-500 translate-x-0\"\n                  inactiveClassName=\"absolute opacity-0 -translate-x-2\"\n                >\n                  <TableContainer className=\"mb-8\">\n                    <Table>\n                      <TableHeader>\n                        <tr>\n                          <TableCell>Rank</TableCell>\n                          <TableCell>Name</TableCell>\n                          <TableCell>Balance</TableCell>\n                        </tr>\n                      </TableHeader>\n                      <TableBody className=\"text-lg divide-gray-500\">\n                        <TableRow className=\"text-white\">\n                          <TableCell>1</TableCell>\n                          <TableCell>Binance</TableCell>\n                          <TableCell>\n                            <div className=\"text-white \">465,465,416 STX</div>\n                            <div className=\"\">\n                              <span className=\"text-warning-500\">3.25</span> BTC\n                              |{\" \"}\n                              <span className=\"text-success-600\">245,635</span>{\" \"}\n                              USD\n                            </div>\n                          </TableCell>\n                        </TableRow>\n                        <TableRow className=\"text-white\">\n                          <TableCell>2</TableCell>\n                          <TableCell>Stackedsats</TableCell>\n                          <TableCell>\n                            <div className=\"text-white \">465,465,416 STX</div>\n                            <div className=\"\">\n                              <span className=\"text-warning-500\">3.25</span> BTC\n                              |{\" \"}\n                              <span className=\"text-success-600\">245,635</span>{\" \"}\n                              USD\n                            </div>\n                          </TableCell>\n                        </TableRow>\n                        <TableRow className=\"text-white\">\n                          <TableCell>3</TableCell>\n                          <TableCell>OkCoin</TableCell>\n                          <TableCell>\n                            <div className=\"text-white \">465,465,416 STX</div>\n                            <div className=\"\">\n                              <span className=\"text-warning-500\">3.25</span> BTC\n                              |{\" \"}\n                              <span className=\"text-success-600\">245,635</span>{\" \"}\n                              USD\n                            </div>\n                          </TableCell>\n                        </TableRow>\n                      </TableBody>\n                    </Table>\n                  </TableContainer>\n                </TabGroup.TabPanel>\n                <TabGroup.TabPanel\n                  index={1}\n                  className=\"flex flex-col py-10 text-gray-200 transition-all transform\"\n                  activeClassName=\"opacity-100 duration-500 translate-x-0\"\n                  inactiveClassName=\"absolute opacity-0 -translate-x-2\"\n                >\n                  Exhange Wallet\n                </TabGroup.TabPanel>\n              </TabGroup>\n            </CardBody>\n          </Card> */}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Blank;\n","import React, {\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\n\nimport { useUID } from 'react-uid'\n\nenum Direction {\n  HORIZONTAL,\n  VERTICAL,\n}\n\ninterface TabContextValue {\n  id: string\n  activeTab: number\n  numTabs: number\n  setActiveTab(tab: number): void\n  direction: Direction\n}\n\nlet TabContext = createContext<TabContextValue>({\n  id: 'Please provide a unique id',\n  activeTab: 0,\n  numTabs: 0,\n  setActiveTab: () => {},\n  direction: Direction.HORIZONTAL,\n})\n\nexport function useTab(index: number) {\n  let { activeTab } = useContext(TabContext)\n\n  return {\n    isActive: activeTab === index,\n  }\n}\n\ninterface TabGroupProps {\n  initialActiveTab?: number\n  numTabs: number\n  children: React.ReactNode\n  direction?: Direction\n}\n\nexport function TabGroup({\n  initialActiveTab = 0,\n  numTabs,\n  direction = Direction.HORIZONTAL,\n  children,\n}: TabGroupProps) {\n  let id = useUID()\n  let [activeTab, setActiveTab] = useState(initialActiveTab)\n\n  let value = useMemo(\n    () => ({ id, activeTab, setActiveTab, numTabs, direction }),\n    [activeTab, setActiveTab, numTabs, direction]\n  )\n\n  return <TabContext.Provider value={value}>{children}</TabContext.Provider>\n}\n\ninterface TabProps {\n  index: number\n  className: string\n  activeClassName: string\n  inactiveClassName: string\n  trigger?: 'click' | 'hover' | 'none'\n  children?: React.ReactNode\n  [key: string]: any\n}\n\nexport function Tab({\n  index,\n  className,\n  activeClassName,\n  inactiveClassName,\n  trigger = 'click',\n  ...props\n}: TabProps) {\n  let { id, activeTab, setActiveTab } = useContext(TabContext)\n  let tabRef = useRef<HTMLButtonElement>()\n\n  useEffect(() => {\n    if (activeTab === index) {\n      tabRef.current?.focus()\n    }\n  }, [activeTab, index])\n\n  let calculatedClassName = useMemo(() => {\n    return [\n      className,\n      activeTab === index ? activeClassName : inactiveClassName,\n    ].join(' ')\n  }, [className, activeClassName, inactiveClassName, activeTab, index])\n\n  let interactionProps = useMemo(() => {\n    let interactions: any = {}\n\n    interactions.onClick = () => setActiveTab(index)\n\n    if (trigger === 'hover') {\n      interactions.onMouseEnter = () => setActiveTab(index)\n    }\n\n    return interactions\n  }, [trigger, setActiveTab, index])\n\n  return (\n    <button\n      ref={tabRef}\n      role=\"tab\"\n      aria-controls={`${id}-${index}`}\n      aria-selected={activeTab === index}\n      tabIndex={activeTab === index ? 0 : -1}\n      className={calculatedClassName}\n      {...interactionProps}\n      {...props}\n    />\n  )\n}\n\ntype HTMLTags = keyof JSX.IntrinsicElements\n\ninterface TabPanelProps {\n  as?: HTMLTags\n  index: number\n  className: string\n  activeClassName: string\n  inactiveClassName: string\n  children?: React.ReactNode\n  [key: string]: any\n}\n\nexport function TabPanel({\n  as: Component = 'div',\n  index,\n  className,\n  activeClassName,\n  inactiveClassName,\n  ...props\n}: TabPanelProps) {\n  let { id, activeTab } = useContext(TabContext)\n\n  let calculatedClassName = useMemo(() => {\n    return [\n      className,\n      activeTab === index ? activeClassName : inactiveClassName,\n    ].join(' ')\n  }, [className, activeClassName, inactiveClassName, activeTab, index])\n\n  return (\n    <Component\n      style={{\n        ...props.style,\n        visibility: activeTab === index ? 'visible' : 'hidden',\n      }}\n      id={`${id}-${index}`}\n      role=\"tabpanel\"\n      aria-expanded={activeTab === index}\n      className={calculatedClassName}\n      {...props}\n    />\n  )\n}\n\ninterface TabListProps {\n  as?: HTMLTags\n  children?: React.ReactNode\n  [key: string]: any\n}\n\nexport function TabList({ as: Component = 'div', ...props }: TabListProps) {\n  let tabListRef = useRef<any>()\n  let { setActiveTab, numTabs, activeTab, direction } = useContext(TabContext)\n\n  let handleKeyUp = useCallback(\n    (e: KeyboardEvent) => {\n      let actions: Record<string, () => void> = {\n        End: () => {\n          setActiveTab(numTabs - 1)\n        },\n        Home: () => {\n          setActiveTab(0)\n        },\n      }\n\n      if (direction === Direction.HORIZONTAL) {\n        actions.ArrowLeft = () => {\n          let previous = activeTab - 1 >= 0 ? activeTab - 1 : numTabs - 1\n          setActiveTab(previous)\n        }\n\n        actions.ArrowRight = () => {\n          let next = activeTab + 1 < numTabs ? activeTab + 1 : 0\n          setActiveTab(next)\n        }\n      }\n\n      if (direction === Direction.VERTICAL) {\n        actions.ArrowUp = () => {\n          let previous = activeTab - 1 >= 0 ? activeTab - 1 : numTabs - 1\n          setActiveTab(previous)\n        }\n\n        actions.ArrowDown = () => {\n          let next = activeTab + 1 < numTabs ? activeTab + 1 : 0\n          setActiveTab(next)\n        }\n      }\n\n      let action = actions[e.key]\n\n      if (action) {\n        e.preventDefault()\n        action()\n      }\n    },\n    [setActiveTab, activeTab, numTabs, direction]\n  )\n\n  useEffect(() => {\n    tabListRef.current.addEventListener('keyup', handleKeyUp)\n\n    return () => tabListRef.current.removeEventListener('keyup', handleKeyUp)\n  }, [handleKeyUp])\n\n  // @ts-ignore\n  return <Component ref={tabListRef} role=\"tablist\" {...props} />\n}\n\nTabGroup.Tab = Tab\nTabGroup.TabPanel = TabPanel\nTabGroup.TabList = TabList\nTabGroup.useTab = useTab\n\nTabGroup.direction = Direction\n","/**\n * generates a UID factory\n * @internal\n * @example\n * const uid = generateUID();\n * uid(object) = 1;\n * uid(object) = 1;\n * uid(anotherObject) = 2;\n */\nexport var generateUID = function () {\n    var counter = 1;\n    var map = new WeakMap();\n    /**\n     * @borrows {uid}\n     */\n    var uid = function (item, index) {\n        if (typeof item === 'number' ||\n            typeof item === 'string') {\n            return index ? \"idx-\" + index : \"val-\" + item;\n        }\n        if (!map.has(item)) {\n            map.set(item, counter++);\n            return uid(item);\n        }\n        return 'uid' + map.get(item);\n    };\n    return uid;\n};\n/**\n * @name uid\n * returns an UID associated with {item}\n * @param {Object} item - object to generate UID for\n * @param {Number} index, a fallback index\n * @example\n * uid(object) == 1;\n * uid(object) == 1;\n * uid(anotherObject) == 2;\n * uid(\"not object\", 42) == 42\n *\n * @see {@link useUID}\n */\nexport var uid = generateUID();\n","import * as React from 'react';\nimport { generateUID } from \"./uid\";\nexport var createSource = function (prefix) {\n    if (prefix === void 0) { prefix = ''; }\n    return ({\n        value: 1,\n        prefix: prefix,\n        uid: generateUID()\n    });\n};\nexport var counter = createSource();\nexport var source = React.createContext(createSource());\nexport var getId = function (source) { return source.value++; };\nexport var getPrefix = function (source) { return source ? source.prefix : ''; };\n","import * as React from \"react\";\nimport { counter, getId, getPrefix, source } from \"./context\";\nvar generateUID = function (context) {\n    var quartz = context || counter;\n    var prefix = getPrefix(quartz);\n    var id = getId(quartz);\n    var uid = prefix + id;\n    var gen = function (item) { return uid + quartz.uid(item); };\n    return { uid: uid, gen: gen };\n};\nvar useUIDState = function () {\n    if (process.env.NODE_ENV !== \"production\") {\n        if (!('useContext' in React)) {\n            throw new Error('Hooks API requires React 16.8+');\n        }\n    }\n    // @ts-ignore\n    return React.useState(generateUID(React.useContext(source)));\n};\n/**\n * returns and unique id. SSR friendly\n * returns {String}\n * @see {@link UIDConsumer}\n * @see https://github.com/thearnica/react-uid#hooks-168\n * @example\n * const id = useUID();\n * id == 1; // for example\n */\nexport var useUID = function () {\n    var uid = useUIDState()[0].uid;\n    return uid;\n};\n/**\n * returns an uid generator\n * @see {@link UIDConsumer}\n * @see https://github.com/thearnica/react-uid#hooks-168\n * @example\n * const uid = useUIDSeed();\n * return (\n *  <>\n *    <label for={seed('email')}>Email: </label>\n *    <input id={seed('email')} name=\"email\" />\n *    {data.map(item => <div key={seed(item)}>...</div>\n *  </>\n * )\n */\nexport var useUIDSeed = function () {\n    var gen = useUIDState()[0].gen;\n    return gen;\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nexport const Right = () => {\n  const prices = useSelector((state) => state.prices);\n  return (\n    <>\n      <div className=\"text-gray-300 \">\n        <p className=\"mb-2\">Total Volume</p>\n        <div>\n          <b className=\"mr-2 text-3xl font-normal text-white\">\n            {prices.liquidStxSupplyResult} STX\n          </b>{\" \"}\n          <span>\n            <span className=\"text-yellow-500\">\n              {\" \"}\n              {(\n                (prices.stxusd * prices.liquidStxSupplyResult) /\n                prices.btcusd\n              ).toLocaleString(\"fullwide\", { useGrouping: false })}\n            </span>{\" \"}\n            BTC |{\" \"}\n            <span className=\"text-green-600\">\n              {\" \"}\n              {(\n                prices.stxusd * prices.liquidStxSupplyResult\n              ).toLocaleString(\"fullwide\", { useGrouping: false })}\n            </span>{\" \"}\n            USD\n          </span>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\n\nfunction PageTitle({ children, left, right }) {\n  if (children) {\n    return (\n      <div className=\"flex items-center justify-between px-8 pt-10 pb-8 mb-8 -mx-6 text-gray-100 border-b-2 border-gray-900 bg-gray-950\">\n        <h1 show={children} className=\"mb-3 text-2xl\">\n          {children}\n        </h1>\n      </div>\n    );\n  }\n\n  if (!children) {\n    return (\n      <div className=\"flex flex-wrap items-center justify-between px-12 pt-10 pb-8 mb-8 -mx-6 text-gray-100 border-b-2 border-gray-900 bg-gray-950\">\n        <div>{left}</div>\n        <div>{right}</div>\n      </div>\n    );\n  }\n}\n\nexport default PageTitle;\n"],"sourceRoot":""}