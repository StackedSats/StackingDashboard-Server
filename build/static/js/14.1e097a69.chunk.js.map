{"version":3,"sources":["components/Typography/SectionTitle.js","../../src/Tabs.tsx","../node_modules/react-uid/dist/es2015/uid.js","../node_modules/react-uid/dist/es2015/context.js","../node_modules/react-uid/dist/es2015/hooks.js","components/Cards/NetworkCard.js","../node_modules/classnames/index.js","components/Typography/PageTitle.js","components/Cards/InfoCard.js","components/RoundIcon.js","pages/Cards.js"],"names":["SectionTitle","children","className","generateUID","counter","map","WeakMap","uid","item","index","has","get","set","createSource","prefix","value","source","React","useUIDState","context","quartz","getPrefix","getId","gen","Direction","TabContext","createContext","id","activeTab","numTabs","setActiveTab","direction","HORIZONTAL","TabGroup","initialActiveTab","useState","useMemo","Tab","activeClassName","inactiveClassName","trigger","props","useContext","tabRef","useRef","useEffect","calculatedClassName","interactionProps","interactions","ref","role","tabIndex","TabPanel","as","Component","style","visibility","TabList","tabListRef","handleKeyUp","useCallback","actions","End","Home","action","e","isActive","NetworkCard","title","icon","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","join","module","exports","default","PageTitle","left","right","show","InfoCard","colored","RoundIcon","Icon","iconColorClass","bgColorClass","cls","Cards","type","PeopleIcon","MoneyIcon","CartIcon","ChatIcon"],"mappings":";uIAAA,oBAMeA,IAJf,YAAqC,IAAbC,EAAY,EAAZA,SACtB,OAAO,wBAAIC,UAAU,0CAA0CD,K,uECSjE,E,gBCHWE,EAAc,WACrB,IAAIC,EAAU,EACVC,EAAM,IAAIC,QAed,OAXU,SAANC,EAAgBC,EAAMC,GACtB,MAAoB,kBAATD,GACS,kBAATA,EACAC,EAAQ,OAASA,EAAQ,OAASD,EAExCH,EAAIK,IAAIF,GAIN,MAAQH,EAAIM,IAAIH,IAHnBH,EAAIO,IAAIJ,EAAMJ,KACPG,EAAIC,MCpBZK,GDuCMV,ICvCS,SAAUW,GAEhC,YADe,IAAXA,IAAqBA,EAAS,IAC1B,CACJC,MAAO,EACPD,OAAQA,EACRP,IAAKJ,OAGFC,EAAUS,IACVG,EAASC,gBAAoBJ,KCDpCK,EAAc,WAOd,OAAOD,WAfO,SAAUE,GACxB,IAAIC,EAASD,GAAWf,EAGpBG,EDOe,SAAUS,GAAU,OAAOA,EAASA,EAAOF,OAAS,GCT1DO,CAAUD,GDQR,SAAUJ,GAAU,OAAOA,EAAOD,QCPxCO,CAAMF,GAGf,MAAO,CAAEb,IAAKA,EAAKgB,IADT,SAAUf,GAAQ,OAAOD,EAAMa,EAAOb,IAAIC,KAU9BL,CAAYc,aAAiBD,M,sVHLvD,SAAKQ,GACHA,+BACAA,2BAFF,CAAKA,MAAL,KAaA,IAAIC,EAAaC,wBAA+B,CAC9CC,GAD8C,6BAE9CC,UAF8C,EAG9CC,QAH8C,EAI9CC,aAAc,aACdC,UAAWP,EAAUQ,a,SAkBPC,K,QACdC,4BAAmBA,EAAA,IACnBL,Y,IACAE,qBAAYA,EAAAP,EAAUQ,aACtB/B,aAEI0B,EGzBQT,IAAc,GAAGX,I,EH0BG4B,mBAASD,GAApCN,OAAWE,OAEZf,EAAQqB,mBACV,iBAAO,CAAET,GAAF,EAAMC,UAAN,EAAiBE,aAAjB,EAA+BD,QAA/B,EAAwCE,eAC/C,CAACH,EAAWE,EAAcD,EAF5B,IAKA,OAAO,kBAACJ,EAAD,UAAqBV,MAAOA,GAAnC,GA4KFkB,M,SA/JgBI,G,IACd5B,UACAP,cACAoC,oBACAC,sB,IACAC,mBAAUA,EAAA,UACPC,6E,EAEmCC,qBAAWjB,GAA3CE,OAAIC,cAAWE,iBACjBa,EAASC,mBAEbC,qBAAU,WACiB,MAArBjB,IAAJ,IACE,SAAAe,EAAA,uBAED,CAACf,EAJJiB,IAMA,IAAIC,EAAsBV,mBAAQ,WAChC,MAAO,CAAC,EAENR,QAFK,QAAP,OAIC,CAAC1B,EAAWoC,EAAiBC,EAAmBX,EALnD,IAOImB,EAAmBX,mBAAQ,WAC7B,IAAIY,EAAJ,CAEAA,QAAuB,kBAAMlB,EAAN,KAMvB,MAJA,UAAIU,IACFQ,eAA4B,kBAAMlB,EAAN,KAG9B,IACC,CAACU,EAASV,EAVb,IAYA,OACEb,0CACEgC,IAAKN,EACLO,KAAK,M,gBACavB,MAAMlB,E,gBACTmB,IAAcnB,EAC7B0C,SAAUvB,SAA2B,EACrC1B,UAAW4C,GACPC,EARR,KA4HFd,W,SAlGgBmB,G,QACdC,GAAIC,WAAYA,EAAA,QAChB7C,UACAP,cACAoC,oBACAC,sBACGE,wE,EAEqBC,qBAAWjB,GAA7BE,OAAIC,cAENkB,EAAsBV,mBAAQ,WAChC,MAAO,CAAC,EAENR,QAFK,QAAP,OAIC,CAAC1B,EAAWoC,EAAiBC,EAAmBX,EALnD,IAOA,OACEX,mCACEsC,MAAK,KACAd,EADA,OAEHe,WAAY5B,gBAAkC,WAEhDD,GAAOA,EAAL,IAAWlB,EACbyC,KAAK,W,gBACUtB,IAAcnB,EAC7BP,UAAW4C,GATf,KAkFFb,U,SA7DgBwB,G,QAAUJ,GAAIC,WAAYA,EAAA,QAAUb,cAC9CiB,EAAad,mB,EACqCF,qBAAWjB,GAA3DK,iBAAcD,YAASD,cAAWG,cAEpC4B,EAAcC,uBAChB,YACE,IAAIC,EAAsC,CACxCC,IAAK,WACHhC,EAAaD,EAAbC,IAEFiC,KAAM,WACJjC,OAIAC,IAAcP,EAAlB,aACEqC,YAAoB,WAElB/B,EADeF,OAAqBA,EAArBA,EAAqCC,EAApD,IAIFgC,aAAqB,WAEnB/B,EADWF,MAA0BA,EAA1BA,EAAX,KAKAG,IAAcP,EAAlB,WACEqC,UAAkB,WAEhB/B,EADeF,OAAqBA,EAArBA,EAAqCC,EAApD,IAIFgC,YAAoB,WAElB/B,EADWF,MAA0BA,EAA1BA,EAAX,KAKJ,IAAIoC,EAASH,EAAQI,EAArB,KAEA,IACEA,mBACAD,OAGJ,CAAClC,EAAcF,EAAWC,EA1C5B,IAoDA,OAPAgB,qBAAU,WAGR,OAFAa,sCAEO,kBAAMA,sCAAN,MACN,CAJHb,IAOO5B,mCAAWgC,IAAKS,EAAYR,KAAK,WAAxC,KAMFjB,S,SA5MuBxB,GAGrB,MAAO,CACLyD,SAHkBxB,qBAAWjB,GAAzBG,YAGoBnB,IA0M5BwB,e,iCI/OA,qCAgBekC,IAZf,YAAiD,IAA1BC,EAAyB,EAAzBA,MAAiBC,EAAQ,EAAlBpE,SAC5B,OACE,kBAAC,OAAD,CAAMC,UAAU,oGACd,kBAAC,WAAD,CAAUA,UAAU,qBACjBmE,EACD,uBAAGnE,UAAU,uCAAuCkE,GACpD,kBAAC,IAAD,CAAoBlE,UAAU,mB,oBCVtC,OAOC,WACA,aAEA,IAAIoE,EAAS,GAAGC,eAEhB,SAASC,IAGR,IAFA,IAAIC,EAAU,GAELC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAC1C,IAAIG,EAAMF,UAAUD,GACpB,GAAKG,EAAL,CAEA,IAAIC,SAAiBD,EAErB,GAAgB,WAAZC,GAAoC,WAAZA,EAC3BL,EAAQM,KAAKF,QACP,GAAIG,MAAMC,QAAQJ,IAAQA,EAAID,OAAQ,CAC5C,IAAIM,EAAQV,EAAWW,MAAM,KAAMN,GAC/BK,GACHT,EAAQM,KAAKG,QAER,GAAgB,WAAZJ,EACV,IAAK,IAAIM,KAAOP,EACXP,EAAOe,KAAKR,EAAKO,IAAQP,EAAIO,IAChCX,EAAQM,KAAKK,IAMjB,OAAOX,EAAQa,KAAK,KAGgBC,EAAOC,SAC3ChB,EAAWiB,QAAUjB,EACrBe,EAAOC,QAAUhB,QAGX,kBACL,OAAOA,GADF,QAAe,OAAf,aAtCP,I,gCCPD,oBAuBekB,IArBf,YAA+C,IAA1BzF,EAAyB,EAAzBA,SAAU0F,EAAe,EAAfA,KAAMC,EAAS,EAATA,MACnC,OAAI3F,EAEA,yBAAKC,UAAU,qHACb,wBAAI2F,KAAM5F,EAAUC,UAAU,iBAC3BD,IAMJA,OAAL,EAEI,yBAAKC,UAAU,gIACb,6BAAMyF,GACN,6BAAMC,M,qFCACE,MAdf,YAAqD,IAAjC1B,EAAgC,EAAhCA,MAAOrD,EAAyB,EAAzBA,MAAiBsD,EAAQ,EAAlBpE,SAChC,OACE,kBAAC,OAAD,CAAM8F,SAAO,EAAC7F,UAAU,eACtB,kBAAC,WAAD,CAAUA,UAAU,qBACjBmE,EACD,6BACE,uBAAGnE,UAAU,0BAA0BkE,GACvC,uBAAGlE,UAAU,8CAA8Ca,O,oCCStDiF,MAhBf,YAKI,IAJIC,EAIL,EAJD5B,KAIC,IAHD6B,sBAGC,MAHgB,kBAGhB,MAFDC,oBAEC,MAFc,gBAEd,EADDjG,EACC,EADDA,UAIMkG,EAAM5B,IAFM,mBAEgB0B,EAAgBC,EAAcjG,GAChE,OACE,yBAAKA,UAAWkG,GACd,kBAACH,EAAD,CAAM/F,UAAU,c,SCyLPmG,UA1Kf,WACE,OACE,oCACE,kBAACX,EAAA,EAAD,cAEA,yBAAKxF,UAAU,iDACb,kBAACiE,EAAA,EAAD,CAAaC,MAAM,iBACjB,kBAAC,UAAD,CAASlE,UAAU,UAGrB,kBAACiE,EAAA,EAAD,CAAaC,MAAM,iBACjB,kBAAC,UAAD,CAASlE,UAAU,WAIvB,kBAACF,EAAA,EAAD,qBAEA,kBAAC,OAAD,CAAME,UAAU,kBACd,kBAAC,WAAD,KACE,kBAAC,IAAD,CAAU2B,QAAS,EAAGE,UAAWE,IAASF,UAAUC,YAClD,yBAAK9B,UAAU,gDACb,yBAAKA,UAAU,qBACb,kBAAC,IAASuD,QAAV,KACE,kBAAC,IAASpB,IAAV,CACE5B,MAAO,EACPP,UAAU,wDACVoC,gBAAgB,8BAChBC,kBAAkB,+BAJpB,SAQA,kBAAC,IAASF,IAAV,CACE5B,MAAO,EACPP,UAAU,wDACVoC,gBAAgB,8BAChBC,kBAAkB,+BAJpB,UASF,yBAAKrC,UAAU,0BAAf,WAEF,6BACE,kBAAC,SAAD,CAAQA,UAAU,2DAChB,8CAIN,kBAAC,IAASkD,SAAV,CACE3C,MAAO,EACPP,UAAU,+CACVoC,gBAAgB,yCAChBC,kBAAkB,qCAElB,kBAAC,iBAAD,CAAgBrC,UAAU,QACxB,kBAAC,QAAD,KACE,kBAAC,cAAD,KACE,4BACE,kBAAC,YAAD,eACA,kBAAC,YAAD,eACA,kBAAC,YAAD,eAGJ,kBAAC,YAAD,KACE,kBAAC,WAAD,KACE,kBAAC,YAAD,KACE,0BAAMA,UAAU,WAAhB,UAEF,kBAAC,YAAD,KACE,kBAAC,QAAD,CAAOoG,KAAK,WAAZ,WAEF,kBAAC,YAAD,mBAMV,kBAAC,IAASlD,SAAV,CACE3C,MAAO,EACPP,UAAU,6DACVoC,gBAAgB,yCAChBC,kBAAkB,qCAJpB,oBAYN,kBAACvC,EAAA,EAAD,0BAEA,kBAAC,OAAD,CAAM+F,SAAO,EAAC7F,UAAU,iCACtB,kBAAC,WAAD,KACE,uBAAGA,UAAU,sBAAb,0CAMJ,kBAACF,EAAA,EAAD,yBAEA,yBAAKE,UAAU,iDACb,kBAAC,EAAD,CAAUkE,MAAM,gBAAgBrD,MAAM,QACpC,kBAAC,EAAD,CACEsD,KAAMkC,aACNL,eAAe,kBACfC,aAAa,gBACbjG,UAAU,UAId,kBAAC,EAAD,CAAUkE,MAAM,kBAAkBrD,MAAM,eACtC,kBAAC,EAAD,CACEsD,KAAMmC,YACNN,eAAe,iBACfC,aAAa,eACbjG,UAAU,UAId,kBAAC,EAAD,CAAUkE,MAAM,YAAYrD,MAAM,OAChC,kBAAC,EAAD,CACEsD,KAAMoC,WACNP,eAAe,gBACfC,aAAa,cACbjG,UAAU,UAId,kBAAC,EAAD,CAAUkE,MAAM,mBAAmBrD,MAAM,MACvC,kBAAC,EAAD,CACEsD,KAAMqC,WACNR,eAAe,gBACfC,aAAa,cACbjG,UAAU,WAKhB,kBAACF,EAAA,EAAD,yBAEA,yBAAKE,UAAU,kCACb,kBAAC,OAAD,KACE,kBAAC,WAAD,KACE,uBAAGA,UAAU,oCAAb,WACA,uBAAGA,UAAU,iBAAb,yMASJ,kBAAC,OAAD,CAAM6F,SAAO,EAAC7F,UAAU,4BACtB,kBAAC,WAAD,KACE,uBAAGA,UAAU,sBAAb,gBACA","file":"static/js/14.1e097a69.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction SectionTitle({ children }) {\n  return <h2 className=\"mb-4 text-lg font-medium text-gray-200\">{children}</h2>;\n}\n\nexport default SectionTitle;\n","import React, {\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\n\nimport { useUID } from 'react-uid'\n\nenum Direction {\n  HORIZONTAL,\n  VERTICAL,\n}\n\ninterface TabContextValue {\n  id: string\n  activeTab: number\n  numTabs: number\n  setActiveTab(tab: number): void\n  direction: Direction\n}\n\nlet TabContext = createContext<TabContextValue>({\n  id: 'Please provide a unique id',\n  activeTab: 0,\n  numTabs: 0,\n  setActiveTab: () => {},\n  direction: Direction.HORIZONTAL,\n})\n\nexport function useTab(index: number) {\n  let { activeTab } = useContext(TabContext)\n\n  return {\n    isActive: activeTab === index,\n  }\n}\n\ninterface TabGroupProps {\n  initialActiveTab?: number\n  numTabs: number\n  children: React.ReactNode\n  direction?: Direction\n}\n\nexport function TabGroup({\n  initialActiveTab = 0,\n  numTabs,\n  direction = Direction.HORIZONTAL,\n  children,\n}: TabGroupProps) {\n  let id = useUID()\n  let [activeTab, setActiveTab] = useState(initialActiveTab)\n\n  let value = useMemo(\n    () => ({ id, activeTab, setActiveTab, numTabs, direction }),\n    [activeTab, setActiveTab, numTabs, direction]\n  )\n\n  return <TabContext.Provider value={value}>{children}</TabContext.Provider>\n}\n\ninterface TabProps {\n  index: number\n  className: string\n  activeClassName: string\n  inactiveClassName: string\n  trigger?: 'click' | 'hover' | 'none'\n  children?: React.ReactNode\n  [key: string]: any\n}\n\nexport function Tab({\n  index,\n  className,\n  activeClassName,\n  inactiveClassName,\n  trigger = 'click',\n  ...props\n}: TabProps) {\n  let { id, activeTab, setActiveTab } = useContext(TabContext)\n  let tabRef = useRef<HTMLButtonElement>()\n\n  useEffect(() => {\n    if (activeTab === index) {\n      tabRef.current?.focus()\n    }\n  }, [activeTab, index])\n\n  let calculatedClassName = useMemo(() => {\n    return [\n      className,\n      activeTab === index ? activeClassName : inactiveClassName,\n    ].join(' ')\n  }, [className, activeClassName, inactiveClassName, activeTab, index])\n\n  let interactionProps = useMemo(() => {\n    let interactions: any = {}\n\n    interactions.onClick = () => setActiveTab(index)\n\n    if (trigger === 'hover') {\n      interactions.onMouseEnter = () => setActiveTab(index)\n    }\n\n    return interactions\n  }, [trigger, setActiveTab, index])\n\n  return (\n    <button\n      ref={tabRef}\n      role=\"tab\"\n      aria-controls={`${id}-${index}`}\n      aria-selected={activeTab === index}\n      tabIndex={activeTab === index ? 0 : -1}\n      className={calculatedClassName}\n      {...interactionProps}\n      {...props}\n    />\n  )\n}\n\ntype HTMLTags = keyof JSX.IntrinsicElements\n\ninterface TabPanelProps {\n  as?: HTMLTags\n  index: number\n  className: string\n  activeClassName: string\n  inactiveClassName: string\n  children?: React.ReactNode\n  [key: string]: any\n}\n\nexport function TabPanel({\n  as: Component = 'div',\n  index,\n  className,\n  activeClassName,\n  inactiveClassName,\n  ...props\n}: TabPanelProps) {\n  let { id, activeTab } = useContext(TabContext)\n\n  let calculatedClassName = useMemo(() => {\n    return [\n      className,\n      activeTab === index ? activeClassName : inactiveClassName,\n    ].join(' ')\n  }, [className, activeClassName, inactiveClassName, activeTab, index])\n\n  return (\n    <Component\n      style={{\n        ...props.style,\n        visibility: activeTab === index ? 'visible' : 'hidden',\n      }}\n      id={`${id}-${index}`}\n      role=\"tabpanel\"\n      aria-expanded={activeTab === index}\n      className={calculatedClassName}\n      {...props}\n    />\n  )\n}\n\ninterface TabListProps {\n  as?: HTMLTags\n  children?: React.ReactNode\n  [key: string]: any\n}\n\nexport function TabList({ as: Component = 'div', ...props }: TabListProps) {\n  let tabListRef = useRef<any>()\n  let { setActiveTab, numTabs, activeTab, direction } = useContext(TabContext)\n\n  let handleKeyUp = useCallback(\n    (e: KeyboardEvent) => {\n      let actions: Record<string, () => void> = {\n        End: () => {\n          setActiveTab(numTabs - 1)\n        },\n        Home: () => {\n          setActiveTab(0)\n        },\n      }\n\n      if (direction === Direction.HORIZONTAL) {\n        actions.ArrowLeft = () => {\n          let previous = activeTab - 1 >= 0 ? activeTab - 1 : numTabs - 1\n          setActiveTab(previous)\n        }\n\n        actions.ArrowRight = () => {\n          let next = activeTab + 1 < numTabs ? activeTab + 1 : 0\n          setActiveTab(next)\n        }\n      }\n\n      if (direction === Direction.VERTICAL) {\n        actions.ArrowUp = () => {\n          let previous = activeTab - 1 >= 0 ? activeTab - 1 : numTabs - 1\n          setActiveTab(previous)\n        }\n\n        actions.ArrowDown = () => {\n          let next = activeTab + 1 < numTabs ? activeTab + 1 : 0\n          setActiveTab(next)\n        }\n      }\n\n      let action = actions[e.key]\n\n      if (action) {\n        e.preventDefault()\n        action()\n      }\n    },\n    [setActiveTab, activeTab, numTabs, direction]\n  )\n\n  useEffect(() => {\n    tabListRef.current.addEventListener('keyup', handleKeyUp)\n\n    return () => tabListRef.current.removeEventListener('keyup', handleKeyUp)\n  }, [handleKeyUp])\n\n  // @ts-ignore\n  return <Component ref={tabListRef} role=\"tablist\" {...props} />\n}\n\nTabGroup.Tab = Tab\nTabGroup.TabPanel = TabPanel\nTabGroup.TabList = TabList\nTabGroup.useTab = useTab\n\nTabGroup.direction = Direction\n","/**\n * generates a UID factory\n * @internal\n * @example\n * const uid = generateUID();\n * uid(object) = 1;\n * uid(object) = 1;\n * uid(anotherObject) = 2;\n */\nexport var generateUID = function () {\n    var counter = 1;\n    var map = new WeakMap();\n    /**\n     * @borrows {uid}\n     */\n    var uid = function (item, index) {\n        if (typeof item === 'number' ||\n            typeof item === 'string') {\n            return index ? \"idx-\" + index : \"val-\" + item;\n        }\n        if (!map.has(item)) {\n            map.set(item, counter++);\n            return uid(item);\n        }\n        return 'uid' + map.get(item);\n    };\n    return uid;\n};\n/**\n * @name uid\n * returns an UID associated with {item}\n * @param {Object} item - object to generate UID for\n * @param {Number} index, a fallback index\n * @example\n * uid(object) == 1;\n * uid(object) == 1;\n * uid(anotherObject) == 2;\n * uid(\"not object\", 42) == 42\n *\n * @see {@link useUID}\n */\nexport var uid = generateUID();\n","import * as React from 'react';\nimport { generateUID } from \"./uid\";\nexport var createSource = function (prefix) {\n    if (prefix === void 0) { prefix = ''; }\n    return ({\n        value: 1,\n        prefix: prefix,\n        uid: generateUID()\n    });\n};\nexport var counter = createSource();\nexport var source = React.createContext(createSource());\nexport var getId = function (source) { return source.value++; };\nexport var getPrefix = function (source) { return source ? source.prefix : ''; };\n","import * as React from \"react\";\nimport { counter, getId, getPrefix, source } from \"./context\";\nvar generateUID = function (context) {\n    var quartz = context || counter;\n    var prefix = getPrefix(quartz);\n    var id = getId(quartz);\n    var uid = prefix + id;\n    var gen = function (item) { return uid + quartz.uid(item); };\n    return { uid: uid, gen: gen };\n};\nvar useUIDState = function () {\n    if (process.env.NODE_ENV !== \"production\") {\n        if (!('useContext' in React)) {\n            throw new Error('Hooks API requires React 16.8+');\n        }\n    }\n    // @ts-ignore\n    return React.useState(generateUID(React.useContext(source)));\n};\n/**\n * returns and unique id. SSR friendly\n * returns {String}\n * @see {@link UIDConsumer}\n * @see https://github.com/thearnica/react-uid#hooks-168\n * @example\n * const id = useUID();\n * id == 1; // for example\n */\nexport var useUID = function () {\n    var uid = useUIDState()[0].uid;\n    return uid;\n};\n/**\n * returns an uid generator\n * @see {@link UIDConsumer}\n * @see https://github.com/thearnica/react-uid#hooks-168\n * @example\n * const uid = useUIDSeed();\n * return (\n *  <>\n *    <label for={seed('email')}>Email: </label>\n *    <input id={seed('email')} name=\"email\" />\n *    {data.map(item => <div key={seed(item)}>...</div>\n *  </>\n * )\n */\nexport var useUIDSeed = function () {\n    var gen = useUIDState()[0].gen;\n    return gen;\n};\n","import React from \"react\";\nimport { Card, CardBody } from \"@windmill/react-ui\";\nimport { VscArrowSmallRight } from \"react-icons/vsc\";\n\nfunction NetworkCard({ title, children: icon }) {\n  return (\n    <Card className=\"text-white border border-gray-900 cursor-pointer hover:border-primary-500 hover:text-primary-500\">\n      <CardBody className=\"flex items-center\">\n        {icon}\n        <p className=\"mr-4 text-lg font-medium text-white\">{title}</p>\n        <VscArrowSmallRight className=\"mt-1 wh-10\"></VscArrowSmallRight>\n      </CardBody>\n    </Card>\n  );\n}\n\nexport default NetworkCard;\n","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import React from \"react\";\n\nfunction PageTitle({ children, left, right }) {\n  if (children) {\n    return (\n      <div className=\"flex items-center justify-between px-8 pt-10 pb-8 mb-8 -mx-6 text-gray-100 border-b-2 border-gray-900 bg-gray-950\">\n        <h1 show={children} className=\"mb-3 text-2xl\">\n          {children}\n        </h1>\n      </div>\n    );\n  }\n\n  if (!children) {\n    return (\n      <div className=\"flex flex-wrap items-center justify-between px-12 pt-10 pb-8 mb-8 -mx-6 text-gray-100 border-b-2 border-gray-900 bg-gray-950\">\n        <div>{left}</div>\n        <div>{right}</div>\n      </div>\n    );\n  }\n}\n\nexport default PageTitle;\n","import React from \"react\";\nimport { Card, CardBody } from \"@windmill/react-ui\";\n\nfunction InfoCard({ title, value, children: icon }) {\n  return (\n    <Card colored className=\"bg-gray-500\">\n      <CardBody className=\"flex items-center\">\n        {icon}\n        <div>\n          <p className=\"font-medium text-white\">{title}</p>\n          <p className=\"text-2xl font-medium text-white opacity-75\">{value}</p>\n        </div>\n      </CardBody>\n    </Card>\n  );\n}\n\nexport default InfoCard;\n","import React from \"react\";\nimport classNames from \"classnames\";\n\nfunction RoundIcon({\n  icon: Icon,\n  iconColorClass = \"text-purple-100\",\n  bgColorClass = \"bg-purple-600\",\n  className,\n}) {\n  const baseStyle = \"p-3 rounded-full\";\n\n  const cls = classNames(baseStyle, iconColorClass, bgColorClass, className);\n  return (\n    <div className={cls}>\n      <Icon className=\"w-5 h-5\" />\n    </div>\n  );\n}\n\nexport default RoundIcon;\n","import React from \"react\";\n\nimport PageTitle from \"../components/Typography/PageTitle\";\nimport SectionTitle from \"../components/Typography/SectionTitle\";\n\nimport InfoCard from \"../components/Cards/InfoCard\";\nimport NetworkCard from \"../components/Cards/NetworkCard\";\nimport { Card, CardBody } from \"@windmill/react-ui\";\nimport {\n  CartIcon,\n  ChatIcon,\n  MoneyIcon,\n  PeopleIcon,\n  MainNet,\n  TestNet,\n} from \"../icons\";\nimport RoundIcon from \"../components/RoundIcon\";\nimport { TabGroup } from \"@statikly/funk\";\nimport {\n  Select,\n  Table,\n  TableHeader,\n  TableCell,\n  TableBody,\n  TableRow,\n  TableContainer,\n  Badge,\n} from \"@windmill/react-ui\";\n\nfunction Cards() {\n  return (\n    <>\n      <PageTitle>Cards</PageTitle>\n\n      <div className=\"grid gap-6 mb-8 md:grid-cols-2 xl:grid-cols-4\">\n        <NetworkCard title=\"Total clients\">\n          <TestNet className=\"mr-4\" />\n        </NetworkCard>\n\n        <NetworkCard title=\"Total clients\">\n          <MainNet className=\"mr-4\" />\n        </NetworkCard>\n      </div>\n\n      <SectionTitle>Tabbed Cards</SectionTitle>\n\n      <Card className=\"mb-8 shadow-md\">\n        <CardBody>\n          <TabGroup numTabs={3} direction={TabGroup.direction.HORIZONTAL}>\n            <div className=\"flex items-center justify-between text-white\">\n              <div className=\"flex items-center\">\n                <TabGroup.TabList>\n                  <TabGroup.Tab\n                    index={0}\n                    className=\"px-1 py-2 mr-3 text-xl transition-colors duration-150\"\n                    activeClassName=\"text-primary-500 text-white\"\n                    inactiveClassName=\"text-gray-400 text-gray-300\"\n                  >\n                    Tab 1\n                  </TabGroup.Tab>\n                  <TabGroup.Tab\n                    index={1}\n                    className=\"px-1 py-2 mr-3 text-xl transition-colors duration-150\"\n                    activeClassName=\"text-primary-500 text-white\"\n                    inactiveClassName=\"text-gray-400 text-gray-300\"\n                  >\n                    Tab 2\n                  </TabGroup.Tab>\n                </TabGroup.TabList>\n                <div className=\"ml-10 text-primary-500\">Export</div>\n              </div>\n              <div>\n                <Select className=\"py-1 pl-2 mt-1 bg-transparent border-gray-300 leading-1\">\n                  <option>Sort By</option>\n                </Select>\n              </div>\n            </div>\n            <TabGroup.TabPanel\n              index={0}\n              className=\"py-10 text-gray-200 transition-all transform\"\n              activeClassName=\"opacity-100 duration-500 translate-x-0\"\n              inactiveClassName=\"absolute opacity-0 -translate-x-2\"\n            >\n              <TableContainer className=\"mb-8\">\n                <Table>\n                  <TableHeader>\n                    <tr>\n                      <TableCell>Amount</TableCell>\n                      <TableCell>Status</TableCell>\n                      <TableCell>Date</TableCell>\n                    </tr>\n                  </TableHeader>\n                  <TableBody>\n                    <TableRow>\n                      <TableCell>\n                        <span className=\"text-sm\">$ 123</span>\n                      </TableCell>\n                      <TableCell>\n                        <Badge type=\"success\">Status</Badge>\n                      </TableCell>\n                      <TableCell>12345</TableCell>\n                    </TableRow>\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </TabGroup.TabPanel>\n            <TabGroup.TabPanel\n              index={1}\n              className=\"flex flex-col py-10 text-gray-200 transition-all transform\"\n              activeClassName=\"opacity-100 duration-500 translate-x-0\"\n              inactiveClassName=\"absolute opacity-0 -translate-x-2\"\n            >\n              Tab 2 Content\n            </TabGroup.TabPanel>\n          </TabGroup>\n        </CardBody>\n      </Card>\n\n      <SectionTitle>Big section cards</SectionTitle>\n\n      <Card colored className=\"mb-8 shadow-md bg-primary-500\">\n        <CardBody>\n          <p className=\"text-lg text-white\">\n            Large, full width sections goes here\n          </p>\n        </CardBody>\n      </Card>\n\n      <SectionTitle>Responsive cards</SectionTitle>\n\n      <div className=\"grid gap-6 mb-8 md:grid-cols-2 xl:grid-cols-4\">\n        <InfoCard title=\"Total clients\" value=\"6389\">\n          <RoundIcon\n            icon={PeopleIcon}\n            iconColorClass=\"text-orange-100\"\n            bgColorClass=\"bg-orange-500\"\n            className=\"mr-4\"\n          />\n        </InfoCard>\n\n        <InfoCard title=\"Account balance\" value=\"$ 46,760.89\">\n          <RoundIcon\n            icon={MoneyIcon}\n            iconColorClass=\"text-green-100\"\n            bgColorClass=\"bg-green-500\"\n            className=\"mr-4\"\n          />\n        </InfoCard>\n\n        <InfoCard title=\"New sales\" value=\"376\">\n          <RoundIcon\n            icon={CartIcon}\n            iconColorClass=\"text-blue-100\"\n            bgColorClass=\"bg-blue-500\"\n            className=\"mr-4\"\n          />\n        </InfoCard>\n\n        <InfoCard title=\"Pending contacts\" value=\"35\">\n          <RoundIcon\n            icon={ChatIcon}\n            iconColorClass=\"text-teal-100\"\n            bgColorClass=\"bg-teal-500\"\n            className=\"mr-4\"\n          />\n        </InfoCard>\n      </div>\n\n      <SectionTitle>Cards with title</SectionTitle>\n\n      <div className=\"grid gap-6 mb-8 md:grid-cols-2\">\n        <Card>\n          <CardBody>\n            <p className=\"mb-4 font-semibold text-gray-300\">Revenue</p>\n            <p className=\"text-gray-400\">\n              Lorem ipsum dolor sit, amet consectetur adipisicing elit. Fuga,\n              cum commodi a omnis numquam quod? Totam exercitationem quos hic\n              ipsam at qui cum numquam, sed amet ratione! Ratione, nihil\n              dolorum.\n            </p>\n          </CardBody>\n        </Card>\n\n        <Card colored className=\"text-white bg-purple-600\">\n          <CardBody>\n            <p className=\"mb-4 font-semibold\">Colored card</p>\n            <p>\n              Lorem ipsum dolor sit, amet consectetur adipisicing elit. Fuga,\n              cum commodi a omnis numquam quod? Totam exercitationem quos hic\n              ipsam at qui cum numquam, sed amet ratione! Ratione, nihil\n              dolorum.\n            </p>\n          </CardBody>\n        </Card>\n      </div>\n    </>\n  );\n}\n\nexport default Cards;\n"],"sourceRoot":""}