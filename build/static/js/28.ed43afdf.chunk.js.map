{"version":3,"sources":["../../src/Tabs.tsx","../node_modules/react-uid/dist/es2015/uid.js","../node_modules/react-uid/dist/es2015/context.js","../node_modules/react-uid/dist/es2015/hooks.js","components/Typography/PageTitle.js","pages/Tabs.js"],"names":["generateUID","counter","map","WeakMap","uid","item","index","has","get","set","createSource","prefix","value","source","React","useUIDState","context","quartz","getPrefix","getId","gen","Direction","TabContext","createContext","id","activeTab","numTabs","setActiveTab","direction","HORIZONTAL","TabGroup","initialActiveTab","children","useState","useMemo","Tab","className","activeClassName","inactiveClassName","trigger","props","useContext","tabRef","useRef","useEffect","calculatedClassName","interactionProps","interactions","ref","role","tabIndex","TabPanel","as","Component","style","visibility","TabList","tabListRef","handleKeyUp","useCallback","actions","End","Home","action","e","isActive","PageTitle","left","right","show","Cards"],"mappings":"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","file":"static/js/28.ed43afdf.chunk.js","sourcesContent":["import React, {\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\n\nimport { useUID } from 'react-uid'\n\nenum Direction {\n  HORIZONTAL,\n  VERTICAL,\n}\n\ninterface TabContextValue {\n  id: string\n  activeTab: number\n  numTabs: number\n  setActiveTab(tab: number): void\n  direction: Direction\n}\n\nlet TabContext = createContext<TabContextValue>({\n  id: 'Please provide a unique id',\n  activeTab: 0,\n  numTabs: 0,\n  setActiveTab: () => {},\n  direction: Direction.HORIZONTAL,\n})\n\nexport function useTab(index: number) {\n  let { activeTab } = useContext(TabContext)\n\n  return {\n    isActive: activeTab === index,\n  }\n}\n\ninterface TabGroupProps {\n  initialActiveTab?: number\n  numTabs: number\n  children: React.ReactNode\n  direction?: Direction\n}\n\nexport function TabGroup({\n  initialActiveTab = 0,\n  numTabs,\n  direction = Direction.HORIZONTAL,\n  children,\n}: TabGroupProps) {\n  let id = useUID()\n  let [activeTab, setActiveTab] = useState(initialActiveTab)\n\n  let value = useMemo(\n    () => ({ id, activeTab, setActiveTab, numTabs, direction }),\n    [activeTab, setActiveTab, numTabs, direction]\n  )\n\n  return <TabContext.Provider value={value}>{children}</TabContext.Provider>\n}\n\ninterface TabProps {\n  index: number\n  className: string\n  activeClassName: string\n  inactiveClassName: string\n  trigger?: 'click' | 'hover' | 'none'\n  children?: React.ReactNode\n  [key: string]: any\n}\n\nexport function Tab({\n  index,\n  className,\n  activeClassName,\n  inactiveClassName,\n  trigger = 'click',\n  ...props\n}: TabProps) {\n  let { id, activeTab, setActiveTab } = useContext(TabContext)\n  let tabRef = useRef<HTMLButtonElement>()\n\n  useEffect(() => {\n    if (activeTab === index) {\n      tabRef.current?.focus()\n    }\n  }, [activeTab, index])\n\n  let calculatedClassName = useMemo(() => {\n    return [\n      className,\n      activeTab === index ? activeClassName : inactiveClassName,\n    ].join(' ')\n  }, [className, activeClassName, inactiveClassName, activeTab, index])\n\n  let interactionProps = useMemo(() => {\n    let interactions: any = {}\n\n    interactions.onClick = () => setActiveTab(index)\n\n    if (trigger === 'hover') {\n      interactions.onMouseEnter = () => setActiveTab(index)\n    }\n\n    return interactions\n  }, [trigger, setActiveTab, index])\n\n  return (\n    <button\n      ref={tabRef}\n      role=\"tab\"\n      aria-controls={`${id}-${index}`}\n      aria-selected={activeTab === index}\n      tabIndex={activeTab === index ? 0 : -1}\n      className={calculatedClassName}\n      {...interactionProps}\n      {...props}\n    />\n  )\n}\n\ntype HTMLTags = keyof JSX.IntrinsicElements\n\ninterface TabPanelProps {\n  as?: HTMLTags\n  index: number\n  className: string\n  activeClassName: string\n  inactiveClassName: string\n  children?: React.ReactNode\n  [key: string]: any\n}\n\nexport function TabPanel({\n  as: Component = 'div',\n  index,\n  className,\n  activeClassName,\n  inactiveClassName,\n  ...props\n}: TabPanelProps) {\n  let { id, activeTab } = useContext(TabContext)\n\n  let calculatedClassName = useMemo(() => {\n    return [\n      className,\n      activeTab === index ? activeClassName : inactiveClassName,\n    ].join(' ')\n  }, [className, activeClassName, inactiveClassName, activeTab, index])\n\n  return (\n    <Component\n      style={{\n        ...props.style,\n        visibility: activeTab === index ? 'visible' : 'hidden',\n      }}\n      id={`${id}-${index}`}\n      role=\"tabpanel\"\n      aria-expanded={activeTab === index}\n      className={calculatedClassName}\n      {...props}\n    />\n  )\n}\n\ninterface TabListProps {\n  as?: HTMLTags\n  children?: React.ReactNode\n  [key: string]: any\n}\n\nexport function TabList({ as: Component = 'div', ...props }: TabListProps) {\n  let tabListRef = useRef<any>()\n  let { setActiveTab, numTabs, activeTab, direction } = useContext(TabContext)\n\n  let handleKeyUp = useCallback(\n    (e: KeyboardEvent) => {\n      let actions: Record<string, () => void> = {\n        End: () => {\n          setActiveTab(numTabs - 1)\n        },\n        Home: () => {\n          setActiveTab(0)\n        },\n      }\n\n      if (direction === Direction.HORIZONTAL) {\n        actions.ArrowLeft = () => {\n          let previous = activeTab - 1 >= 0 ? activeTab - 1 : numTabs - 1\n          setActiveTab(previous)\n        }\n\n        actions.ArrowRight = () => {\n          let next = activeTab + 1 < numTabs ? activeTab + 1 : 0\n          setActiveTab(next)\n        }\n      }\n\n      if (direction === Direction.VERTICAL) {\n        actions.ArrowUp = () => {\n          let previous = activeTab - 1 >= 0 ? activeTab - 1 : numTabs - 1\n          setActiveTab(previous)\n        }\n\n        actions.ArrowDown = () => {\n          let next = activeTab + 1 < numTabs ? activeTab + 1 : 0\n          setActiveTab(next)\n        }\n      }\n\n      let action = actions[e.key]\n\n      if (action) {\n        e.preventDefault()\n        action()\n      }\n    },\n    [setActiveTab, activeTab, numTabs, direction]\n  )\n\n  useEffect(() => {\n    tabListRef.current.addEventListener('keyup', handleKeyUp)\n\n    return () => tabListRef.current.removeEventListener('keyup', handleKeyUp)\n  }, [handleKeyUp])\n\n  // @ts-ignore\n  return <Component ref={tabListRef} role=\"tablist\" {...props} />\n}\n\nTabGroup.Tab = Tab\nTabGroup.TabPanel = TabPanel\nTabGroup.TabList = TabList\nTabGroup.useTab = useTab\n\nTabGroup.direction = Direction\n","/**\n * generates a UID factory\n * @internal\n * @example\n * const uid = generateUID();\n * uid(object) = 1;\n * uid(object) = 1;\n * uid(anotherObject) = 2;\n */\nexport var generateUID = function () {\n    var counter = 1;\n    var map = new WeakMap();\n    /**\n     * @borrows {uid}\n     */\n    var uid = function (item, index) {\n        if (typeof item === 'number' ||\n            typeof item === 'string') {\n            return index ? \"idx-\" + index : \"val-\" + item;\n        }\n        if (!map.has(item)) {\n            map.set(item, counter++);\n            return uid(item);\n        }\n        return 'uid' + map.get(item);\n    };\n    return uid;\n};\n/**\n * @name uid\n * returns an UID associated with {item}\n * @param {Object} item - object to generate UID for\n * @param {Number} index, a fallback index\n * @example\n * uid(object) == 1;\n * uid(object) == 1;\n * uid(anotherObject) == 2;\n * uid(\"not object\", 42) == 42\n *\n * @see {@link useUID}\n */\nexport var uid = generateUID();\n","import * as React from 'react';\nimport { generateUID } from \"./uid\";\nexport var createSource = function (prefix) {\n    if (prefix === void 0) { prefix = ''; }\n    return ({\n        value: 1,\n        prefix: prefix,\n        uid: generateUID()\n    });\n};\nexport var counter = createSource();\nexport var source = React.createContext(createSource());\nexport var getId = function (source) { return source.value++; };\nexport var getPrefix = function (source) { return source ? source.prefix : ''; };\n","import * as React from \"react\";\nimport { counter, getId, getPrefix, source } from \"./context\";\nvar generateUID = function (context) {\n    var quartz = context || counter;\n    var prefix = getPrefix(quartz);\n    var id = getId(quartz);\n    var uid = prefix + id;\n    var gen = function (item) { return uid + quartz.uid(item); };\n    return { uid: uid, gen: gen };\n};\nvar useUIDState = function () {\n    if (process.env.NODE_ENV !== \"production\") {\n        if (!('useContext' in React)) {\n            throw new Error('Hooks API requires React 16.8+');\n        }\n    }\n    // @ts-ignore\n    return React.useState(generateUID(React.useContext(source)));\n};\n/**\n * returns and unique id. SSR friendly\n * returns {String}\n * @see {@link UIDConsumer}\n * @see https://github.com/thearnica/react-uid#hooks-168\n * @example\n * const id = useUID();\n * id == 1; // for example\n */\nexport var useUID = function () {\n    var uid = useUIDState()[0].uid;\n    return uid;\n};\n/**\n * returns an uid generator\n * @see {@link UIDConsumer}\n * @see https://github.com/thearnica/react-uid#hooks-168\n * @example\n * const uid = useUIDSeed();\n * return (\n *  <>\n *    <label for={seed('email')}>Email: </label>\n *    <input id={seed('email')} name=\"email\" />\n *    {data.map(item => <div key={seed(item)}>...</div>\n *  </>\n * )\n */\nexport var useUIDSeed = function () {\n    var gen = useUIDState()[0].gen;\n    return gen;\n};\n","import React from \"react\";\n\nfunction PageTitle({ children, left, right }) {\n  if (children) {\n    return (\n      <div className=\"flex items-center justify-between px-8 pt-10 pb-8 mb-8 -mx-6 text-gray-100 border-b-2 border-gray-900 bg-gray-950\">\n        <h1 show={children} className=\"mb-3 text-2xl\">\n          {children}\n        </h1>\n      </div>\n    );\n  }\n\n  if (!children) {\n    return (\n      <div className=\"flex flex-wrap items-center justify-between px-12 pt-10 pb-8 mb-8 -mx-6 text-gray-100 border-b-2 border-gray-900 bg-gray-950\">\n        <div>{left}</div>\n        <div>{right}</div>\n      </div>\n    );\n  }\n}\n\nexport default PageTitle;\n","import React from \"react\";\n\nimport PageTitle from \"../components/Typography/PageTitle\";\nimport { TabGroup } from \"@statikly/funk\";\n\nfunction Cards() {\n  return (\n    <>\n      <PageTitle>Tabs</PageTitle>\n\n      <TabGroup numTabs={3} direction={TabGroup.direction.HORIZONTAL}>\n        <div className=\"flex items-center justify-between text-white\">\n          <TabGroup.TabList>\n            <TabGroup.Tab\n              index={0}\n              className=\"px-1 py-2 mr-3 text-xl transition-colors duration-150\"\n              activeClassName=\"text-primary-500 text-white\"\n              inactiveClassName=\"text-gray-400 text-gray-300\"\n            >\n              Tab 1\n            </TabGroup.Tab>\n            <TabGroup.Tab\n              index={1}\n              className=\"px-1 py-2 mr-3 text-xl transition-colors duration-150\"\n              activeClassName=\"text-primary-500 text-white\"\n              inactiveClassName=\"text-gray-400 text-gray-300\"\n            >\n              Tab 2\n            </TabGroup.Tab>\n          </TabGroup.TabList>\n          <div>export</div>\n          <div>Sort By</div>\n        </div>\n        <TabGroup.TabPanel\n          index={0}\n          className=\"py-10 text-gray-500 transition-all transform\"\n          activeClassName=\"opacity-100 duration-500 translate-x-0\"\n          inactiveClassName=\"absolute opacity-0 -translate-x-2\"\n        >\n          Tab 1 Content\n        </TabGroup.TabPanel>\n        <TabGroup.TabPanel\n          index={1}\n          className=\"flex flex-col py-10 text-gray-500 transition-all transform\"\n          activeClassName=\"opacity-100 duration-500 translate-x-0\"\n          inactiveClassName=\"absolute opacity-0 -translate-x-2\"\n        >\n          Tab 2 Content\n        </TabGroup.TabPanel>\n      </TabGroup>\n    </>\n  );\n}\n\nexport default Cards;\n"],"sourceRoot":""}