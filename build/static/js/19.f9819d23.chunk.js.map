{"version":3,"sources":["pages/stack-analytics/Transfers.js","../../src/Tabs.tsx","../node_modules/react-uid/dist/es2015/uid.js","../node_modules/react-uid/dist/es2015/context.js","../node_modules/react-uid/dist/es2015/hooks.js","components/right.js","assets/img/graph-transaction-fees.png","assets/img/graph-transfer-summary.png","components/Typography/PageTitle.js"],"names":["Left","className","Blank","useState","list","setList","prices","useSelector","state","history","useHistory","dispatch","useDispatch","useEffect","a","axios","get","data","console","log","results","fetch","length","left","right","class","numTabs","direction","TabGroup","HORIZONTAL","TabList","Tab","index","activeClassName","inactiveClassName","TabPanel","filter","value","undefined","token_transfer","map","key","onClick","e","tx","tx_id","type","UPDATETX","payload","push","Date","burn_block_time_iso","toLocaleDateString","block_height","sender_address","recipient_address","amount","stxusd","btcusd","generateUID","counter","WeakMap","uid","item","has","set","createSource","prefix","source","React","useUIDState","context","quartz","getPrefix","getId","gen","Direction","TabContext","createContext","id","activeTab","setActiveTab","initialActiveTab","children","useMemo","trigger","props","useContext","tabRef","useRef","calculatedClassName","interactionProps","interactions","ref","role","tabIndex","as","Component","style","visibility","tabListRef","handleKeyUp","useCallback","actions","End","Home","action","isActive","Right","liquidStxSupplyResult","toLocaleString","useGrouping","module","exports","PageTitle","show"],"mappings":"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","file":"static/js/19.f9819d23.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport PageTitle from \"../../components/Typography/PageTitle\";\n\nimport {\n  Card,\n  CardBody,\n  Select,\n  Table,\n  TableHeader,\n  TableCell,\n  TableBody,\n  TableRow,\n  TableContainer,\n} from \"@windmill/react-ui\";\nimport { FiDownload } from \"react-icons/fi\";\nimport { TabGroup } from \"@statikly/funk\";\nimport ts from \"../../assets/img/graph-transfer-summary.png\";\nimport tf from \"../../assets/img/graph-transaction-fees.png\";\nimport { Right } from \"../../components/right\";\nimport axios from \"axios\";\nimport { prices } from \"../../redux/reducers\";\nimport ThemedSuspense from \"../../components/ThemedSuspense\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { UPDATETX } from \"../../redux/reducers\";\n\nconst Left = () => {\n  return (\n    <>\n      <h1 className=\"mb-3 text-2xl\">Transfer Activity</h1>\n      <div>Dec 20, 2020 01:38</div>\n    </>\n  );\n};\n\nfunction Blank() {\n  const [list, setList] = useState([]);\n  const prices = useSelector((state) => state.prices);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const fetch = async () => {\n      const data = await axios.get(\n        `https://stacks-node-api.testnet.stacks.co/extended/v1/address/ST000000000000000000002AMW42H/transactions`\n      );\n      console.log(data.data);\n      setList(data.data.results);\n    };\n    fetch();\n  }, []);\n\n  const redirect = (tx) => {\n    console.log(tx);\n    dispatch({ type: UPDATETX, payload: tx });\n    history.push(\"/app/stack-analytics/transaction\");\n  };\n\n  if (list.length === 0) {\n    return <ThemedSuspense />;\n  }\n  return (\n    <>\n      <PageTitle left={<Left />} right={<Right />}></PageTitle>\n      <div className=\"p-4 space-y-6\">\n        <div className=\"grid grid-cols-1 mb-8 xl:gap-6 xl:grid-cols-3\">\n          <div class=\"col-span-2\">\n            <Card className=\"mb-8 shadow-md\">\n              <CardBody>\n                <TabGroup numTabs={3} direction={TabGroup.direction.HORIZONTAL}>\n                  <div className=\"flex items-center justify-between text-gray-400 dark:text-white\">\n                    <div className=\"flex items-center\">\n                      <TabGroup.TabList>\n                        <TabGroup.Tab\n                          index={0}\n                          className=\"px-1 py-2 mr-3 text-xl transition-colors duration-150\"\n                          activeClassName=\"text-primary-500 dark:text-white\"\n                          inactiveClassName=\"text-gray-400 dark:text-gray-300\"\n                        >\n                          Transfers\n                        </TabGroup.Tab>\n                        <TabGroup.Tab\n                          index={1}\n                          className=\"px-1 py-2 mr-3 text-xl transition-colors duration-150\"\n                          activeClassName=\"text-primary-500 dark:text-white\"\n                          inactiveClassName=\"text-gray-400 dark:text-gray-300\"\n                        >\n                          Largest Transfers\n                        </TabGroup.Tab>\n                      </TabGroup.TabList>\n                      <div className=\"flex items-center ml-10 text-primary-400\">\n                        <FiDownload />\n                        <span className=\"ml-1\">Export</span>\n                      </div>\n                    </div>\n                    {/* <div>\n                      <Select className=\"py-1 pl-2 mt-1 leading-1 dark:bg-transparent dark:border-gray-300\">\n                        <option>Sort By</option>\n                      </Select>\n                    </div> */}\n                  </div>\n                  <TabGroup.TabPanel\n                    index={0}\n                    className=\"py-10 text-gray-500 transition-all transform dark:text-gray-200\"\n                    activeClassName=\"opacity-100 duration-500 translate-x-0\"\n                    inactiveClassName=\"absolute opacity-0 -translate-x-2\"\n                  >\n                    <TableContainer className=\"mb-8\">\n                      <Table>\n                        <TableHeader>\n                          <tr>\n                            <TableCell>Date</TableCell>\n                            <TableCell>Block Height</TableCell>\n                            <TableCell>Sender</TableCell>\n                            <TableCell>Receiver</TableCell>\n                            <TableCell>Volume</TableCell>\n                          </tr>\n                        </TableHeader>\n                        <TableBody className=\"text-lg dark:divide-gray-500\">\n                          {list\n                            .filter((value) => {\n                              return value.token_transfer === undefined\n                                ? false\n                                : true;\n                            })\n                            .map((value, index) => {\n                              return (\n                                <TableRow\n                                  key={index}\n                                  onClick={(e) => redirect(value.tx_id)}\n                                >\n                                  <TableCell>\n                                    <div className=\"text-lg text-white\">\n                                      Today\n                                    </div>\n                                    <span className=\"text-sm\">\n                                      {new Date(\n                                        value.burn_block_time_iso\n                                      ).toLocaleDateString()}{\" \"}\n                                      GMT\n                                    </span>\n                                  </TableCell>\n                                  <TableCell>\n                                    <span className=\"text-white\">\n                                      {value.block_height}\n                                    </span>\n                                  </TableCell>\n                                  <TableCell>\n                                    {/* <div className=\"text-error-500\">Karim</div> */}\n                                    <span>{value.sender_address}</span>\n                                  </TableCell>\n                                  <TableCell>\n                                    {/* <div className=\"text-primary-500\">Karim</div> */}\n                                    <span>\n                                      {value.token_transfer.recipient_address}\n                                    </span>\n                                  </TableCell>\n                                  <TableCell>\n                                    <div className=\"float-right text-white\">\n                                      {value.token_transfer.amount} STX\n                                    </div>\n                                    <div className=\"float-right text-sm\">\n                                      <span className=\"text-warning-500\">\n                                        {(value.token_transfer.amount *\n                                          prices.stxusd) /\n                                          prices.btcusd}\n                                      </span>{\" \"}\n                                      BTC |{\" \"}\n                                      <span className=\"text-success-600\">\n                                        {value.token_transfer.amount *\n                                          prices.stxusd}\n                                      </span>{\" \"}\n                                      USD\n                                    </div>\n                                  </TableCell>\n                                </TableRow>\n                              );\n                            })}\n                        </TableBody>\n                      </Table>\n                    </TableContainer>\n                  </TabGroup.TabPanel>\n                  {/* <TabGroup.TabPanel\n                    index={1}\n                    className=\"flex flex-col py-10 text-gray-500 transition-all transform dark:text-gray-200\"\n                    activeClassName=\"opacity-100 duration-500 translate-x-0\"\n                    inactiveClassName=\"absolute opacity-0 -translate-x-2\"\n                  >\n                    Largest Transfers\n                  </TabGroup.TabPanel> */}\n                </TabGroup>\n              </CardBody>\n            </Card>\n          </div>\n          {/* <div className=\"space-y-6\">\n            <Card>\n              <CardBody className=\"-mb-8 space-y-8 text-white\">\n                <div className=\"flex flex-wrap justify-between\">\n                  <div className=\"flex flex-wrap items-center\">\n                    <h2 className=\"mr-3 text-xl font-medium\">Total balance</h2>\n                  </div>\n                  <div>\n                    <Select className=\"py-1 pl-2 mt-1 leading-1 dark:bg-transparent dark:border-gray-300\">\n                      <option>24 Hrs</option>\n                    </Select>\n                  </div>\n                </div>\n                <div className=\"pb-3 mb-3 border-b border-gray-500\">\n                  <div className=\"flex flex-wrap justify-between\">\n                    <div>Total Transfer</div>\n                    <div className=\"flex font-medium\">45459.59 STX</div>\n                  </div>\n                  <div className=\"flex flex-wrap justify-between text-sm text-gray-300\">\n                    <div className=\"flex\">Transfered with 1k txn</div>\n                    <span>\n                      <span className=\"text-yellow-500\">3.25</span> BTC |{\" \"}\n                      <span className=\"text-green-600\">245,635</span> USD\n                    </span>\n                  </div>\n                </div>\n                <img className=\"align-middle\" src={ts} alt=\"\" />\n              </CardBody>\n            </Card>\n            <Card>\n              <CardBody className=\"-mb-8 space-y-8 text-white\">\n                <h2 className=\"mr-3 text-xl font-medium\">Transaction fees</h2>\n                <img className=\"align-middle\" src={tf} alt=\"\" />\n              </CardBody>\n            </Card>\n          </div> */}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Blank;\n","import React, {\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\n\nimport { useUID } from 'react-uid'\n\nenum Direction {\n  HORIZONTAL,\n  VERTICAL,\n}\n\ninterface TabContextValue {\n  id: string\n  activeTab: number\n  numTabs: number\n  setActiveTab(tab: number): void\n  direction: Direction\n}\n\nlet TabContext = createContext<TabContextValue>({\n  id: 'Please provide a unique id',\n  activeTab: 0,\n  numTabs: 0,\n  setActiveTab: () => {},\n  direction: Direction.HORIZONTAL,\n})\n\nexport function useTab(index: number) {\n  let { activeTab } = useContext(TabContext)\n\n  return {\n    isActive: activeTab === index,\n  }\n}\n\ninterface TabGroupProps {\n  initialActiveTab?: number\n  numTabs: number\n  children: React.ReactNode\n  direction?: Direction\n}\n\nexport function TabGroup({\n  initialActiveTab = 0,\n  numTabs,\n  direction = Direction.HORIZONTAL,\n  children,\n}: TabGroupProps) {\n  let id = useUID()\n  let [activeTab, setActiveTab] = useState(initialActiveTab)\n\n  let value = useMemo(\n    () => ({ id, activeTab, setActiveTab, numTabs, direction }),\n    [activeTab, setActiveTab, numTabs, direction]\n  )\n\n  return <TabContext.Provider value={value}>{children}</TabContext.Provider>\n}\n\ninterface TabProps {\n  index: number\n  className: string\n  activeClassName: string\n  inactiveClassName: string\n  trigger?: 'click' | 'hover' | 'none'\n  children?: React.ReactNode\n  [key: string]: any\n}\n\nexport function Tab({\n  index,\n  className,\n  activeClassName,\n  inactiveClassName,\n  trigger = 'click',\n  ...props\n}: TabProps) {\n  let { id, activeTab, setActiveTab } = useContext(TabContext)\n  let tabRef = useRef<HTMLButtonElement>()\n\n  useEffect(() => {\n    if (activeTab === index) {\n      tabRef.current?.focus()\n    }\n  }, [activeTab, index])\n\n  let calculatedClassName = useMemo(() => {\n    return [\n      className,\n      activeTab === index ? activeClassName : inactiveClassName,\n    ].join(' ')\n  }, [className, activeClassName, inactiveClassName, activeTab, index])\n\n  let interactionProps = useMemo(() => {\n    let interactions: any = {}\n\n    interactions.onClick = () => setActiveTab(index)\n\n    if (trigger === 'hover') {\n      interactions.onMouseEnter = () => setActiveTab(index)\n    }\n\n    return interactions\n  }, [trigger, setActiveTab, index])\n\n  return (\n    <button\n      ref={tabRef}\n      role=\"tab\"\n      aria-controls={`${id}-${index}`}\n      aria-selected={activeTab === index}\n      tabIndex={activeTab === index ? 0 : -1}\n      className={calculatedClassName}\n      {...interactionProps}\n      {...props}\n    />\n  )\n}\n\ntype HTMLTags = keyof JSX.IntrinsicElements\n\ninterface TabPanelProps {\n  as?: HTMLTags\n  index: number\n  className: string\n  activeClassName: string\n  inactiveClassName: string\n  children?: React.ReactNode\n  [key: string]: any\n}\n\nexport function TabPanel({\n  as: Component = 'div',\n  index,\n  className,\n  activeClassName,\n  inactiveClassName,\n  ...props\n}: TabPanelProps) {\n  let { id, activeTab } = useContext(TabContext)\n\n  let calculatedClassName = useMemo(() => {\n    return [\n      className,\n      activeTab === index ? activeClassName : inactiveClassName,\n    ].join(' ')\n  }, [className, activeClassName, inactiveClassName, activeTab, index])\n\n  return (\n    <Component\n      style={{\n        ...props.style,\n        visibility: activeTab === index ? 'visible' : 'hidden',\n      }}\n      id={`${id}-${index}`}\n      role=\"tabpanel\"\n      aria-expanded={activeTab === index}\n      className={calculatedClassName}\n      {...props}\n    />\n  )\n}\n\ninterface TabListProps {\n  as?: HTMLTags\n  children?: React.ReactNode\n  [key: string]: any\n}\n\nexport function TabList({ as: Component = 'div', ...props }: TabListProps) {\n  let tabListRef = useRef<any>()\n  let { setActiveTab, numTabs, activeTab, direction } = useContext(TabContext)\n\n  let handleKeyUp = useCallback(\n    (e: KeyboardEvent) => {\n      let actions: Record<string, () => void> = {\n        End: () => {\n          setActiveTab(numTabs - 1)\n        },\n        Home: () => {\n          setActiveTab(0)\n        },\n      }\n\n      if (direction === Direction.HORIZONTAL) {\n        actions.ArrowLeft = () => {\n          let previous = activeTab - 1 >= 0 ? activeTab - 1 : numTabs - 1\n          setActiveTab(previous)\n        }\n\n        actions.ArrowRight = () => {\n          let next = activeTab + 1 < numTabs ? activeTab + 1 : 0\n          setActiveTab(next)\n        }\n      }\n\n      if (direction === Direction.VERTICAL) {\n        actions.ArrowUp = () => {\n          let previous = activeTab - 1 >= 0 ? activeTab - 1 : numTabs - 1\n          setActiveTab(previous)\n        }\n\n        actions.ArrowDown = () => {\n          let next = activeTab + 1 < numTabs ? activeTab + 1 : 0\n          setActiveTab(next)\n        }\n      }\n\n      let action = actions[e.key]\n\n      if (action) {\n        e.preventDefault()\n        action()\n      }\n    },\n    [setActiveTab, activeTab, numTabs, direction]\n  )\n\n  useEffect(() => {\n    tabListRef.current.addEventListener('keyup', handleKeyUp)\n\n    return () => tabListRef.current.removeEventListener('keyup', handleKeyUp)\n  }, [handleKeyUp])\n\n  // @ts-ignore\n  return <Component ref={tabListRef} role=\"tablist\" {...props} />\n}\n\nTabGroup.Tab = Tab\nTabGroup.TabPanel = TabPanel\nTabGroup.TabList = TabList\nTabGroup.useTab = useTab\n\nTabGroup.direction = Direction\n","/**\n * generates a UID factory\n * @internal\n * @example\n * const uid = generateUID();\n * uid(object) = 1;\n * uid(object) = 1;\n * uid(anotherObject) = 2;\n */\nexport var generateUID = function () {\n    var counter = 1;\n    var map = new WeakMap();\n    /**\n     * @borrows {uid}\n     */\n    var uid = function (item, index) {\n        if (typeof item === 'number' ||\n            typeof item === 'string') {\n            return index ? \"idx-\" + index : \"val-\" + item;\n        }\n        if (!map.has(item)) {\n            map.set(item, counter++);\n            return uid(item);\n        }\n        return 'uid' + map.get(item);\n    };\n    return uid;\n};\n/**\n * @name uid\n * returns an UID associated with {item}\n * @param {Object} item - object to generate UID for\n * @param {Number} index, a fallback index\n * @example\n * uid(object) == 1;\n * uid(object) == 1;\n * uid(anotherObject) == 2;\n * uid(\"not object\", 42) == 42\n *\n * @see {@link useUID}\n */\nexport var uid = generateUID();\n","import * as React from 'react';\nimport { generateUID } from \"./uid\";\nexport var createSource = function (prefix) {\n    if (prefix === void 0) { prefix = ''; }\n    return ({\n        value: 1,\n        prefix: prefix,\n        uid: generateUID()\n    });\n};\nexport var counter = createSource();\nexport var source = React.createContext(createSource());\nexport var getId = function (source) { return source.value++; };\nexport var getPrefix = function (source) { return source ? source.prefix : ''; };\n","import * as React from \"react\";\nimport { counter, getId, getPrefix, source } from \"./context\";\nvar generateUID = function (context) {\n    var quartz = context || counter;\n    var prefix = getPrefix(quartz);\n    var id = getId(quartz);\n    var uid = prefix + id;\n    var gen = function (item) { return uid + quartz.uid(item); };\n    return { uid: uid, gen: gen };\n};\nvar useUIDState = function () {\n    if (process.env.NODE_ENV !== \"production\") {\n        if (!('useContext' in React)) {\n            throw new Error('Hooks API requires React 16.8+');\n        }\n    }\n    // @ts-ignore\n    return React.useState(generateUID(React.useContext(source)));\n};\n/**\n * returns and unique id. SSR friendly\n * returns {String}\n * @see {@link UIDConsumer}\n * @see https://github.com/thearnica/react-uid#hooks-168\n * @example\n * const id = useUID();\n * id == 1; // for example\n */\nexport var useUID = function () {\n    var uid = useUIDState()[0].uid;\n    return uid;\n};\n/**\n * returns an uid generator\n * @see {@link UIDConsumer}\n * @see https://github.com/thearnica/react-uid#hooks-168\n * @example\n * const uid = useUIDSeed();\n * return (\n *  <>\n *    <label for={seed('email')}>Email: </label>\n *    <input id={seed('email')} name=\"email\" />\n *    {data.map(item => <div key={seed(item)}>...</div>\n *  </>\n * )\n */\nexport var useUIDSeed = function () {\n    var gen = useUIDState()[0].gen;\n    return gen;\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nexport const Right = () => {\n  const prices = useSelector((state) => state.prices);\n  return (\n    <>\n      <div className=\"text-gray-300 \">\n        <p className=\"mb-2\">Total Volume</p>\n        <div>\n          <b className=\"mr-2 text-3xl font-normal text-white\">\n            {prices.liquidStxSupplyResult} STX\n          </b>{\" \"}\n          <span>\n            <span className=\"text-yellow-500\">\n              {\" \"}\n              {(\n                (prices.stxusd * prices.liquidStxSupplyResult) /\n                prices.btcusd\n              ).toLocaleString(\"fullwide\", { useGrouping: false })}\n            </span>{\" \"}\n            BTC |{\" \"}\n            <span className=\"text-green-600\">\n              {\" \"}\n              {(\n                prices.stxusd * prices.liquidStxSupplyResult\n              ).toLocaleString(\"fullwide\", { useGrouping: false })}\n            </span>{\" \"}\n            USD\n          </span>\n        </div>\n      </div>\n    </>\n  );\n};\n","module.exports = __webpack_public_path__ + \"static/media/graph-transaction-fees.311a3ced.png\";","module.exports = __webpack_public_path__ + \"static/media/graph-transfer-summary.480e613c.png\";","import React from \"react\";\n\nfunction PageTitle({ children, left, right }) {\n  if (children) {\n    return (\n      <div className=\"flex items-center justify-between px-8 pt-10 pb-8 mb-8 -mx-6 text-gray-100 border-b-2 border-gray-900 bg-gray-950\">\n        <h1 show={children} className=\"mb-3 text-2xl\">\n          {children}\n        </h1>\n      </div>\n    );\n  }\n\n  if (!children) {\n    return (\n      <div className=\"flex flex-wrap items-center justify-between px-12 pt-10 pb-8 mb-8 -mx-6 text-gray-100 border-b-2 border-gray-900 bg-gray-950\">\n        <div>{left}</div>\n        <div>{right}</div>\n      </div>\n    );\n  }\n}\n\nexport default PageTitle;\n"],"sourceRoot":""}